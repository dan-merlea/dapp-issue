export declare enum TransactionServerStatusesEnum {
    pending = "pending",
    fail = "fail",
    invalid = "invalid",
    success = "success",
    executed = "executed",
    notExecuted = "not executed",
    rewardReverted = "reward-reverted"
}
export declare enum TransactionBatchStatusesEnum {
    signed = "signed",
    cancelled = "cancelled",
    success = "success",
    sent = "sent",
    fail = "fail",
    timedOut = "timedOut"
}
export declare enum LoginMethodsEnum {
    ledger = "ledger",
    walletconnect = "walletconnect",
    walletconnectv2 = "walletconnectv2",
    wallet = "wallet",
    extension = "extension",
    extra = "extra",
    none = ""
}
export declare enum NotificationTypesEnum {
    warning = "warning",
    error = "error",
    success = "success"
}
export declare enum TypesOfSmartContractCallsEnum {
    MultiESDTNFTTransfer = "MultiESDTNFTTransfer",
    ESDTNFTTransfer = "ESDTNFTTransfer"
}
export declare enum EnvironmentsEnum {
    testnet = "testnet",
    devnet = "devnet",
    mainnet = "mainnet"
}
export declare enum ToastsEnum {
    custom = "custom",
    transaction = "transaction"
}
export declare enum TransactionTypesEnum {
    MultiESDTNFTTransfer = "MultiESDTNFTTransfer",
    ESDTTransfer = "ESDTTransfer",
    ESDTNFTTransfer = "ESDTNFTTransfer",
    esdtTransaction = "esdtTransaction",
    nftTransaction = "nftTransaction",
    scCall = "scCall"
}
export declare enum TransactionsDefaultTitles {
    success = "Transaction successful",
    failed = "Transaction failed",
    pending = "Processing transaction",
    timedOut = "Transaction timed out"
}
export declare enum DappCoreWCV2CustomMethodsEnum {
    erd_cancelAction = "erd_cancelAction"
}
//# sourceMappingURL=enums.types.d.ts.map