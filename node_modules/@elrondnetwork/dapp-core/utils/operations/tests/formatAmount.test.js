"use strict";import{a as c}from"../../../__chunks__/chunk-46AMYGIB.js";import"../../../__chunks__/chunk-JBJD3IUJ.js";import"../../../__chunks__/chunk-QFTWB3KE.js";import"../../../__chunks__/chunk-HEFMRSX3.js";import"../../../__chunks__/chunk-27DX5WIQ.js";import"../../../__chunks__/chunk-X2JZA2ND.js";import"../../../__chunks__/chunk-ZNRXHZ7I.js";import"../../../__chunks__/chunk-C32UB6VS.js";import"../../../__chunks__/chunk-2I77CAI4.js";import"../../../__chunks__/chunk-U6VBIKWK.js";import"../../../__chunks__/chunk-3T6HAHQE.js";import"../../../__chunks__/chunk-3TSUQSLU.js";import"../../../__chunks__/chunk-7QE2X3X4.js";import"../../../__chunks__/chunk-Z7NVSMBD.js";import"../../../__chunks__/chunk-CLAJ4EPW.js";import"../../../__chunks__/chunk-TXKA5HXY.js";import"../../../__chunks__/chunk-P6M5SGWP.js";import{m}from"../../../__chunks__/chunk-HBP5N4FR.js";m();describe("format with 4,4",()=>{let t={"9999999999999999999999990000":"999,999,999,999,999,999,999,999",0:"0"},n=4,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!1,addCommas:!0});expect(i).toBe(o)})}});describe("format with 8,4",()=>{let t={"9999999999999999999899996000":"99,999,999,999,999,999,998.9999",0:"0",1e4:"0.0001"},n=8,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!1,addCommas:!0});expect(i).toBe(o)})}});describe("format with 0,0",()=>{let t={350:"350"},n=0,r=0;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!1});expect(i).toBe(o)})}});describe("format with 4,8,true",()=>{let t={"12345678901234567890123":"123,456,789,012,345.67890123"},n=8,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!0,addCommas:!0});expect(i).toBe(o)})}});describe("format with 18,0,true",()=>{let t={"102000000000000000":"0.102","100000000000000000":"0.1","1000000000000000000":"1"},n=18,r=0;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!0});expect(i).toBe(o)})}});describe("format with float throws error",()=>{let t={"0.015":"Throws error","01000000000000000000":"Throws error"},n=18,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i="";try{c({input:s,decimals:n,digits:r,addCommas:!1,showLastNonZeroDecimal:!0}),expect(i).toBeInstanceOf(Error)}catch(a){i=a,expect(i).toBeInstanceOf(Error),expect(a).toHaveProperty("message","Invalid input")}})}});describe("format with negative",()=>{let t={"-922506751086064008":"-0.922506751086064008","-578345000000000000000":"-578.3450","-1578345000000000000000":"-1,578.3450","-3456000000000000000":"-3.4560"},n=18,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!0,addCommas:!0});expect(i).toBe(o)})}});describe("format with single tests",()=>{it("should show less than if decimal amount is too low",()=>{let t=c({input:1e14 .toString(),digits:2,showIsLessThanDecimalsLabel:!0,showLastNonZeroDecimal:!1});expect(t).toBe("<0.01")}),it("should not show digits when result is below 1",()=>{let t=c({input:1e14 .toString(),showLastNonZeroDecimal:!1,digits:2});expect(t).toBe("0")}),it("should show zero digits for integers with decimal amount too low",()=>{let t=c({input:["1","000","000","001","000","000","000","000"].join(""),digits:2,showLastNonZeroDecimal:!1});expect(t).toBe("1000.00")}),it("should show a valid number if showLastNonZeroDecimal is set",()=>{let t=c({input:1e9 .toString(),digits:4,showLastNonZeroDecimal:!0});expect(t).toBe("0.000000001")}),it("should show remove digits and not add commas",()=>{let t=c({input:"369884288127092846270928",digits:4,showLastNonZeroDecimal:!1,addCommas:!1});expect(t).toBe("369884.2881")}),it("should not add . at the end for 0 digits",()=>{let t=c({input:"369884288127092846270928",digits:0,showLastNonZeroDecimal:!1,addCommas:!1});expect(t).toBe("369884")}),describe("should show all 4 digits",()=>{let t={"995000000000000000":"0.9950"},n=18,r=4;for(let e=0;e<Object.keys(t).length;e++){let s=Object.keys(t)[e],o=t[s];it(`format ${s} -> ${o}`,()=>{let i=c({input:s,decimals:n,digits:r,showLastNonZeroDecimal:!0,addCommas:!0});expect(i).toBe(o)})}})});
//# sourceMappingURL=formatAmount.test.js.map
