import { PayloadAction } from '@reduxjs/toolkit';
import { DappModalConfig } from '../../UI/DappModal/dappModal.types';
export interface ModalsSliceState {
    visible: boolean;
    modal: DappModalConfig;
}
export declare const dappModalsSlice: import("@reduxjs/toolkit").Slice<ModalsSliceState, {
    setDappModalVisibility: (state: ModalsSliceState, action: PayloadAction<boolean>) => void;
    setDappModalHeaderVisibility: (state: ModalsSliceState, action: PayloadAction<boolean>) => void;
    setDappModalFooterVisibility: (state: ModalsSliceState, action: PayloadAction<boolean>) => void;
    setDappModalHeaderText: (state: ModalsSliceState, action: PayloadAction<string>) => void;
    setDappModalFooterText: (state: ModalsSliceState, action: PayloadAction<string>) => void;
    setDappModalConfig: (state: ModalsSliceState, action: PayloadAction<DappModalConfig>) => void;
}, "dappModalsSlice">;
export declare const setDappModalVisibility: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, string>, setDappModalHeaderVisibility: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, string>, setDappModalFooterVisibility: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, string>, setDappModalHeaderText: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, string>, setDappModalFooterText: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, string>, setDappModalConfig: import("@reduxjs/toolkit").ActionCreatorWithPayload<DappModalConfig, string>;
declare const _default: import("redux").Reducer<ModalsSliceState, import("redux").AnyAction>;
export default _default;
//# sourceMappingURL=dappModalsSlice.d.ts.map