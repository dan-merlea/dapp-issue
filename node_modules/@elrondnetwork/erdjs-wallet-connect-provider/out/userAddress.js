"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserAddress = void 0;
const bech32 = __importStar(require("bech32"));
const errors_1 = require("./errors");
const HRP = "erd";
class UserAddress {
    constructor(value) {
        this.value = value;
    }
    static fromBech32(value) {
        let decoded;
        try {
            decoded = bech32.decode(value);
        }
        catch (err) {
            throw new errors_1.ErrBadAddress(value, err);
        }
        if (decoded.prefix != HRP) {
            throw new errors_1.ErrBadAddress(value);
        }
        return new UserAddress(value);
    }
    bech32() {
        return this.value;
    }
}
exports.UserAddress = UserAddress;
//# sourceMappingURL=userAddress.js.map