/// <reference types="node" />
import { TransactionStatus } from "./transactionStatus";
import { ContractResults } from "./contractResults";
import { IAddress } from "./interface";
import { TransactionLogs } from "./transactionLogs";
import { TransactionReceipt } from "./transactionReceipt";
export declare class TransactionOnNetwork {
    isCompleted: boolean;
    hash: string;
    type: string;
    nonce: number;
    round: number;
    epoch: number;
    value: string;
    receiver: IAddress;
    sender: IAddress;
    gasLimit: number;
    gasPrice: number;
    data: Buffer;
    signature: string;
    status: TransactionStatus;
    timestamp: number;
    blockNonce: number;
    hyperblockNonce: number;
    hyperblockHash: string;
    receipt: TransactionReceipt;
    contractResults: ContractResults;
    logs: TransactionLogs;
    constructor(init?: Partial<TransactionOnNetwork>);
    static fromProxyHttpResponse(txHash: string, response: any): TransactionOnNetwork;
    static fromApiHttpResponse(txHash: string, response: any): TransactionOnNetwork;
    private static fromHttpResponse;
    getDateTime(): Date;
}
