/// <reference types="node" />
import { BigNumber } from "bignumber.js";
import { IAddress } from "./interface";
export declare class DefinitionOfFungibleTokenOnNetwork {
    identifier: string;
    name: string;
    ticker: string;
    owner: IAddress;
    decimals: number;
    supply: BigNumber;
    isPaused: boolean;
    canUpgrade: boolean;
    canMint: boolean;
    canBurn: boolean;
    canChangeOwner: boolean;
    canPause: boolean;
    canFreeze: boolean;
    canWipe: boolean;
    canAddSpecialRoles: boolean;
    static fromApiHttpResponse(payload: any): DefinitionOfFungibleTokenOnNetwork;
    /**
     * The implementation has been moved here from the following location:
     * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts
     */
    static fromResponseOfGetTokenProperties(identifier: string, data: Buffer[]): DefinitionOfFungibleTokenOnNetwork;
}
export declare class DefinitionOfTokenCollectionOnNetwork {
    collection: string;
    type: string;
    name: string;
    ticker: string;
    owner: IAddress;
    decimals: number;
    canPause: boolean;
    canFreeze: boolean;
    canWipe: boolean;
    canTransferNftCreateRole: boolean;
    static fromApiHttpResponse(payload: any): DefinitionOfTokenCollectionOnNetwork;
    /**
     * The implementation has been moved here from the following location:
     * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts
     */
    static fromResponseOfGetTokenProperties(collection: string, data: Buffer[]): DefinitionOfTokenCollectionOnNetwork;
}
