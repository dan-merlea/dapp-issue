{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractQueryResponse = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar constants_1 = require(\"./constants\");\nvar ContractQueryResponse = /*#__PURE__*/function () {\n  function ContractQueryResponse(init) {\n    _classCallCheck(this, ContractQueryResponse);\n    this.returnData = (init === null || init === void 0 ? void 0 : init.returnData) || [];\n    this.returnCode = (init === null || init === void 0 ? void 0 : init.returnCode) || \"\";\n    this.returnMessage = (init === null || init === void 0 ? void 0 : init.returnMessage) || \"\";\n    this.gasUsed = (init === null || init === void 0 ? void 0 : init.gasUsed) || 0;\n  }\n  /**\n   * Constructs a QueryResponse object from a HTTP response (as returned by the provider).\n   */\n  _createClass(ContractQueryResponse, [{\n    key: \"getReturnDataParts\",\n    value: function getReturnDataParts() {\n      return this.returnData.map(function (item) {\n        return Buffer.from(item || \"\", \"base64\");\n      });\n    }\n    /**\n     * Converts the object to a pretty, plain JavaScript object.\n     */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        returnData: this.returnData,\n        returnCode: this.returnCode,\n        returnMessage: this.returnMessage,\n        gasUsed: this.gasUsed.valueOf()\n      };\n    }\n  }], [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(payload) {\n      var returnData = payload[\"returnData\"] || payload[\"ReturnData\"];\n      var returnCode = payload[\"returnCode\"] || payload[\"ReturnCode\"];\n      var returnMessage = payload[\"returnMessage\"] || payload[\"ReturnMessage\"];\n      var gasRemaining = new bignumber_js_1.default(payload[\"gasRemaining\"] || payload[\"GasRemaining\"] || 0);\n      var gasUsed = constants_1.MaxUint64AsBigNumber.minus(gasRemaining).toNumber();\n      return new ContractQueryResponse({\n        returnData: returnData,\n        returnCode: returnCode,\n        returnMessage: returnMessage,\n        gasUsed: gasUsed\n      });\n    }\n  }]);\n  return ContractQueryResponse;\n}();\nexports.ContractQueryResponse = ContractQueryResponse;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;AACA;AAAmD,IAEtCA,qBAAqB;EAM9B,+BAAYC,IAAqC;IAAA;IAC7C,IAAI,CAACC,UAAU,GAAG,KAAI,aAAJD,IAAI,uBAAJA,IAAI,CAAEC,UAAU,KAAI,EAAE;IACxC,IAAI,CAACC,UAAU,GAAG,KAAI,aAAJF,IAAI,uBAAJA,IAAI,CAAEE,UAAU,KAAI,EAAE;IACxC,IAAI,CAACC,aAAa,GAAG,KAAI,aAAJH,IAAI,uBAAJA,IAAI,CAAEG,aAAa,KAAI,EAAE;IAC9C,IAAI,CAACC,OAAO,GAAG,KAAI,aAAJJ,IAAI,uBAAJA,IAAI,CAAEI,OAAO,KAAI,CAAC;EACrC;EAEA;;;EAAA;IAAA;IAAA,OAkBA,8BAAkB;MACd,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,UAACC,IAAI;QAAA,OAAKC,MAAM,CAACC,IAAI,CAACF,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC;MAAA,EAAC;IAC3E;IAEA;;;EAAA;IAAA;IAAA,OAGA,kBAAM;MACF,OAAO;QACHL,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,aAAa,EAAE,IAAI,CAACA,aAAa;QACjCC,OAAO,EAAE,IAAI,CAACA,OAAO,CAACK,OAAO;OAChC;IACL;EAAC;IAAA;IAAA,OA7BD,0BAAwBC,OAAY;MAChC,IAAIT,UAAU,GAAaS,OAAO,CAAC,YAAY,CAAC,IAAIA,OAAO,CAAC,YAAY,CAAC;MACzE,IAAIR,UAAU,GAAGQ,OAAO,CAAC,YAAY,CAAC,IAAIA,OAAO,CAAC,YAAY,CAAC;MAC/D,IAAIP,aAAa,GAAGO,OAAO,CAAC,eAAe,CAAC,IAAIA,OAAO,CAAC,eAAe,CAAC;MACxE,IAAIC,YAAY,GAAG,IAAIC,sBAAS,CAACF,OAAO,CAAC,cAAc,CAAC,IAAIA,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;MACzF,IAAIN,OAAO,GAAGS,gCAAoB,CAACC,KAAK,CAACH,YAAY,CAAC,CAACI,QAAQ,EAAE;MAEjE,OAAO,IAAIhB,qBAAqB,CAAC;QAC7BE,UAAU,EAAEA,UAAU;QACtBC,UAAU,EAAEA,UAAU;QACtBC,aAAa,EAAEA,aAAa;QAC5BC,OAAO,EAAEA;OACZ,CAAC;IACN;EAAC;EAAA;AAAA;AA7BLY","names":["ContractQueryResponse","init","returnData","returnCode","returnMessage","gasUsed","map","item","Buffer","from","valueOf","payload","gasRemaining","bignumber_js_1","constants_1","minus","toNumber","exports"],"sourceRoot":"","sources":["../src/contractQueryResponse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}