{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeMetadata = void 0;\n/**\n * The metadata of a Smart Contract, as an abstraction.\n */\nvar CodeMetadata = /*#__PURE__*/function () {\n  /**\n   * Creates a metadata object. By default, set the `upgradeable` attribute, and uset all others.\n   *\n   * @param upgradeable Whether the contract is upgradeable\n   * @param readable Whether other contracts can read this contract's data (without calling one of its pure functions)\n   * @param payable Whether the contract is payable\n   * @param payableBySc Whether the contract is payable by other smart contracts\n   */\n  function CodeMetadata() {\n    var upgradeable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var readable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var payable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var payableBySc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    _classCallCheck(this, CodeMetadata);\n    this.upgradeable = upgradeable;\n    this.readable = readable;\n    this.payable = payable;\n    this.payableBySc = payableBySc;\n  }\n  /**\n   * Adjust the metadata (the `upgradeable` attribute), when preparing the deployment transaction.\n   */\n  _createClass(CodeMetadata, [{\n    key: \"toggleUpgradeable\",\n    value: function toggleUpgradeable(value) {\n      this.upgradeable = value;\n    }\n    /**\n     * Adjust the metadata (the `readable` attribute), when preparing the deployment transaction.\n     */\n  }, {\n    key: \"toggleReadable\",\n    value: function toggleReadable(value) {\n      this.readable = value;\n    }\n    /**\n     * Adjust the metadata (the `payable` attribute), when preparing the deployment transaction.\n     */\n  }, {\n    key: \"togglePayable\",\n    value: function togglePayable(value) {\n      this.payable = value;\n    }\n    /**\n     * Adjust the metadata (the `payableBySc` attribute), when preparing the deployment transaction.\n     */\n  }, {\n    key: \"togglePayableBySc\",\n    value: function togglePayableBySc(value) {\n      this.payableBySc = value;\n    }\n    /**\n     * Converts the metadata to the protocol-friendly representation.\n     */\n  }, {\n    key: \"toBuffer\",\n    value: function toBuffer() {\n      var byteZero = 0;\n      var byteOne = 0;\n      if (this.upgradeable) {\n        byteZero |= ByteZero.Upgradeable;\n      }\n      if (this.readable) {\n        byteZero |= ByteZero.Readable;\n      }\n      if (this.payable) {\n        byteOne |= ByteOne.Payable;\n      }\n      if (this.payableBySc) {\n        byteOne |= ByteOne.PayableBySc;\n      }\n      return Buffer.from([byteZero, byteOne]);\n    }\n    /**\n     * Converts the metadata to a hex-encoded string.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.toBuffer().toString(\"hex\");\n    }\n    /**\n     * Converts the metadata to a pretty, plain JavaScript object.\n     */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        upgradeable: this.upgradeable,\n        readable: this.readable,\n        payable: this.payable,\n        payableBySc: this.payableBySc\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.upgradeable == other.upgradeable && this.readable == other.readable && this.payable == other.payable && this.payableBySc == other.payableBySc;\n    }\n  }]);\n  return CodeMetadata;\n}();\nexports.CodeMetadata = CodeMetadata;\nvar ByteZero;\n(function (ByteZero) {\n  ByteZero[ByteZero[\"Upgradeable\"] = 1] = \"Upgradeable\";\n  ByteZero[ByteZero[\"Reserved2\"] = 2] = \"Reserved2\";\n  ByteZero[ByteZero[\"Readable\"] = 4] = \"Readable\";\n})(ByteZero || (ByteZero = {}));\nvar ByteOne;\n(function (ByteOne) {\n  ByteOne[ByteOne[\"Reserved1\"] = 1] = \"Reserved1\";\n  ByteOne[ByteOne[\"Payable\"] = 2] = \"Payable\";\n  ByteOne[ByteOne[\"PayableBySc\"] = 4] = \"PayableBySc\";\n})(ByteOne || (ByteOne = {}));","map":{"version":3,"mappings":";;;;;;;;AAAA;;;AAAA,IAGaA,YAAY;EAMrB;;;;;;;;EAQA,wBAA0H;IAAA,IAA9GC,kFAAuB,IAAI;IAAA,IAAEC,+EAAoB,KAAK;IAAA,IAAEC,8EAAmB,KAAK;IAAA,IAAEC,kFAAuB,KAAK;IAAA;IACtH,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;EAEA;;;EAAA;IAAA;IAAA,OAGA,2BAAkBC,KAAc;MAC5B,IAAI,CAACJ,WAAW,GAAGI,KAAK;IAC5B;IAEA;;;EAAA;IAAA;IAAA,OAGA,wBAAeA,KAAc;MACzB,IAAI,CAACH,QAAQ,GAAGG,KAAK;IACzB;IAEA;;;EAAA;IAAA;IAAA,OAGA,uBAAcA,KAAc;MACxB,IAAI,CAACF,OAAO,GAAGE,KAAK;IACxB;IAEA;;;EAAA;IAAA;IAAA,OAGA,2BAAkBA,KAAc;MAC5B,IAAI,CAACD,WAAW,GAAGC,KAAK;IAC5B;IAEA;;;EAAA;IAAA;IAAA,OAGA,oBAAQ;MACJ,IAAIC,QAAQ,GAAG,CAAC;MAChB,IAAIC,OAAO,GAAG,CAAC;MAEf,IAAI,IAAI,CAACN,WAAW,EAAE;QAClBK,QAAQ,IAAIE,QAAQ,CAACC,WAAW;;MAEpC,IAAI,IAAI,CAACP,QAAQ,EAAE;QACfI,QAAQ,IAAIE,QAAQ,CAACE,QAAQ;;MAEjC,IAAI,IAAI,CAACP,OAAO,EAAE;QACdI,OAAO,IAAII,OAAO,CAACC,OAAO;;MAE9B,IAAI,IAAI,CAACR,WAAW,EAAE;QAClBG,OAAO,IAAII,OAAO,CAACE,WAAW;;MAGlC,OAAOC,MAAM,CAACC,IAAI,CAAC,CAACT,QAAQ,EAAEC,OAAO,CAAC,CAAC;IAC3C;IAEA;;;EAAA;IAAA;IAAA,OAGA,oBAAQ;MACJ,OAAO,IAAI,CAACS,QAAQ,EAAE,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC1C;IAEA;;;EAAA;IAAA;IAAA,OAGA,kBAAM;MACF,OAAO;QACHhB,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,WAAW,EAAE,IAAI,CAACA;OACrB;IACL;EAAC;IAAA;IAAA,OAED,gBAAOc,KAAmB;MACtB,OAAO,IAAI,CAACjB,WAAW,IAAIiB,KAAK,CAACjB,WAAW,IACxC,IAAI,CAACC,QAAQ,IAAIgB,KAAK,CAAChB,QAAQ,IAC/B,IAAI,CAACC,OAAO,IAAIe,KAAK,CAACf,OAAO,IAC7B,IAAI,CAACC,WAAW,IAAIc,KAAK,CAACd,WAAW;IAC7C;EAAC;EAAA;AAAA;AAhGLe;AAmGA,IAAKX,QAIJ;AAJD,WAAKA,QAAQ;EACTA,qDAAe;EACfA,iDAAa;EACbA,+CAAY;AAChB,CAAC,EAJIA,QAAQ,KAARA,QAAQ;AAMb,IAAKG,OAIJ;AAJD,WAAKA,OAAO;EACRA,+CAAa;EACbA,2CAAW;EACXA,mDAAe;AACnB,CAAC,EAJIA,OAAO,KAAPA,OAAO","names":["CodeMetadata","upgradeable","readable","payable","payableBySc","value","byteZero","byteOne","ByteZero","Upgradeable","Readable","ByteOne","Payable","PayableBySc","Buffer","from","toBuffer","toString","other","exports"],"sourceRoot":"","sources":["../../src/smartcontracts/codeMetadata.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}