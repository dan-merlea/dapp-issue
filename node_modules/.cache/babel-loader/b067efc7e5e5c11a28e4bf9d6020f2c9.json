{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { Constants } from \"@krogan/common\";\nimport { Client } from \"colyseus.js\";\nimport { useEffect } from \"react\";\nimport { useRoomDispatch } from \"context/room\";\nimport { serverUrl } from \"utils/server\";\nimport { playerManager } from 'managers';\nimport { useContextRef } from \"hooks/useContextRef\";\nimport { useCoreContext } from \"core\";\nexport var useMapManager = function useMapManager(appManager, mapManager, eventHandler) {\n  _s();\n  var _useContextRef = useContextRef(),\n    _useContextRef2 = _slicedToArray(_useContextRef, 2),\n    _useContextRef2$ = _useContextRef2[0],\n    mapRoom = _useContextRef2$.mapRoom,\n    player = _useContextRef2$.player,\n    contextRef = _useContextRef2[1];\n  var _useCoreContext = useCoreContext(),\n    account = _useCoreContext.account,\n    address = _useCoreContext.address;\n  var dispatch = useRoomDispatch();\n  var client = new Client(serverUrl());\n  var timer = null;\n\n  // LIFECYCLE\n  useEffect(function () {\n    // Start players refresh listeners\n    if (timer) return;\n    timer = setInterval(updateRoom, Constants.PLAYERS_REFRESH);\n    return function cleanup() {\n      deinit();\n    };\n  }, []);\n\n  // Called when assets are loaded\n  var joinMapRoom = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!player || !account)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", console.error(\"Something went wrong with the account!\"));\n            case 2:\n              options = {\n                address: address\n              };\n              client.joinOrCreate(player.team, options).then(function (mapRoom) {\n                dispatch({\n                  type: 'setMapRoom',\n                  mapRoom: mapRoom\n                });\n              }).catch(function (err) {\n                console.error(err);\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function joinMapRoom() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (!mapRoom) return;\n    console.log(\"Connected to map: \".concat(mapRoom.id));\n    setupMapRoomHandlers();\n    setupGameHandlers();\n  }, [mapRoom]);\n\n  // HANDLERS: MapManager\n\n  var sendToServer = function sendToServer(action) {\n    if (!mapRoom) return;\n    mapRoom.send(action.type, action);\n  };\n\n  // HANDLERS: Game Events\n\n  var setupGameHandlers = function setupGameHandlers() {\n    // Listen to Game events\n    eventHandler.on('warpInitiate', initiateWarp);\n    eventHandler.on('warpSpaceship', warpSpaceship);\n    eventHandler.on('hexClick', openTileDetails);\n    eventHandler.on('hexExplore', exploreTile);\n    eventHandler.on('back', returnToMap);\n    eventHandler.on('setZoom', setZoom);\n    eventHandler.on('closePopup', closePopup);\n    eventHandler.on('spaceshipClick', openSpaceshipDetails);\n  };\n  var deinit = function deinit() {\n    // Colyseus\n    if (mapRoom) mapRoom.leave();\n\n    // Stop refresh listeners\n    if (timer) clearInterval(timer);\n\n    // Clear game listeners\n    eventHandler.remove('warpInitiate', warpSpaceship);\n    eventHandler.remove('warpSpaceship', warpSpaceship);\n    eventHandler.remove('hexClick', openTileDetails);\n    eventHandler.remove('hexExplore', exploreTile);\n    eventHandler.remove('back', returnToMap);\n    eventHandler.remove('setZoom', setZoom);\n    eventHandler.remove('spaceshipClick', openSpaceshipDetails);\n    eventHandler.remove('closePopup', closePopup);\n  };\n  var setupMapRoomHandlers = function setupMapRoomHandlers() {\n    if (!mapRoom) return;\n    // Set current player\n    playerManager.playerId = mapRoom.sessionId;\n    dispatch({\n      type: 'setPlayerId',\n      playerId: mapRoom.sessionId\n    });\n    mapManager.setState(mapRoom.state);\n\n    // Listen for state changes\n    mapRoom.onMessage('broadcast', handleMessage);\n  };\n\n  // Spaceship\n  var openSpaceshipDetails = function openSpaceshipDetails(value) {\n    dispatch({\n      type: 'setSelectedSpaceship',\n      spaceship: value\n    });\n  };\n  var closePopup = function closePopup() {\n    dispatch({\n      type: 'setSelectedSpaceship',\n      spaceship: undefined\n    });\n    dispatch({\n      type: 'setSelectedTile',\n      tile: undefined\n    });\n  };\n\n  // Hex & Map\n  var setZoom = function setZoom(value) {\n    appManager.setZoomLevel(value);\n  };\n  var returnToMap = function returnToMap() {\n    dispatch({\n      type: 'setBackButton',\n      visible: false\n    });\n    mapManager.returnToMap();\n  };\n\n  // Enter hex\n  var exploreTile = function exploreTile(value) {\n    dispatch({\n      type: 'setBackButton',\n      visible: true\n    });\n    closePopup();\n    mapManager.exploreTile(value);\n  };\n\n  // Open menu box for hex details\n  var openTileDetails = function openTileDetails(tile) {\n    dispatch({\n      type: 'setSelectedTile',\n      tile: tile\n    });\n  };\n\n  // Warp\n  var initiateWarp = function initiateWarp(value) {\n    var _contextRef$current;\n    var hud = (_contextRef$current = contextRef.current) === null || _contextRef$current === void 0 ? void 0 : _contextRef$current.hud;\n    if (!hud) return;\n    if (hud.selectedTile) {\n      mapManager.setSelectedSpaceship(value);\n      closePopup();\n    } else if (hud.selectedSpaceship) {\n      closePopup();\n      returnToMap();\n      mapManager.setSelectedSpaceship(value);\n    }\n  };\n  var warpSpaceship = function warpSpaceship(value) {\n    var _ref2 = contextRef.current,\n      hud = _ref2.hud;\n\n    // In case the warp is for current controller spaceship\n    // Reset everything\n    if (hud.controlledSpaceship && hud.controlledSpaceship.nonce == value.nonce) {\n      appManager.stopSpaceshipControl();\n      dispatch({\n        type: 'setControlledSpaceship',\n        spaceship: undefined\n      });\n    }\n    sendToServer({\n      type: 'warp',\n      ts: Date.now(),\n      nonce: value.nonce,\n      value: value\n    });\n  };\n\n  // HANDLERS: Colyseus\n\n  var handleMessage = function handleMessage(message) {};\n\n  // METHODS\n\n  var updateRoom = function updateRoom() {\n    var stats = mapManager.getStats();\n    dispatch({\n      type: 'setStats',\n      stats: stats\n    });\n  };\n  var leave = function leave() {\n    mapRoom === null || mapRoom === void 0 ? void 0 : mapRoom.leave();\n  };\n  return {\n    joinMapRoom: joinMapRoom,\n    mapManager: mapManager,\n    leave: leave\n  };\n};\n_s(useMapManager, \"DVFiSNcrmCrmJqx61bAlnBq4cBE=\", false, function () {\n  return [useContextRef, useCoreContext, useRoomDispatch];\n});","map":{"version":3,"names":["Constants","Client","useEffect","useRoomDispatch","serverUrl","playerManager","useContextRef","useCoreContext","useMapManager","appManager","mapManager","eventHandler","mapRoom","player","contextRef","account","address","dispatch","client","timer","setInterval","updateRoom","PLAYERS_REFRESH","cleanup","deinit","joinMapRoom","console","error","options","joinOrCreate","team","then","type","catch","err","log","id","setupMapRoomHandlers","setupGameHandlers","sendToServer","action","send","on","initiateWarp","warpSpaceship","openTileDetails","exploreTile","returnToMap","setZoom","closePopup","openSpaceshipDetails","leave","clearInterval","remove","playerId","sessionId","setState","state","onMessage","handleMessage","value","spaceship","undefined","tile","setZoomLevel","visible","hud","current","selectedTile","setSelectedSpaceship","selectedSpaceship","controlledSpaceship","nonce","stopSpaceshipControl","ts","Date","now","message","stats","getStats"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/rooms/useMapManager.ts"],"sourcesContent":["import { Constants, EventHandler, Models } from \"@krogan/common\"\nimport { Types } from \"@krogan/common\"\nimport { Client, Room } from \"colyseus.js\"\nimport { useEffect } from \"react\"\nimport { useRoomDispatch } from \"context/room\"\nimport { MapState } from \"state/MapState\"\nimport { serverUrl } from \"utils/server\"\nimport { MapSpaceshipSprite, TileContainer } from \"sprites\"\nimport { Spaceship } from 'state/Spaceship';\nimport { MapManager, playerManager } from 'managers';\nimport { useContextRef } from \"hooks/useContextRef\"\nimport { IAppManager } from \"managers/AppManager\"\nimport { StateType } from \"context/room/room.state\"\nimport { useCoreContext } from \"core\"\n\nexport const useMapManager = (appManager: IAppManager, mapManager: MapManager, eventHandler: EventHandler) => {\n\n\tconst [{ mapRoom, player }, contextRef] = useContextRef()\n    const { account, address } = useCoreContext()\n\tconst dispatch = useRoomDispatch()\n\tconst client = new Client(serverUrl())\n\n\tlet timer: NodeJS.Timeout | null = null\n\n\t// LIFECYCLE\n    useEffect(() => {\n        // Start players refresh listeners\n        if (timer) return\n        timer = setInterval(updateRoom, Constants.PLAYERS_REFRESH)\n        \n        return function cleanup() {\n            deinit()\n        }\n    }, [])\n\n    // Called when assets are loaded\n    const joinMapRoom = async () => {\n        if (!player || !account) return console.error(`Something went wrong with the account!`)\n\n        const options: Types.IPlayerOptions = {\n            address: address\n        }\n\n        client.joinOrCreate(\n\t\t\tplayer.team,\n\t\t\toptions\n\t\t).then((mapRoom) => {\n            dispatch({ type: 'setMapRoom', mapRoom: mapRoom as Room<MapState> })\n        }).catch(err => {\n\t\t\tconsole.error(err)\n\t\t})\n    }\n\n    useEffect(() => {\n        if (!mapRoom) return\n        console.log(`Connected to map: ${mapRoom.id}`)\n        setupMapRoomHandlers()\n        setupGameHandlers()\n    }, [mapRoom])\n\n\t// HANDLERS: MapManager\n    \n\tconst sendToServer = (action: Models.ActionJSON) => {\n        if (!mapRoom) return\n        mapRoom.send(action.type, action)\n    }\n\n    // HANDLERS: Game Events\n\n    const setupGameHandlers = () => {\n        // Listen to Game events\n        eventHandler.on('warpInitiate', initiateWarp)\n        eventHandler.on('warpSpaceship', warpSpaceship)\n        \n        eventHandler.on('hexClick', openTileDetails)\n        \n        eventHandler.on('hexExplore', exploreTile)\n        eventHandler.on('back', returnToMap)\n        eventHandler.on('setZoom', setZoom)\n        eventHandler.on('closePopup', closePopup)\n\n        eventHandler.on('spaceshipClick', openSpaceshipDetails)\n   }\n\n    const deinit = () => {\n        // Colyseus\n        if (mapRoom) mapRoom.leave()\n\n        // Stop refresh listeners\n        if (timer) clearInterval(timer)\n\n        // Clear game listeners\n        eventHandler.remove('warpInitiate', warpSpaceship)\n        eventHandler.remove('warpSpaceship', warpSpaceship)\n        eventHandler.remove('hexClick', openTileDetails)\n        eventHandler.remove('hexExplore', exploreTile)\n        eventHandler.remove('back', returnToMap)\n        eventHandler.remove('setZoom', setZoom)\n        eventHandler.remove('spaceshipClick', openSpaceshipDetails)\n        eventHandler.remove('closePopup', closePopup)\n    }\n\n    const setupMapRoomHandlers = () => {\n\t\tif (!mapRoom) return\n\t\t// Set current player\n        playerManager.playerId = mapRoom.sessionId\n        dispatch({ type: 'setPlayerId', playerId: mapRoom.sessionId })\n\n        mapManager.setState(mapRoom.state)\n\t\t\t\n\t\t// Listen for state changes\n\t\tmapRoom.onMessage('broadcast', handleMessage)\n\t}\n\n    // Spaceship\n    const openSpaceshipDetails = (value: MapSpaceshipSprite) => {\n        dispatch({ type: 'setSelectedSpaceship', spaceship: value })\n    }\n\n    const closePopup = () => {\n        dispatch({ type: 'setSelectedSpaceship', spaceship: undefined })\n        dispatch({ type: 'setSelectedTile', tile: undefined })\n    }\n\n    // Hex & Map\n    const setZoom = (value: number) => {\n        appManager.setZoomLevel(value)\n    }\n\n    const returnToMap = () => {\n        dispatch({ type: 'setBackButton', visible: false })\n        mapManager.returnToMap()\n    }\n\n    // Enter hex\n    const exploreTile = (value: TileContainer) => {\n        dispatch({ type: 'setBackButton', visible: true })\n        closePopup()\n        mapManager.exploreTile(value)\n    }\n\n    // Open menu box for hex details\n    const openTileDetails = (tile: TileContainer) => {\n        dispatch({ type: 'setSelectedTile', tile: tile })\n    }\n\n    // Warp\n    const initiateWarp = (value: Spaceship) => {\n        const hud = contextRef.current?.hud\n        if (!hud) return\n\n        if (hud.selectedTile) {\n            mapManager.setSelectedSpaceship(value)\n            closePopup()\n        } else if (hud.selectedSpaceship) {\n            closePopup()\n            returnToMap()\n            mapManager.setSelectedSpaceship(value)\n        }\n    }\n\n    const warpSpaceship = (value: {\n        nonce: number,\n        coordinate: any,\n        destination: any\n    }) => {\n        const { hud } = contextRef.current as StateType\n        \n        // In case the warp is for current controller spaceship\n        // Reset everything\n        if (hud.controlledSpaceship && hud.controlledSpaceship.nonce == value.nonce) {\n            appManager.stopSpaceshipControl()\n            dispatch({ type: 'setControlledSpaceship', spaceship: undefined })\n        }\n\n        sendToServer({\n            type: 'warp',\n            ts: Date.now(),\n            nonce: value.nonce,\n            value: value\n        })\n    }\n\n\t// HANDLERS: Colyseus\n\n    const handleMessage = (message: Models.MessageJSON) => {\n        \n    }\n\n    // METHODS\n\n    const updateRoom = () => {\n        const stats = mapManager.getStats()\n        dispatch({ type: 'setStats', stats: stats })\n    }\n\n\tconst leave = () => {\n\t\tmapRoom?.leave()\n\t}\n\n\treturn { \n        joinMapRoom,\n        mapManager,\n\t\tleave\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}