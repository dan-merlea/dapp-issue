{"ast":null,"code":"export {};\n\n/**\n * Extended functions for React\n */\n\n//// --------------------- ///\n\nArray.prototype.isEmpty = function () {\n  return this.length == 0;\n};\nArray.prototype.insert = function (index, item) {\n  this.splice(index, 0, item);\n};\nArray.prototype.serialized = function () {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  if (min) return this.map(function (obj) {\n    return obj.serializeMin();\n  });\n  return this.map(function (obj) {\n    return obj.serialize();\n  });\n};\nArray.prototype.remove = function (element) {\n  var index = this.indexOf(element);\n  if (index > -1) {\n    this.splice(index, 1);\n    return true;\n  }\n  return false;\n};\nArray.prototype.last = function () {\n  if (this.length > 0) {\n    return this[this.length - 1];\n  }\n  return null;\n};\nArray.prototype.first = function () {\n  if (this.length > 0) {\n    return this[0];\n  }\n  return null;\n};\nDate.prototype.addSeconds = function (seconds) {\n  var myTimeSpan = seconds * 1000;\n  this.setTime(this.getTime() + myTimeSpan);\n  return this;\n};\n\n/**\n * String functions\n */\n\nString.prototype.truncate = function (strLen, separator) {\n  if (this.length <= strLen) return \"\" + this;\n  separator = separator || '...';\n  var sepLen = separator.length,\n    charsToShow = strLen - sepLen,\n    frontChars = Math.ceil(charsToShow / 2),\n    backChars = Math.floor(charsToShow / 2);\n  return this.substr(0, frontChars) + separator + this.substr(this.length - backChars);\n};","map":{"version":3,"names":["Array","prototype","isEmpty","length","insert","index","item","splice","serialized","min","map","obj","serializeMin","serialize","remove","element","indexOf","last","first","Date","addSeconds","seconds","myTimeSpan","setTime","getTime","String","truncate","strLen","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/common/src/extensions.ts"],"sourcesContent":["export {};\n\n/**\n * Extended functions for React\n */\n\ndeclare global {\n    interface Array<T> {    \n        insert(index: number, item: T): void\n        remove(element: T): boolean\n        serialized<T>(min: boolean): T[]\n        last(): T\n        first(): T\n        isEmpty(): boolean\n    }\n\n    interface Date {\n        addSeconds: (seconds: number) => Date\n    }\n\n    interface String {\n        truncate: (strLen: number, separator?: string) => string\n    }\n}\n\n/**\n * Extended functions for NodeJS\n */\n\ninterface Array<T> {    \n    insert(index: number, item: T): void\n    remove(element: T): boolean\n    serialized<T>(min: boolean): T[]\n    last(): T\n    first(): T\n    isEmpty(): boolean\n}\n\ninterface Date {\n    addSeconds: (seconds: number) => Date\n}\n\ninterface String {\n    truncate: (strLen: number, separator?: string) => string\n}\n\n//// --------------------- ///\n\nArray.prototype.isEmpty = function() {\n    return this.length == 0\n}\n\nArray.prototype.insert = function<T>(index: number, item: T) {\n    this.splice(index, 0, item);\n};\n\nArray.prototype.serialized = function<T>(min = false): T[] {\n    if (min) return this.map((obj: any) => obj.serializeMin());\n    return this.map((obj: any) => obj.serialize());\n};\n\nArray.prototype.remove = function<T>(element: T): boolean {\n    const index = this.indexOf(element);\n    if (index > -1) {\n        this.splice(index, 1);\n        return true\n    }\n    return false\n};\n\nArray.prototype.last = function<T>(): T | null {\n    if (this.length > 0) {\n        return this[this.length - 1]\n    }\n    return null\n}\n\nArray.prototype.first = function<T>(): T | null {\n    if (this.length > 0) {\n        return this[0]\n    }\n    return null\n}\n\nDate.prototype.addSeconds = function(seconds: number) {\n    const myTimeSpan = seconds * 1000;\n    this.setTime(this.getTime() + myTimeSpan);\n    return this\n}\n\n/**\n * String functions\n */\n\n String.prototype.truncate = function (strLen: number, separator?: string): string {\n    if (this.length <= strLen) return \"\" + this;\n\n    separator = separator || '...';\n\n    const sepLen = separator.length,\n        charsToShow = strLen - sepLen,\n        frontChars = Math.ceil(charsToShow/2),\n        backChars = Math.floor(charsToShow/2);\n\n    return this.substr(0, frontChars) + \n           separator + \n           this.substr(this.length - backChars);\n};"],"mappings":"AAAA;;AAEA;AACA;AACA;;AA0CA;;AAEAA,KAAK,CAACC,SAAS,CAACC,OAAO,GAAG,YAAW;EACjC,OAAO,IAAI,CAACC,MAAM,IAAI,CAAC;AAC3B,CAAC;AAEDH,KAAK,CAACC,SAAS,CAACG,MAAM,GAAG,UAAYC,KAAa,EAAEC,IAAO,EAAE;EACzD,IAAI,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEC,IAAI,CAAC;AAC/B,CAAC;AAEDN,KAAK,CAACC,SAAS,CAACO,UAAU,GAAG,YAA8B;EAAA,IAAlBC,GAAG,uEAAG,KAAK;EAChD,IAAIA,GAAG,EAAE,OAAO,IAAI,CAACC,GAAG,CAAC,UAACC,GAAQ;IAAA,OAAKA,GAAG,CAACC,YAAY,EAAE;EAAA,EAAC;EAC1D,OAAO,IAAI,CAACF,GAAG,CAAC,UAACC,GAAQ;IAAA,OAAKA,GAAG,CAACE,SAAS,EAAE;EAAA,EAAC;AAClD,CAAC;AAEDb,KAAK,CAACC,SAAS,CAACa,MAAM,GAAG,UAAYC,OAAU,EAAW;EACtD,IAAMV,KAAK,GAAG,IAAI,CAACW,OAAO,CAACD,OAAO,CAAC;EACnC,IAAIV,KAAK,GAAG,CAAC,CAAC,EAAE;IACZ,IAAI,CAACE,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACrB,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB,CAAC;AAEDL,KAAK,CAACC,SAAS,CAACgB,IAAI,GAAG,YAAwB;EAC3C,IAAI,IAAI,CAACd,MAAM,GAAG,CAAC,EAAE;IACjB,OAAO,IAAI,CAAC,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC;EAChC;EACA,OAAO,IAAI;AACf,CAAC;AAEDH,KAAK,CAACC,SAAS,CAACiB,KAAK,GAAG,YAAwB;EAC5C,IAAI,IAAI,CAACf,MAAM,GAAG,CAAC,EAAE;IACjB,OAAO,IAAI,CAAC,CAAC,CAAC;EAClB;EACA,OAAO,IAAI;AACf,CAAC;AAEDgB,IAAI,CAAClB,SAAS,CAACmB,UAAU,GAAG,UAASC,OAAe,EAAE;EAClD,IAAMC,UAAU,GAAGD,OAAO,GAAG,IAAI;EACjC,IAAI,CAACE,OAAO,CAAC,IAAI,CAACC,OAAO,EAAE,GAAGF,UAAU,CAAC;EACzC,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;;AAECG,MAAM,CAACxB,SAAS,CAACyB,QAAQ,GAAG,UAAUC,MAAc,EAAEC,SAAkB,EAAU;EAC/E,IAAI,IAAI,CAACzB,MAAM,IAAIwB,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI;EAE3CC,SAAS,GAAGA,SAAS,IAAI,KAAK;EAE9B,IAAMC,MAAM,GAAGD,SAAS,CAACzB,MAAM;IAC3B2B,WAAW,GAAGH,MAAM,GAAGE,MAAM;IAC7BE,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,WAAW,GAAC,CAAC,CAAC;IACrCI,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACL,WAAW,GAAC,CAAC,CAAC;EAEzC,OAAO,IAAI,CAACM,MAAM,CAAC,CAAC,EAAEL,UAAU,CAAC,GAC1BH,SAAS,GACT,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACjC,MAAM,GAAG+B,SAAS,CAAC;AAC/C,CAAC"},"metadata":{},"sourceType":"module"}