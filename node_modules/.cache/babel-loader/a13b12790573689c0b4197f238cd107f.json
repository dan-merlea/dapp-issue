{"ast":null,"code":"import _toConsumableArray from \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/core/components/TokensView.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport moment from 'moment';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { DelegationTransactionType, nominateNumberToHex, nominateStringToHex } from '../helpers';\nimport { b64ToBn, denominate } from '../helpers/denominate/formatters';\nimport { useGetAccountInfo, useTrackTransactionStatus } from '@elrondnetwork/dapp-core/hooks';\nimport { getCleanApiAddress } from '@elrondnetwork/dapp-core/apiCalls/utils';\nimport { useCoreContext, useCoreDispatch } from 'core/context/context';\nimport { accountService } from 'core/services/account.service';\nimport { useTransactions } from 'core/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var kroTicker = 'KRO-df97ec';\nexport var lkkroTicker = 'LKKRO-e6ef92';\nexport var TokensView = function TokensView() {\n  _s();\n  var dispatch = useCoreDispatch();\n  var _useCoreContext = useCoreContext(),\n    tokens = _useCoreContext.tokens;\n  var _useGetAccountInfo = useGetAccountInfo(),\n    address = _useGetAccountInfo.address;\n  var _useTransactions = useTransactions(),\n    sendTransaction = _useTransactions.sendTransaction;\n\n  /**** Transaction Handler ****/\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    sessionId = _React$useState2[0],\n    setSessionId = _React$useState2[1];\n  var _ = useTrackTransactionStatus({\n    transactionId: sessionId,\n    onSuccess: function onSuccess(transactionId) {\n      if (sessionId == transactionId) {\n        // nothing\n      }\n    },\n    onFail: function onFail() {},\n    onCancelled: function onCancelled() {}\n  });\n  /**** Transaction Handler ****/\n\n  var unlock = function unlock(token) {\n    var _ref;\n    var tokenId = nominateStringToHex(token.ticker);\n    var tokenNonce = nominateNumberToHex((_ref = '' + token.nonce) !== null && _ref !== void 0 ? _ref : 0);\n    var amount = nominateNumberToHex(token.balance);\n    var receiver = new Address('erd1qqqqqqqqqqqqqpgqyq5g6uvx0hzwdl0864sxpdtquv0hhaa5we0s5hpa90').hex();\n    var func = nominateStringToHex('claimTokens');\n    var data = tokenId + '@' + tokenNonce + '@' + amount + '@' + receiver + '@' + func;\n    var txArguments = new DelegationTransactionType(address, '0', 'ESDTNFTTransfer', data);\n    sendTransaction([txArguments], 'claimRewards', 'Claim Rewards').then(function (id) {\n      return setSessionId(id);\n    });\n  };\n  var fetchAccount = function fetchAccount() {\n    if (address) {\n      var _tokens = accountService.fetchAccountTokens(getCleanApiAddress(), address, kroTicker);\n      var metaTokens = accountService.fetchAccountMetaTokens(getCleanApiAddress(), address, lkkroTicker);\n      Promise.all([_tokens, metaTokens]).then(function (tokens) {\n        dispatch({\n          type: 'setTokens',\n          tokens: [].concat(_toConsumableArray(tokens[0]), _toConsumableArray(tokens[1]))\n        });\n      });\n    }\n  };\n  useEffect(function () {\n    fetchAccount();\n  }, [address]);\n  var tokenView = function tokenView(token, index) {\n    var vesting;\n    if (token.attributes) {\n      var timestamp = parseInt(b64ToBn(token.attributes).toString()) * 1000;\n      if (new Date().getTime() > timestamp) {\n        vesting = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button text-medium px-0\",\n            onClick: function onClick() {\n              return unlock(token);\n            },\n            children: \"Unlock now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 6\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, _this);\n      } else {\n        vesting = /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA0- Vesting \", moment(timestamp).from(moment())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, _this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-action\",\n        children: denominate({\n          input: token.balance,\n          denomination: token.decimals,\n          decimals: 4\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, _this), \"\\xA0\", token.identifier == kroTicker ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/\".concat(kroTicker, \".gif\"),\n        width: 20,\n        alt: \"KRO Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 38\n      }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: token.ticker.split('-').first()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 108\n      }, _this), vesting]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, _this);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center justify-content-center mb-3\",\n      children: tokens.map(function (token, i) {\n        return tokenView(token, i);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, _this);\n};\n_s(TokensView, \"HdHQ0Pu2hf08KizBhHyKLD6Johk=\", false, function () {\n  return [useCoreDispatch, useCoreContext, useGetAccountInfo, useTransactions, useTrackTransactionStatus];\n});\n_c = TokensView;\nvar _c;\n$RefreshReg$(_c, \"TokensView\");","map":{"version":3,"names":["React","useEffect","moment","Address","DelegationTransactionType","nominateNumberToHex","nominateStringToHex","b64ToBn","denominate","useGetAccountInfo","useTrackTransactionStatus","getCleanApiAddress","useCoreContext","useCoreDispatch","accountService","useTransactions","kroTicker","lkkroTicker","TokensView","dispatch","tokens","address","sendTransaction","useState","sessionId","setSessionId","_","transactionId","onSuccess","onFail","onCancelled","unlock","token","tokenId","ticker","tokenNonce","nonce","amount","balance","receiver","hex","func","data","txArguments","then","id","fetchAccount","fetchAccountTokens","metaTokens","fetchAccountMetaTokens","Promise","all","type","tokenView","index","vesting","attributes","timestamp","parseInt","toString","Date","getTime","from","input","denomination","decimals","identifier","split","first","map","i"],"sources":["/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/core/components/TokensView.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport moment from 'moment';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { DelegationTransactionType, ESDTToken, nominateNumberToHex, nominateStringToHex } from '../helpers';\nimport { b64ToBn, denominate } from '../helpers/denominate/formatters';\nimport { useGetAccountInfo, useTrackTransactionStatus } from '@elrondnetwork/dapp-core/hooks';\nimport { getCleanApiAddress } from '@elrondnetwork/dapp-core/apiCalls/utils';\nimport { useCoreContext, useCoreDispatch } from 'core/context/context';\nimport { accountService } from 'core/services/account.service';\nimport { useTransactions } from 'core/hooks';\n\nexport const kroTicker = 'KRO-df97ec';\nexport const lkkroTicker = 'LKKRO-e6ef92';\n\nexport const TokensView = (): React.ReactElement => {\n\n\tconst dispatch = useCoreDispatch()\n\tconst { tokens } = useCoreContext()\n\tconst { address } = useGetAccountInfo()\n\tconst { sendTransaction } = useTransactions()\n\n\t/**** Transaction Handler ****/\n\tconst [sessionId, setSessionId] = React.useState(null as string | null)\n\tconst _ = useTrackTransactionStatus({\n\t\ttransactionId: sessionId,\n\t\tonSuccess: (transactionId) => {\n\t\t\tif (sessionId == transactionId) {\n\t\t\t\t// nothing\n\t\t\t}\n\t\t},\n\t\tonFail: () => {},\n\t\tonCancelled: () => {},\n\t});\n\t/**** Transaction Handler ****/\n\n\tconst unlock = (token: ESDTToken) => {\n\t\tconst tokenId = nominateStringToHex(token.ticker)\n\t\tconst tokenNonce = nominateNumberToHex('' + token.nonce ?? 0)\n\t\tconst amount = nominateNumberToHex(token.balance)\n\t\tconst receiver = new Address('erd1qqqqqqqqqqqqqpgqyq5g6uvx0hzwdl0864sxpdtquv0hhaa5we0s5hpa90').hex()\n\t\tconst func = nominateStringToHex('claimTokens')\n\n\t\tconst data = tokenId+'@'+tokenNonce+'@'+amount+'@'+receiver+'@'+func\n\t\tconst txArguments = new DelegationTransactionType(address, '0', 'ESDTNFTTransfer', data)\n\t\tsendTransaction([txArguments], 'claimRewards', 'Claim Rewards').then(id => setSessionId(id))\n\t}\n\n\tconst fetchAccount = () => {\n\t\tif (address) {\n\t\t\tconst tokens = accountService.fetchAccountTokens(getCleanApiAddress(), address, kroTicker)\n\t\t\tconst metaTokens = accountService.fetchAccountMetaTokens(getCleanApiAddress(), address, lkkroTicker)\n\t\t\tPromise.all([tokens, metaTokens]).then(tokens => {\n\t\t\t\tdispatch({ type: 'setTokens', tokens: [...tokens[0], ...tokens[1]] });\n\t\t\t})\n\t\t}\n\t};\n\tuseEffect(() => { fetchAccount() },  [address]);\n\n\tconst tokenView = (token: ESDTToken, index: number) => {\n\t\tlet vesting\n\t\tif (token.attributes) {\n\t\t\tconst timestamp = parseInt(b64ToBn(token.attributes).toString()) * 1000\n\t\t\tif (new Date().getTime() > timestamp) {\n\t\t\t\tvesting = ( \n\t\t\t\t<div className=\"ms-3\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"link-button text-medium px-0\"\n\t\t\t\t\t\tonClick={() => unlock(token)}\n\t\t\t\t\t>\n\t\t\t\t\t\tUnlock now\n\t\t\t\t\t</button>\n\t\t\t\t</div> \n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tvesting = ( <p>&nbsp;- Vesting {moment(timestamp).from(moment())}</p> )\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div key={index} className=\"d-flex align-items-center justify-content-center\">\n\t\t\t\t<p className=\"text-action\">\n\t\t\t\t\t{denominate({ input: token.balance, denomination: token.decimals, decimals: 4})}\n\t\t\t\t</p>\n\t\t\t\t&nbsp;\n\t\t\t\t{token.identifier == kroTicker ? <img src={`/images/${kroTicker}.gif`} width={20} alt=\"KRO Token\" /> : <span>{token.ticker.split('-').first()}</span>}\n\t\t\t\t{vesting}\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"d-flex flex-column align-items-center justify-content-center mb-3\">\n\t\t\t\t{tokens.map((token, i) => tokenView(token, i))}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}