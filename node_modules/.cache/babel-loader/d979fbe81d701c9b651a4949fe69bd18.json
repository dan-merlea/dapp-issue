{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toConsumableArray = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Interaction = void 0;\nvar query_1 = require(\"./query\");\nvar function_1 = require(\"./function\");\nvar address_1 = require(\"../address\");\nvar typesystem_1 = require(\"./typesystem\");\nvar constants_1 = require(\"../constants\");\nvar interactionChecker_1 = require(\"./interactionChecker\");\n/**\n * Interactions can be seen as mutable transaction & query builders.\n *\n * Aside from building transactions and queries, the interactors are also responsible for interpreting\n * the execution outcome for the objects they've built.\n */\nvar Interaction = /*#__PURE__*/function () {\n  function Interaction(contract, func, args) {\n    _classCallCheck(this, Interaction);\n    this.nonce = 0;\n    this.value = \"0\";\n    this.gasLimit = 0;\n    this.gasPrice = undefined;\n    this.chainID = \"\";\n    this.querent = new address_1.Address();\n    this.isWithSingleESDTTransfer = false;\n    this.isWithSingleESDTNFTTransfer = false;\n    this.isWithMultiESDTNFTTransfer = false;\n    this.tokenTransfersSender = new address_1.Address();\n    this.contract = contract;\n    this.function = func;\n    this.args = args;\n    this.tokenTransfers = new TokenTransfersWithinInteraction([], this);\n  }\n  _createClass(Interaction, [{\n    key: \"getContractAddress\",\n    value: function getContractAddress() {\n      return this.contract.getAddress();\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction() {\n      return this.function;\n    }\n  }, {\n    key: \"getEndpoint\",\n    value: function getEndpoint() {\n      return this.contract.getEndpoint(this.function);\n    }\n  }, {\n    key: \"getArguments\",\n    value: function getArguments() {\n      return this.args;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.value;\n    }\n  }, {\n    key: \"getTokenTransfers\",\n    value: function getTokenTransfers() {\n      return this.tokenTransfers.getTransfers();\n    }\n  }, {\n    key: \"getGasLimit\",\n    value: function getGasLimit() {\n      return this.gasLimit;\n    }\n  }, {\n    key: \"getExplicitReceiver\",\n    value: function getExplicitReceiver() {\n      return this.explicitReceiver;\n    }\n  }, {\n    key: \"buildTransaction\",\n    value: function buildTransaction() {\n      var receiver = this.explicitReceiver || this.contract.getAddress();\n      var func = this.function;\n      var args = this.args;\n      if (this.isWithSingleESDTTransfer) {\n        func = new function_1.ContractFunction(constants_1.ESDT_TRANSFER_FUNCTION_NAME);\n        args = this.tokenTransfers.buildArgsForSingleESDTTransfer();\n      } else if (this.isWithSingleESDTNFTTransfer) {\n        // For NFT, SFT and MetaESDT, transaction.sender == transaction.receiver.\n        receiver = this.tokenTransfersSender;\n        func = new function_1.ContractFunction(constants_1.ESDTNFT_TRANSFER_FUNCTION_NAME);\n        args = this.tokenTransfers.buildArgsForSingleESDTNFTTransfer();\n      } else if (this.isWithMultiESDTNFTTransfer) {\n        // For NFT, SFT and MetaESDT, transaction.sender == transaction.receiver.\n        receiver = this.tokenTransfersSender;\n        func = new function_1.ContractFunction(constants_1.MULTI_ESDTNFT_TRANSFER_FUNCTION_NAME);\n        args = this.tokenTransfers.buildArgsForMultiESDTNFTTransfer();\n      }\n      var transaction = this.contract.call({\n        func: func,\n        // GasLimit will be set using \"withGasLimit()\".\n        gasLimit: this.gasLimit,\n        gasPrice: this.gasPrice,\n        args: args,\n        // Value will be set using \"withValue()\".\n        value: this.value,\n        receiver: receiver,\n        chainID: this.chainID\n      });\n      transaction.setNonce(this.nonce);\n      return transaction;\n    }\n  }, {\n    key: \"buildQuery\",\n    value: function buildQuery() {\n      return new query_1.Query({\n        address: this.contract.getAddress(),\n        func: this.function,\n        args: this.args,\n        // Value will be set using \"withValue()\".\n        value: this.value,\n        caller: this.querent\n      });\n    }\n  }, {\n    key: \"withValue\",\n    value: function withValue(value) {\n      this.value = value;\n      return this;\n    }\n  }, {\n    key: \"withSingleESDTTransfer\",\n    value: function withSingleESDTTransfer(transfer) {\n      this.isWithSingleESDTTransfer = true;\n      this.tokenTransfers = new TokenTransfersWithinInteraction([transfer], this);\n      return this;\n    }\n  }, {\n    key: \"withSingleESDTNFTTransfer\",\n    value: function withSingleESDTNFTTransfer(transfer, sender) {\n      this.isWithSingleESDTNFTTransfer = true;\n      this.tokenTransfers = new TokenTransfersWithinInteraction([transfer], this);\n      this.tokenTransfersSender = sender;\n      return this;\n    }\n  }, {\n    key: \"withMultiESDTNFTTransfer\",\n    value: function withMultiESDTNFTTransfer(transfers, sender) {\n      this.isWithMultiESDTNFTTransfer = true;\n      this.tokenTransfers = new TokenTransfersWithinInteraction(transfers, this);\n      this.tokenTransfersSender = sender;\n      return this;\n    }\n  }, {\n    key: \"withGasLimit\",\n    value: function withGasLimit(gasLimit) {\n      this.gasLimit = gasLimit;\n      return this;\n    }\n  }, {\n    key: \"withGasPrice\",\n    value: function withGasPrice(gasPrice) {\n      this.gasPrice = gasPrice;\n      return this;\n    }\n  }, {\n    key: \"withNonce\",\n    value: function withNonce(nonce) {\n      this.nonce = nonce;\n      return this;\n    }\n  }, {\n    key: \"useThenIncrementNonceOf\",\n    value: function useThenIncrementNonceOf(account) {\n      return this.withNonce(account.getNonceThenIncrement());\n    }\n  }, {\n    key: \"withChainID\",\n    value: function withChainID(chainID) {\n      this.chainID = chainID;\n      return this;\n    }\n    /**\n     * Sets the \"caller\" field on contract queries.\n     */\n  }, {\n    key: \"withQuerent\",\n    value: function withQuerent(querent) {\n      this.querent = querent;\n      return this;\n    }\n  }, {\n    key: \"withExplicitReceiver\",\n    value: function withExplicitReceiver(receiver) {\n      this.explicitReceiver = receiver;\n      return this;\n    }\n    /**\n     * To perform custom checking, extend {@link Interaction} and override this method.\n     */\n  }, {\n    key: \"check\",\n    value: function check() {\n      new interactionChecker_1.InteractionChecker().checkInteraction(this, this.getEndpoint());\n      return this;\n    }\n  }]);\n  return Interaction;\n}();\nexports.Interaction = Interaction;\nvar TokenTransfersWithinInteraction = /*#__PURE__*/function () {\n  function TokenTransfersWithinInteraction(transfers, interaction) {\n    _classCallCheck(this, TokenTransfersWithinInteraction);\n    this.transfers = transfers;\n    this.interaction = interaction;\n  }\n  _createClass(TokenTransfersWithinInteraction, [{\n    key: \"getTransfers\",\n    value: function getTransfers() {\n      return this.transfers;\n    }\n  }, {\n    key: \"buildArgsForSingleESDTTransfer\",\n    value: function buildArgsForSingleESDTTransfer() {\n      var singleTransfer = this.transfers[0];\n      return [this.getTypedTokenIdentifier(singleTransfer), this.getTypedTokenQuantity(singleTransfer), this.getTypedInteractionFunction()].concat(_toConsumableArray(this.getInteractionArguments()));\n    }\n  }, {\n    key: \"buildArgsForSingleESDTNFTTransfer\",\n    value: function buildArgsForSingleESDTNFTTransfer() {\n      var singleTransfer = this.transfers[0];\n      return [this.getTypedTokenIdentifier(singleTransfer), this.getTypedTokenNonce(singleTransfer), this.getTypedTokenQuantity(singleTransfer), this.getTypedTokensReceiver(), this.getTypedInteractionFunction()].concat(_toConsumableArray(this.getInteractionArguments()));\n    }\n  }, {\n    key: \"buildArgsForMultiESDTNFTTransfer\",\n    value: function buildArgsForMultiESDTNFTTransfer() {\n      var result = [];\n      result.push(this.getTypedTokensReceiver());\n      result.push(this.getTypedNumberOfTransfers());\n      var _iterator = _createForOfIteratorHelper(this.transfers),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var transfer = _step.value;\n          result.push(this.getTypedTokenIdentifier(transfer));\n          result.push(this.getTypedTokenNonce(transfer));\n          result.push(this.getTypedTokenQuantity(transfer));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      result.push(this.getTypedInteractionFunction());\n      result.push.apply(result, _toConsumableArray(this.getInteractionArguments()));\n      return result;\n    }\n  }, {\n    key: \"getTypedNumberOfTransfers\",\n    value: function getTypedNumberOfTransfers() {\n      return new typesystem_1.U8Value(this.transfers.length);\n    }\n  }, {\n    key: \"getTypedTokenIdentifier\",\n    value: function getTypedTokenIdentifier(transfer) {\n      // Important: for NFTs, this has to be the \"collection\" name, actually.\n      // We will reconsider adding the field \"collection\" on \"Token\" upon merging \"ApiProvider\" and \"ProxyProvider\".\n      return typesystem_1.BytesValue.fromUTF8(transfer.tokenIdentifier);\n    }\n  }, {\n    key: \"getTypedTokenNonce\",\n    value: function getTypedTokenNonce(transfer) {\n      // The token nonce (creation nonce)\n      return new typesystem_1.U64Value(transfer.nonce);\n    }\n  }, {\n    key: \"getTypedTokenQuantity\",\n    value: function getTypedTokenQuantity(transfer) {\n      // For NFTs, this will be 1.\n      return new typesystem_1.BigUIntValue(transfer.amountAsBigInteger);\n    }\n  }, {\n    key: \"getTypedTokensReceiver\",\n    value: function getTypedTokensReceiver() {\n      // The actual receiver of the token(s): the contract\n      return new typesystem_1.AddressValue(this.interaction.getContractAddress());\n    }\n  }, {\n    key: \"getTypedInteractionFunction\",\n    value: function getTypedInteractionFunction() {\n      return typesystem_1.BytesValue.fromUTF8(this.interaction.getFunction().valueOf());\n    }\n  }, {\n    key: \"getInteractionArguments\",\n    value: function getInteractionArguments() {\n      return this.interaction.getArguments();\n    }\n  }]);\n  return TokenTransfersWithinInteraction;\n}();","map":{"version":3,"mappings":"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","names":["Interaction","contract","func","args","undefined","address_1","function","tokenTransfers","TokenTransfersWithinInteraction","getAddress","getEndpoint","value","getTransfers","gasLimit","explicitReceiver","receiver","isWithSingleESDTTransfer","function_1","constants_1","buildArgsForSingleESDTTransfer","isWithSingleESDTNFTTransfer","tokenTransfersSender","buildArgsForSingleESDTNFTTransfer","isWithMultiESDTNFTTransfer","buildArgsForMultiESDTNFTTransfer","transaction","call","gasPrice","chainID","setNonce","nonce","query_1","address","caller","querent","transfer","sender","transfers","account","withNonce","getNonceThenIncrement","interactionChecker_1","checkInteraction","exports","interaction","singleTransfer","getTypedTokenIdentifier","getTypedTokenQuantity","getTypedInteractionFunction","getInteractionArguments","getTypedTokenNonce","getTypedTokensReceiver","result","push","getTypedNumberOfTransfers","typesystem_1","length","fromUTF8","tokenIdentifier","amountAsBigInteger","getContractAddress","getFunction","valueOf","getArguments"],"sourceRoot":"","sources":["../../src/smartcontracts/interaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}