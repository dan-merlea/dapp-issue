{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractFunction = void 0;\nvar errors = __importStar(require(\"../errors\"));\n/**\n * A function of a Smart Contract, as an abstraction.\n */\nvar ContractFunction = /*#__PURE__*/function () {\n  /**\n   * Creates a ContractFunction object, given its name.\n   *\n   * @param name the name of the function\n   */\n  function ContractFunction(name) {\n    _classCallCheck(this, ContractFunction);\n    this.name = name;\n    if (name == null) {\n      throw new errors.ErrInvalidFunctionName();\n    }\n  }\n  /**\n   * Null-object pattern: creates an empty ContractFunction object.\n   */\n  _createClass(ContractFunction, [{\n    key: \"toString\",\n    value:\n    /**\n     * Returns the name of the function.\n     */\n    function toString() {\n      return this.name;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.name;\n    }\n    // TODO (breaking, next major version): remove function, not used.\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.name == other.name;\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new ContractFunction(\"untitled\");\n    }\n  }]);\n  return ContractFunction;\n}();\nexports.ContractFunction = ContractFunction;","map":null,"metadata":{},"sourceType":"script"}