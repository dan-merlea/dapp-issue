{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Struct = exports.StructType = void 0;\nvar errors_1 = require(\"../../errors\");\nvar fields_1 = require(\"./fields\");\nvar types_1 = require(\"./types\");\nvar StructType = /*#__PURE__*/function (_types_1$CustomType) {\n  _inherits(StructType, _types_1$CustomType);\n  var _super = _createSuper(StructType);\n  function StructType(name, fieldsDefinitions) {\n    var _this;\n    _classCallCheck(this, StructType);\n    _this = _super.call(this, name);\n    _this.fieldsDefinitions = [];\n    _this.fieldsDefinitions = fieldsDefinitions;\n    return _this;\n  }\n  _createClass(StructType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return StructType.ClassName;\n    }\n  }, {\n    key: \"getFieldsDefinitions\",\n    value: function getFieldsDefinitions() {\n      return this.fieldsDefinitions;\n    }\n  }, {\n    key: \"getFieldDefinition\",\n    value: function getFieldDefinition(name) {\n      return this.fieldsDefinitions.find(function (item) {\n        return item.name == name;\n      });\n    }\n  }, {\n    key: \"getNamesOfDependencies\",\n    value: function getNamesOfDependencies() {\n      return fields_1.Fields.getNamesOfTypeDependencies(this.fieldsDefinitions);\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var definitions = (json.fields || []).map(function (definition) {\n        return fields_1.FieldDefinition.fromJSON(definition);\n      });\n      return new StructType(json.name, definitions);\n    }\n  }]);\n  return StructType;\n}(types_1.CustomType);\nexports.StructType = StructType;\nStructType.ClassName = \"StructType\";\nvar Struct = /*#__PURE__*/function (_types_1$TypedValue) {\n  _inherits(Struct, _types_1$TypedValue);\n  var _super2 = _createSuper(Struct);\n  /**\n   * One can only set fields at initialization time.\n   */\n  function Struct(type, fields) {\n    var _this2;\n    _classCallCheck(this, Struct);\n    _this2 = _super2.call(this, type);\n    _this2.fields = fields;\n    _this2.fieldsByName = new Map(fields.map(function (field) {\n      return [field.name, field];\n    }));\n    _this2.checkTyping();\n    return _this2;\n  }\n  _createClass(Struct, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return Struct.ClassName;\n    }\n  }, {\n    key: \"checkTyping\",\n    value: function checkTyping() {\n      var type = this.getType();\n      var definitions = type.getFieldsDefinitions();\n      fields_1.Fields.checkTyping(this.fields, definitions);\n    }\n  }, {\n    key: \"getFields\",\n    value: function getFields() {\n      return this.fields;\n    }\n  }, {\n    key: \"getFieldValue\",\n    value: function getFieldValue(name) {\n      var field = this.fieldsByName.get(name);\n      if (field) {\n        return field.value.valueOf();\n      }\n      throw new errors_1.ErrMissingFieldOnStruct(name, this.getType().getName());\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      var result = {};\n      var _iterator = _createForOfIteratorHelper(this.fields),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var field = _step.value;\n          result[field.name] = field.value.valueOf();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (!this.getType().equals(other.getType())) {\n        return false;\n      }\n      var selfFields = this.getFields();\n      var otherFields = other.getFields();\n      return fields_1.Fields.equals(selfFields, otherFields);\n    }\n  }]);\n  return Struct;\n}(types_1.TypedValue);\nexports.Struct = Struct;\nStruct.ClassName = \"Struct\";","map":{"version":3,"mappings":"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","names":["StructType","name","fieldsDefinitions","ClassName","find","item","fields_1","getNamesOfTypeDependencies","json","definitions","fields","map","fromJSON","definition","types_1","exports","Struct","type","fieldsByName","Map","field","checkTyping","getType","getFieldsDefinitions","get","value","valueOf","errors_1","getName","result","other","equals","selfFields","getFields","otherFields"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/struct.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}