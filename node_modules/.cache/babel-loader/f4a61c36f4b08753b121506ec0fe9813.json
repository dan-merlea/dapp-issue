{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringBinaryCodec = void 0;\nvar typesystem_1 = require(\"../typesystem\");\nvar bytes_1 = require(\"../typesystem/bytes\");\nvar bytes_2 = require(\"./bytes\");\nvar StringBinaryCodec = /*#__PURE__*/function () {\n  function StringBinaryCodec() {\n    _classCallCheck(this, StringBinaryCodec);\n    this.bytesBinaryCodec = new bytes_2.BytesBinaryCodec();\n  }\n  _createClass(StringBinaryCodec, [{\n    key: \"decodeNested\",\n    value: function decodeNested(buffer) {\n      var _this$bytesBinaryCode = this.bytesBinaryCodec.decodeNested(buffer),\n        _this$bytesBinaryCode2 = _slicedToArray(_this$bytesBinaryCode, 2),\n        decoded = _this$bytesBinaryCode2[0],\n        length = _this$bytesBinaryCode2[1];\n      var decodedAsString = new typesystem_1.StringValue(decoded.valueOf().toString());\n      return [decodedAsString, length];\n    }\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer) {\n      return new typesystem_1.StringValue(buffer.toString());\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(value) {\n      var valueAsBytes = bytes_1.BytesValue.fromUTF8(value.valueOf());\n      return this.bytesBinaryCodec.encodeNested(valueAsBytes);\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(value) {\n      return Buffer.from(value.valueOf());\n    }\n  }]);\n  return StringBinaryCodec;\n}();\nexports.StringBinaryCodec = StringBinaryCodec;","map":{"version":3,"mappings":";;;;;;;;;AAAA;AACA;AACA;AAA2C,IAE9BA,iBAAiB;EAA9B;IAAA;IACqB,qBAAgB,GAAG,IAAIC,wBAAgB,EAAE;EAoB9D;EAAC;IAAA;IAAA,OAlBG,sBAAaC,MAAc;MACvB,4BAAwB,IAAI,CAACC,gBAAgB,CAACC,YAAY,CAACF,MAAM,CAAC;QAAA;QAA7DG,OAAO;QAAEC,MAAM;MACpB,IAAIC,eAAe,GAAG,IAAIC,wBAAW,CAACH,OAAO,CAACI,OAAO,EAAE,CAACC,QAAQ,EAAE,CAAC;MACnE,OAAO,CAACH,eAAe,EAAED,MAAM,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,wBAAeJ,MAAc;MACzB,OAAO,IAAIM,wBAAW,CAACN,MAAM,CAACQ,QAAQ,EAAE,CAAC;IAC7C;EAAC;IAAA;IAAA,OAED,sBAAaC,KAAkB;MAC3B,IAAIC,YAAY,GAAGC,kBAAU,CAACC,QAAQ,CAACH,KAAK,CAACF,OAAO,EAAE,CAAC;MACvD,OAAO,IAAI,CAACN,gBAAgB,CAACY,YAAY,CAACH,YAAY,CAAC;IAC3D;EAAC;IAAA;IAAA,OAED,wBAAeD,KAAkB;MAC7B,OAAOK,MAAM,CAACC,IAAI,CAACN,KAAK,CAACF,OAAO,EAAE,CAAC;IACvC;EAAC;EAAA;AAAA;AApBLS","names":["StringBinaryCodec","bytes_2","buffer","bytesBinaryCodec","decodeNested","decoded","length","decodedAsString","typesystem_1","valueOf","toString","value","valueAsBytes","bytes_1","fromUTF8","encodeNested","Buffer","from","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/string.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}