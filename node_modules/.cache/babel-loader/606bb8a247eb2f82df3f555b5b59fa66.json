{"ast":null,"code":"import BigNumber from'bignumber.js';/**\n * Adding x amount of decimals\n * @param input amount\n * @param paramDenomination default is 18\n * @returns nominated value\n */export var nominate=function nominate(input,paramDenomination){var parts=input.toString().replace(',','.').split('.');var denomination=paramDenomination!==undefined?paramDenomination:18;if(parts[1]){// remove trailing zeros\nwhile(parts[1].substring(parts[1].length-1)==='0'&&parts[1].length>1){parts[1]=parts[1].substring(0,parts[1].length-1);}parts[1]=parts[1].slice(0,Math.min(parts[1].length,18));}var count=parts[1]?denomination-parts[1].length:denomination;count=count<0?0:count;var transformed=parts.join('')+'0'.repeat(count);// remove beginning zeros\nwhile(transformed.substring(0,1)==='0'&&transformed.length>1){transformed=transformed.substring(1);}return transformed;};/**\n * Used for egld & esdt & meta\n * @param value amount of token\n * @returns nominated amount\n */export var nominateValToHex=function nominateValToHex(value){var denomination=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;var val=value&&value.length>0?new BigNumber(nominate(value,denomination)).toString(16):'0';if(val.length%2!==0){val='0'+val;}return val;};/**\n * Used for u32 & u64\n * @param value a number\n * @returns nominated decimal\n */export var nominateNumberToHex=function nominateNumberToHex(value){var val=value&&value.length>0?new BigNumber(value).toString(16):'0';if(val.length%2!==0){val='0'+val;}return val;};/**\n * Used for strings\n * @param value a string\n * @returns nominated string\n */export var nominateStringToHex=function nominateStringToHex(value){var hex,i;var result=\"\";for(i=0;i<value.length;i++){hex=value.charCodeAt(i).toString(16);result+=hex.slice(-4);}return result;};","map":null,"metadata":{},"sourceType":"module"}