{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar FillStyle = require('./FillStyle.js');\nvar _const = require('../const.js');\nvar LineStyle = /*#__PURE__*/function (_FillStyle$FillStyle) {\n  _inherits(LineStyle, _FillStyle$FillStyle);\n  var _super = _createSuper(LineStyle);\n  function LineStyle() {\n    var _this;\n    _classCallCheck(this, LineStyle);\n    _this = _super.apply(this, arguments);\n    _this.width = 0;\n    _this.alignment = 0.5;\n    _this.native = false;\n    _this.cap = _const.LINE_CAP.BUTT;\n    _this.join = _const.LINE_JOIN.MITER;\n    _this.miterLimit = 10;\n    return _this;\n  }\n  _createClass(LineStyle, [{\n    key: \"clone\",\n    value: function clone() {\n      var obj = new LineStyle();\n      obj.color = this.color;\n      obj.alpha = this.alpha;\n      obj.texture = this.texture;\n      obj.matrix = this.matrix;\n      obj.visible = this.visible;\n      obj.width = this.width;\n      obj.alignment = this.alignment;\n      obj.native = this.native;\n      obj.cap = this.cap;\n      obj.join = this.join;\n      obj.miterLimit = this.miterLimit;\n      return obj;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      _get(_getPrototypeOf(LineStyle.prototype), \"reset\", this).call(this);\n      this.color = 0;\n      this.alignment = 0.5;\n      this.width = 0;\n      this.native = false;\n    }\n  }]);\n  return LineStyle;\n}(FillStyle.FillStyle);\nexports.LineStyle = LineStyle;","map":{"version":3,"sources":["../../src/styles/LineStyle.ts"],"names":["FillStyle","LINE_CAP","LINE_JOIN"],"mappings":";;;;;;;;;;;;;IAOa,SAAA;EAAA;EAAA;EAAN,qBAAA;IAAA;IAAA;IAAA,2BAAA,SAAA;IAGH,MAAO,KAAQ,GAAA,CAAA;IAGf,MAAO,SAAY,GAAA,GAAA;IAGnB,MAAO,MAAS,GAAA,KAAA;IAOhB,MAAO,GAAA,GAAMC,MAAAA,CAAAA,QAAS,CAAA,IAAA;IAOtB,MAAO,IAAA,GAAOC,MAAAA,CAAAA,SAAU,CAAA,KAAA;IAGxB,MAAO,UAAa,GAAA,EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAGpB,iBACA;MACU,IAAA,GAAA,GAAM,IAAI,SAAU,EAAA;MAE1B,GAAA,CAAI,KAAA,GAAQ,IAAK,CAAA,KAAA;MACjB,GAAA,CAAI,KAAA,GAAQ,IAAK,CAAA,KAAA;MACjB,GAAA,CAAI,OAAA,GAAU,IAAK,CAAA,OAAA;MACnB,GAAA,CAAI,MAAA,GAAS,IAAK,CAAA,MAAA;MAClB,GAAA,CAAI,OAAA,GAAU,IAAK,CAAA,OAAA;MACnB,GAAA,CAAI,KAAA,GAAQ,IAAK,CAAA,KAAA;MACjB,GAAA,CAAI,SAAA,GAAY,IAAK,CAAA,SAAA;MACrB,GAAA,CAAI,MAAA,GAAS,IAAK,CAAA,MAAA;MAClB,GAAA,CAAI,GAAA,GAAM,IAAK,CAAA,GAAA;MACf,GAAA,CAAI,IAAA,GAAO,IAAK,CAAA,IAAA;MAChB,GAAA,CAAI,UAAA,GAAa,IAAK,CAAA,UAAA;MAEf,OAAA,GAAA;IAAA;EACX;IAAA;IAAA,OAGA,iBACA;MACI;MAGA,IAAA,CAAK,KAAQ,GAAA,CAAA;MAEb,IAAA,CAAK,SAAY,GAAA,GAAA;MACjB,IAAA,CAAK,KAAQ,GAAA,CAAA;MACb,IAAA,CAAK,MAAS,GAAA,KAAA;IAAA;EAClB;EAAA;AAAA,EA3D2BF,SAAAA,CAAAA,SAC/B","sourcesContent":["import { FillStyle } from './FillStyle';\nimport { LINE_JOIN, LINE_CAP } from '../const';\n\n/**\n * Represents the line style for Graphics.\n * @memberof PIXI\n */\nexport class LineStyle extends FillStyle\n{\n    /** The width (thickness) of any lines drawn. */\n    public width = 0;\n\n    /** The alignment of any lines drawn (0.5 = middle, 1 = outer, 0 = inner). WebGL only. */\n    public alignment = 0.5;\n\n    /** If true the lines will be draw using LINES instead of TRIANGLE_STRIP. */\n    public native = false;\n\n    /**\n     * Line cap style.\n     * @member {PIXI.LINE_CAP}\n     * @default PIXI.LINE_CAP.BUTT\n     */\n    public cap = LINE_CAP.BUTT;\n\n    /**\n     * Line join style.\n     * @member {PIXI.LINE_JOIN}\n     * @default PIXI.LINE_JOIN.MITER\n     */\n    public join = LINE_JOIN.MITER;\n\n    /** Miter limit. */\n    public miterLimit = 10;\n\n    /** Clones the object. */\n    public clone(): LineStyle\n    {\n        const obj = new LineStyle();\n\n        obj.color = this.color;\n        obj.alpha = this.alpha;\n        obj.texture = this.texture;\n        obj.matrix = this.matrix;\n        obj.visible = this.visible;\n        obj.width = this.width;\n        obj.alignment = this.alignment;\n        obj.native = this.native;\n        obj.cap = this.cap;\n        obj.join = this.join;\n        obj.miterLimit = this.miterLimit;\n\n        return obj;\n    }\n\n    /** Reset the line style to default. */\n    public reset(): void\n    {\n        super.reset();\n\n        // Override default line style color\n        this.color = 0x0;\n\n        this.alignment = 0.5;\n        this.width = 0;\n        this.native = false;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}