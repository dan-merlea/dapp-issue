{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar unsafeEval;\nfunction unsafeEvalSupported() {\n  if (typeof unsafeEval === \"boolean\") {\n    return unsafeEval;\n  }\n  try {\n    var func = new Function(\"param1\", \"param2\", \"param3\", \"return param1[param2] === param3;\");\n    unsafeEval = func({\n      a: \"b\"\n    }, \"a\", \"b\") === true;\n  } catch (e) {\n    unsafeEval = false;\n  }\n  return unsafeEval;\n}\nexports.unsafeEvalSupported = unsafeEvalSupported;","map":{"version":3,"sources":["../../../src/shader/utils/unsafeEvalSupported.ts"],"names":[],"mappings":";;;;;AACA,IAAI,UAAA;AASJ,SAAA,mBAAA,GAAA;EACQ,IAAA,OAAO,UAAA,KAAe,SAC1B,EAAA;IACW,OAAA,UAAA;EAAA;EAIX,IAAA;IAEI,IAAM,IAAA,GAAO,IAAI,QAAA,CAAS,QAAU,EAAA,QAAA,EAAU,QAAA,EAAU,mCAAmC,CAAA;IAG3F,UAAA,GAAa,IAAA,CAAK;MAAE,CAAA,EAAG;IAAA,CAAO,EAAA,GAAA,EAAK,GAAG,CAAM,KAAA,IAAA;EAAA,CAAA,CAAA,OAEzC,CAAP,EAAA;IAEiB,UAAA,GAAA,KAAA;EAAA;EAGV,OAAA,UAAA;AACX","sourcesContent":["// Cache the result to prevent running this over and over\nlet unsafeEval: boolean;\n\n/**\n * Not all platforms allow to generate function code (e.g., `new Function`).\n * this provides the platform-level detection.\n * @private\n * @returns {boolean} `true` if `new Function` is supported.\n */\nexport function unsafeEvalSupported(): boolean\n{\n    if (typeof unsafeEval === 'boolean')\n    {\n        return unsafeEval;\n    }\n\n    try\n    {\n        /* eslint-disable no-new-func */\n        const func = new Function('param1', 'param2', 'param3', 'return param1[param2] === param3;');\n        /* eslint-enable no-new-func */\n\n        unsafeEval = func({ a: 'b' }, 'a', 'b') === true;\n    }\n    catch (e)\n    {\n        unsafeEval = false;\n    }\n\n    return unsafeEval;\n}\n"]},"metadata":{},"sourceType":"script"}