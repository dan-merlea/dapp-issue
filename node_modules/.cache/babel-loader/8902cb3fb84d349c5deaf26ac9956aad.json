{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Container, MIPMAP_MODES, Sprite } from 'pixi.js';\nimport ThrusterSprite from './ThrusterSprite';\nimport { Constants } from '@krogan/common';\nvar SpaceshipContainer = /*#__PURE__*/function (_Container) {\n  _inherits(SpaceshipContainer, _Container);\n  var _super = _createSuper(SpaceshipContainer);\n  function SpaceshipContainer(position, radius, texture) {\n    var _this;\n    _classCallCheck(this, SpaceshipContainer);\n    _this = _super.call(this);\n\n    // Container\n    _this.container = void 0;\n    _this.sprite = void 0;\n    _this.thrusters = [];\n    _this._radius = void 0;\n    _this.container = new Container();\n    _this.container.angle = Constants.SPACESHIP_ROTATION;\n    _this.addChild(_this.container);\n\n    // Sprite\n    texture.baseTexture.mipmap = MIPMAP_MODES.POW2;\n    _this.sprite = new Sprite(texture);\n    _this.sprite.anchor.set(0.5);\n    _this.sprite.width = radius * 2;\n    _this.sprite.height = radius * 2;\n    _this.angle = position.angle;\n    _this.sprite.zIndex = 99;\n    _this.container.addChild(_this.sprite);\n    _this._radius = radius;\n    return _this;\n  }\n  _createClass(SpaceshipContainer, [{\n    key: \"addThrusters\",\n    value: function addThrusters(level, thrusters) {\n      var _this2 = this;\n      if (thrusters && thrusters.length > 0) {\n        thrusters.forEach(function (thruster) {\n          var x = thruster.x * (_this2._radius * 2) - _this2._radius;\n          var y = thruster.y * (_this2._radius * 2) - _this2._radius;\n          var sprite = new ThrusterSprite(x, y, level, _this2._radius / 100 * thruster.scale);\n          _this2.container.addChild(sprite);\n          _this2.thrusters.push(sprite);\n        });\n      }\n    }\n  }, {\n    key: \"removeThrusters\",\n    value: function removeThrusters() {\n      var _this3 = this;\n      this.thrusters.forEach(function (thruster) {\n        _this3.container.removeChild(thruster);\n      });\n      this.thrusters = [];\n    }\n  }]);\n  return SpaceshipContainer;\n}(Container);\nexport { SpaceshipContainer as default };","map":{"version":3,"names":["Container","MIPMAP_MODES","Sprite","ThrusterSprite","Constants","SpaceshipContainer","position","radius","texture","container","sprite","thrusters","_radius","angle","SPACESHIP_ROTATION","addChild","baseTexture","mipmap","POW2","anchor","set","width","height","zIndex","level","length","forEach","thruster","x","y","scale","push","removeChild"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/game/SpaceshipContainer.ts"],"sourcesContent":["import { Container, MIPMAP_MODES, Sprite, Texture } from 'pixi.js';\nimport { ArraySchema } from '@colyseus/schema';\nimport { Position } from 'state/Position';\nimport { Thruster } from 'state/Thruster';\nimport ThrusterSprite from './ThrusterSprite';\nimport { Constants } from '@krogan/common';\n\nexport default class SpaceshipContainer extends Container {\n\n\tpublic readonly container: Container\n    public readonly sprite: Sprite\n\tpublic thrusters: ThrusterSprite[] = []\n\n\tprivate _radius: number\n\n    constructor(\n        position: Position,\n        radius: number,\n        texture: Texture,\n    ) {\n        super()\n\n\t\t// Container\n\t\tthis.container = new Container()\n\t\tthis.container.angle = Constants.SPACESHIP_ROTATION\n\t\tthis.addChild(this.container)\n\n        // Sprite\n        texture.baseTexture.mipmap = MIPMAP_MODES.POW2\n        this.sprite = new Sprite(texture)\n        this.sprite.anchor.set(0.5)\n        this.sprite.width = radius * 2\n        this.sprite.height = radius * 2\n        this.angle = position.angle\n        this.sprite.zIndex = 99\n        this.container.addChild(this.sprite)\n\n\t\tthis._radius = radius\n    }\n\n    addThrusters(level: number, thrusters: ArraySchema<Thruster>) {\n        if (thrusters && thrusters.length > 0) {\n            thrusters.forEach(thruster => {\n\t\t\t\tconst x = thruster.x * (this._radius*2) -this._radius\n\t\t\t\tconst y = thruster.y * (this._radius*2) -this._radius\n                const sprite = new ThrusterSprite(\n                    x, y, \n                    level,\n\t\t\t\t\tthis._radius / 100 * thruster.scale\n                )\n                this.container.addChild(sprite)\n                this.thrusters.push(sprite)\n            })\n        }\n    }\n\n    removeThrusters() {\n        this.thrusters.forEach(thruster => {\n            this.container.removeChild(thruster)\n        })\n\t\tthis.thrusters = []\n    }\n\n}\n"],"mappings":";;;;AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAiB,SAAS;AAIlE,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,gBAAgB;AAAC,IAEtBC,kBAAkB;EAAA;EAAA;EAQnC,4BACIC,QAAkB,EAClBC,MAAc,EACdC,OAAgB,EAClB;IAAA;IAAA;IACE;;IAEN;IAAA,MAbeC,SAAS;IAAA,MACNC,MAAM;IAAA,MAClBC,SAAS,GAAqB,EAAE;IAAA,MAE/BC,OAAO;IAUd,MAAKH,SAAS,GAAG,IAAIT,SAAS,EAAE;IAChC,MAAKS,SAAS,CAACI,KAAK,GAAGT,SAAS,CAACU,kBAAkB;IACnD,MAAKC,QAAQ,CAAC,MAAKN,SAAS,CAAC;;IAEvB;IACAD,OAAO,CAACQ,WAAW,CAACC,MAAM,GAAGhB,YAAY,CAACiB,IAAI;IAC9C,MAAKR,MAAM,GAAG,IAAIR,MAAM,CAACM,OAAO,CAAC;IACjC,MAAKE,MAAM,CAACS,MAAM,CAACC,GAAG,CAAC,GAAG,CAAC;IAC3B,MAAKV,MAAM,CAACW,KAAK,GAAGd,MAAM,GAAG,CAAC;IAC9B,MAAKG,MAAM,CAACY,MAAM,GAAGf,MAAM,GAAG,CAAC;IAC/B,MAAKM,KAAK,GAAGP,QAAQ,CAACO,KAAK;IAC3B,MAAKH,MAAM,CAACa,MAAM,GAAG,EAAE;IACvB,MAAKd,SAAS,CAACM,QAAQ,CAAC,MAAKL,MAAM,CAAC;IAE1C,MAAKE,OAAO,GAAGL,MAAM;IAAA;EACnB;EAAC;IAAA;IAAA,OAED,sBAAaiB,KAAa,EAAEb,SAAgC,EAAE;MAAA;MAC1D,IAAIA,SAAS,IAAIA,SAAS,CAACc,MAAM,GAAG,CAAC,EAAE;QACnCd,SAAS,CAACe,OAAO,CAAC,UAAAC,QAAQ,EAAI;UACtC,IAAMC,CAAC,GAAGD,QAAQ,CAACC,CAAC,IAAI,MAAI,CAAChB,OAAO,GAAC,CAAC,CAAC,GAAE,MAAI,CAACA,OAAO;UACrD,IAAMiB,CAAC,GAAGF,QAAQ,CAACE,CAAC,IAAI,MAAI,CAACjB,OAAO,GAAC,CAAC,CAAC,GAAE,MAAI,CAACA,OAAO;UACzC,IAAMF,MAAM,GAAG,IAAIP,cAAc,CAC7ByB,CAAC,EAAEC,CAAC,EACJL,KAAK,EACpB,MAAI,CAACZ,OAAO,GAAG,GAAG,GAAGe,QAAQ,CAACG,KAAK,CACvB;UACD,MAAI,CAACrB,SAAS,CAACM,QAAQ,CAACL,MAAM,CAAC;UAC/B,MAAI,CAACC,SAAS,CAACoB,IAAI,CAACrB,MAAM,CAAC;QAC/B,CAAC,CAAC;MACN;IACJ;EAAC;IAAA;IAAA,OAED,2BAAkB;MAAA;MACd,IAAI,CAACC,SAAS,CAACe,OAAO,CAAC,UAAAC,QAAQ,EAAI;QAC/B,MAAI,CAAClB,SAAS,CAACuB,WAAW,CAACL,QAAQ,CAAC;MACxC,CAAC,CAAC;MACR,IAAI,CAAChB,SAAS,GAAG,EAAE;IACjB;EAAC;EAAA;AAAA,EAtD2CX,SAAS;AAAA,SAApCK,kBAAkB"},"metadata":{},"sourceType":"module"}