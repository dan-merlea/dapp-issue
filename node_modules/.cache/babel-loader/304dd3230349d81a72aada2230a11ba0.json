{"ast":null,"code":"import { ExtensionType, settings, extensions } from '@pixi/core';\nimport '../../loader/index.mjs';\nimport { loadTextures } from '../../loader/parsers/textures/loadTexture.mjs';\nvar resolveTextureUrl = {\n  extension: ExtensionType.ResolveParser,\n  test: loadTextures.test,\n  parse: function parse(value) {\n    var _settings$RETINA_PREF, _settings$RETINA_PREF2;\n    return {\n      resolution: parseFloat((_settings$RETINA_PREF = (_settings$RETINA_PREF2 = settings.RETINA_PREFIX.exec(value)) === null || _settings$RETINA_PREF2 === void 0 ? void 0 : _settings$RETINA_PREF2[1]) !== null && _settings$RETINA_PREF !== void 0 ? _settings$RETINA_PREF : \"1\"),\n      format: value.split(\".\").pop(),\n      src: value\n    };\n  }\n};\nextensions.add(resolveTextureUrl);\nexport { resolveTextureUrl };","map":{"version":3,"sources":["../../../src/resolver/parsers/resolveTextureUrl.ts"],"names":[],"mappings":";;;AAKO,IAAM,iBAAoB,GAAA;EAC7B,SAAA,EAAW,aAAc,CAAA,aAAA;EACzB,IAAA,EAAM,YAAa,CAAA,IAAA;EACnB,KAAA,EAAO,eAAC,KACH;IAAA;IAAA,OAAA;MACG,UAAA,EAAY,UAAA,oDAAW,QAAS,CAAA,aAAA,CAAc,IAAA,CAAK,KAAK,CAAA,2DAAjC,uBAAqC,CAAA,CAAA,yEAAM,GAAG,CAAA;MACrE,MAAQ,EAAA,KAAA,CAAM,KAAM,CAAA,GAAG,CAAA,CAAE,GAAI,EAAA;MAC7B,GAAK,EAAA;IAAA,CACT;EAAA;AACR,CAAA;AAEA,UAAA,CAAW,GAAA,CAAI,iBAAiB,CAAA","sourcesContent":["import { settings, extensions, ExtensionType } from '@pixi/core';\nimport { loadTextures } from '../../loader';\n\nimport type { ResolveAsset, ResolveURLParser } from '../types';\n\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): ResolveAsset =>\n        ({\n            resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n\nextensions.add(resolveTextureUrl);\n"]},"metadata":{},"sourceType":"module"}