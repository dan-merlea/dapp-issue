{"ast":null,"code":"import '../settings.mjs';\nimport { settings } from '@pixi/settings';\nvar supported;\nfunction isWebGLSupported() {\n  if (typeof supported === \"undefined\") {\n    supported = function supported2() {\n      var contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n      try {\n        if (!settings.ADAPTER.getWebGLRenderingContext()) {\n          return false;\n        }\n        var canvas = settings.ADAPTER.createCanvas();\n        var gl = canvas.getContext(\"webgl\", contextOptions) || canvas.getContext(\"experimental-webgl\", contextOptions);\n        var success = !!(gl && gl.getContextAttributes().stencil);\n        if (gl) {\n          var loseContext = gl.getExtension(\"WEBGL_lose_context\");\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n  return supported;\n}\nexport { isWebGLSupported };","map":{"version":3,"sources":["../../src/browser/isWebGLSupported.ts"],"names":[],"mappings":";;AAEA,IAAI,SAAA;AASJ,SAAA,gBAAA,GAAA;EACQ,IAAA,OAAO,SAAA,KAAc,WACzB,EAAA;IACI,SAAA,GAAa,SACb,UAAA,GAAA;MACI,IAAM,cAAiB,GAAA;QACnB,OAAS,EAAA,IAAA;QACT,4BAAA,EAA8B,QAAS,CAAA;MAAA,CAC3C;MAGA,IAAA;QACI,IAAI,CAAC,QAAA,CAAS,OAAQ,CAAA,wBAAA,EACtB,EAAA;UACW,OAAA,KAAA;QAAA;QAGL,IAAA,MAAA,GAAS,QAAS,CAAA,OAAA,CAAQ,YAAa,EAAA;QACzC,IAAA,EAAA,GACA,MAAA,CAAO,UAAW,CAAA,OAAA,EAAS,cAAc,CACtC,IAAA,MAAA,CAAO,UAAW,CAAA,oBAAA,EAAsB,cAAc,CAAA;QAG7D,IAAM,OAAA,GAAU,CAAC,EAAQ,EAAA,IAAA,EAAA,CAAG,oBAAA,EAAuB,CAAA,OAAA,CAAA;QAEnD,IAAI,EACJ,EAAA;UACU,IAAA,WAAA,GAAc,EAAG,CAAA,YAAA,CAAa,oBAAoB,CAAA;UAExD,IAAI,WACJ,EAAA;YACI,WAAA,CAAY,WAAY,EAAA;UAAA;QAC5B;QAGC,EAAA,GAAA,IAAA;QAEE,OAAA,OAAA;MAAA,CAAA,CAAA,OAEJ,CAAP,EAAA;QAEW,OAAA,KAAA;MAAA;IACX,CACD,EAAA;EAAA;EAGA,OAAA,SAAA;AACX","sourcesContent":["import { settings } from '../settings';\n\nlet supported: boolean | undefined;\n\n/**\n * Helper for checking for WebGL support.\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!settings.ADAPTER.getWebGLRenderingContext())\n                {\n                    return false;\n                }\n\n                const canvas = settings.ADAPTER.createCanvas();\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext;\n\n                const success = !!(gl && gl.getContextAttributes().stencil);\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n"]},"metadata":{},"sourceType":"module"}