{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";import*as PIXI from'pixi.js';import{Viewport}from'pixi-viewport';import{Constants}from'@krogan/common';import{HexController,MapController}from'sprites/controllers';import ObjectMap from'storage/ObjectMap';import{playerManager}from'./PlayerManager';export var MapZINDEX;(function(MapZINDEX){MapZINDEX[MapZINDEX[\"BACKGROUND\"]=0]=\"BACKGROUND\";MapZINDEX[MapZINDEX[\"MAP\"]=1]=\"MAP\";MapZINDEX[MapZINDEX[\"HEX\"]=2]=\"HEX\";MapZINDEX[MapZINDEX[\"HEX_HOVER\"]=3]=\"HEX_HOVER\";MapZINDEX[MapZINDEX[\"SINGLE_HEX\"]=4]=\"SINGLE_HEX\";MapZINDEX[MapZINDEX[\"GAME\"]=5]=\"GAME\";})(MapZINDEX||(MapZINDEX={}));export var MapManager=/*#__PURE__*/function(){// Application\n// Controllers\n// Game\n// Player by address\n// Event Handler\n// Map data\n// LIFECYCLE\nfunction MapManager(app,map,eventHandler){var _this=this;_classCallCheck(this,MapManager);this.app=void 0;this.mapView=void 0;this.hexView=void 0;this.hexController=void 0;this.mapController=void 0;this.roomName=void 0;this.state=void 0;this.playersMap=new ObjectMap();this.eventHandler=void 0;this.map=void 0;this.app=app;this.map=map;this.eventHandler=eventHandler;// Map View\nthis.mapView=new Viewport({screenWidth:window.innerWidth,screenHeight:window.innerHeight,worldWidth:Constants.MAP_SIZE,worldHeight:Constants.MAP_SIZE,interaction:this.app.renderer.plugins.interaction});this.app.stage.addChild(this.mapView);this.mapView.zIndex=MapZINDEX.MAP;this.mapView.drag({clampWheel:true}).clamp({direction:'all',underflow:'center'}).pinch().wheel({smooth:3}).clampZoom({minScale:1,maxScale:1.5});// this.mapView.scaled = 2\nthis.mapView.zoomPercent(PIXI.utils.isMobile.any?0.25:1.0);this.mapView.sortableChildren=true;// Hex View\nthis.hexView=new Viewport({screenWidth:window.innerWidth,screenHeight:window.innerHeight,worldWidth:window.innerWidth,worldHeight:window.innerHeight,interaction:this.app.renderer.plugins.interaction});this.app.stage.addChild(this.hexView);this.hexView.zIndex=MapZINDEX.SINGLE_HEX;this.hexView.sortableChildren=true;this.hexView.visible=false;this.hexView.drag({clampWheel:true}).clamp({direction:'all',underflow:'center'}).pinch().wheel({smooth:3}).clampZoom({minScale:1,maxScale:4});this.hexView.on('wheel',function(){var _this$hexController;(_this$hexController=_this.hexController)===null||_this$hexController===void 0?void 0:_this$hexController.zoomLevelUpdate(_this.hexView.scaled);});console.log('Map initialized ðŸ¤©');}_createClass(MapManager,[{key:\"start\",value:function start(){// Hex Container\nthis.hexController=new HexController(this.eventHandler);this.hexView.addChild(this.hexController);// Map\nthis.mapController=new MapController(this.map,this.eventHandler);this.mapView.addChild(this.mapController);// TODO: Use this for lerps\n// this.app.ticker.add(this.update)\nconsole.log('Map initialized ðŸ¤©');}// PRIVATE METHODS\n// PUBLIC METHODS\n},{key:\"hideAll\",value:function hideAll(){this.mapView.visible=false;this.hexView.visible=false;}},{key:\"show\",value:function show(zoom){if(zoom==MapZINDEX.HEX){this.hexView.visible=true;}else{this.mapView.visible=true;}}},{key:\"exploreTile\",value:function exploreTile(tile){this.mapView.visible=false;this.hexView.visible=true;if(this.hexController)this.hexController.tileContainer=tile;}},{key:\"returnToMap\",value:function returnToMap(){this.mapView.visible=true;this.hexView.visible=false;if(this.hexController)this.hexController.tileContainer=undefined;}// SETTERS\n},{key:\"setScreenSize\",value:function setScreenSize(screenWidth,screenHeight){this.mapView.resize(screenWidth,screenHeight,this.map.width,this.map.height);}},{key:\"setSelectedSpaceship\",value:function setSelectedSpaceship(spaceship){var _this$mapController;(_this$mapController=this.mapController)===null||_this$mapController===void 0?void 0:_this$mapController.setSelectedSpaceship(spaceship);}},{key:\"setViewPortPosition\",value:function setViewPortPosition(team){var _this$mapController2;var tileContainer=(_this$mapController2=this.mapController)===null||_this$mapController2===void 0?void 0:_this$mapController2.getBaseFor(team);if(!tileContainer)return;this.mapView.animate({position:new PIXI.Point(tileContainer.x,tileContainer.y),time:0});}// GETTERS & SETTERS\n},{key:\"getStats\",value:function getStats(){var players=this.playersMap.getAll().map(function(item){return{playerId:item.playerId,username:item.username};});return{roomName:this.roomName||'',playerName:playerManager.username(),players:players,playersCount:Object.keys(this.playersMap).length};}//\n// All methods below are called by Colyseus change listeners.\n//\n// COLYSEUS\n},{key:\"setState\",value:function setState(state){if(this.state)return;this.state=state;this.state.map.onChange=this.handleGameChange.bind(this);this.state.players.onAdd=this.handlePlayerAdd.bind(this);this.state.players.onRemove=this.handlePlayerRemove.bind(this);this.state.hexagons.onAdd=this.hexagonAdd.bind(this);this.state.inTransit.onAdd=this.warpAdd.bind(this);}// COLYSEUS: Game\n},{key:\"handleGameChange\",value:function handleGameChange(attributes){console.log(attributes);var _iterator=_createForOfIteratorHelper(attributes),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var row=_step.value;this.gameUpdate(row.field,row.value);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}},{key:\"gameUpdate\",value:function gameUpdate(name,value){switch(name){case'roomName':this.roomName=value;break;default:break;}}// COLYSEUS: Players\n},{key:\"handlePlayerAdd\",value:function handlePlayerAdd(player,playerId){var _this2=this;console.log(\"[Player][Add] \".concat(playerId));var isMe=playerManager.isPlayerIdMe(playerId);player.onChange=function(){console.log('[Player][Update]');console.log(_this2.state);// this.handlePlayerUpdate(player, player.playerId)\n};this.playersMap.add(player.address,player);if(isMe){playerManager.me=player;this.setViewPortPosition(player.team);}}// handlePlayerUpdate(player: Player, playerId: string) {}\n},{key:\"handlePlayerRemove\",value:function handlePlayerRemove(player,playerId){var isMe=playerManager.isPlayerIdMe(playerId);this.playersMap.remove(player.address);if(isMe){playerManager.me=undefined;}}// COLYSEUS: Hexagons\n},{key:\"hexagonAdd\",value:function hexagonAdd(hexagon,coordinateKey){var _this$mapController3;(_this$mapController3=this.mapController)===null||_this$mapController3===void 0?void 0:_this$mapController3.setHexagonBinding(coordinateKey,hexagon);}// COLYSEUS: Warps\n},{key:\"warpAdd\",value:function warpAdd(spaceship,key){var _this$mapController4;(_this$mapController4=this.mapController)===null||_this$mapController4===void 0?void 0:_this$mapController4.createSpaceshipWarp(spaceship);}}]);return MapManager;}();","map":null,"metadata":{},"sourceType":"module"}