{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clamp as _clamp, getMagnitude } from \"./math\";\nexport var Vector2 = /*#__PURE__*/function () {\n  function Vector2() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    _classCallCheck(this, Vector2);\n    this.x = x;\n    this.y = y;\n  }\n  _createClass(Vector2, [{\n    key: \"normalize\",\n    value: function normalize() {\n      var magnitude = getMagnitude(this.x, this.y);\n      return new Vector2(this.x / magnitude, this.y / magnitude);\n    }\n  }, {\n    key: \"setMax\",\n    value: function setMax(cap) {\n      this.x = Math.min(this.x, cap);\n      this.y = Math.min(this.y, cap);\n    }\n  }, {\n    key: \"setMin\",\n    value: function setMin(cap) {\n      this.x = Math.max(this.x, cap);\n      this.y = Math.max(this.y, cap);\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(x, y) {\n      this.x = _clamp(this.x, -x, x);\n      this.y = _clamp(this.y, -y, y);\n    }\n  }, {\n    key: \"decrease\",\n    value: function decrease(amount) {\n      if (this.x > 0) {\n        this.x -= amount;\n        this.x = Math.max(this.x, 0);\n      } else if (this.x < 0) {\n        this.x += amount;\n        this.x = Math.min(this.x, 0);\n      }\n      if (this.y > 0) {\n        this.y -= amount;\n        this.y = Math.max(this.y, 0);\n      } else if (this.y < 0) {\n        this.y += amount;\n        this.y = Math.min(this.y, 0);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"x: \".concat(this.x, \", y: \").concat(this.y);\n    }\n  }, {\n    key: \"equal\",\n    value: function equal(b) {\n      return this.x == b.x && this.y == b.y;\n    }\n  }, {\n    key: \"closeBy\",\n    value: function closeBy(position) {\n      return Math.abs(this.x - position.x) < 100 && Math.abs(this.y - position.y) < 100;\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(vec) {\n      return new Vector2(Math.floor(this.x - vec.x), Math.floor(this.y - vec.y));\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.x === 0 && this.y === 0;\n    }\n  }]);\n  return Vector2;\n}();\n/**\n * An object to represent a Rectangle shape\n */\nexport var RectangleBody = /*#__PURE__*/function () {\n  function RectangleBody(x, y, width, height) {\n    _classCallCheck(this, RectangleBody);\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  /**\n   * Return a copy of this object\n   */\n  _createClass(RectangleBody, [{\n    key: \"copy\",\n    value: function copy() {\n      return new RectangleBody(this.x, this.y, this.width, this.height);\n    }\n    // Getters & Setters\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.x;\n    },\n    set: function set(left) {\n      this.x = left;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.y;\n    },\n    set: function set(top) {\n      this.y = top;\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      return this.x + this.width;\n    },\n    set: function set(right) {\n      this.x = right - this.width;\n    }\n  }, {\n    key: \"bottom\",\n    get: function get() {\n      return this.y + this.height;\n    },\n    set: function set(bottom) {\n      this.y = bottom - this.height;\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return new Vector2(this.x + this.width / 2, this.y + this.height / 2);\n    },\n    set: function set(vector) {\n      this.x = vector.x;\n      this.y = vector.y;\n    }\n  }, {\n    key: \"center\",\n    get: function get() {\n      return new Vector2(this.x + this.width / 2, this.y + this.height / 2);\n    }\n  }]);\n  return RectangleBody;\n}();\n/**\n * An object to represent a Circle shape\n */\nexport var CircleBody = /*#__PURE__*/function () {\n  function CircleBody(x, y, radius) {\n    _classCallCheck(this, CircleBody);\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Return a copy of this object\n   */\n  _createClass(CircleBody, [{\n    key: \"copy\",\n    value: function copy() {\n      return new CircleBody(this.x, this.y, this.radius);\n    }\n    // Getters & Setters\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.x - this.radius;\n    },\n    set: function set(left) {\n      this.x = left + this.radius;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.y - this.radius;\n    },\n    set: function set(top) {\n      this.y = top + this.radius;\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      return this.x + this.radius;\n    },\n    set: function set(right) {\n      this.x = right - this.radius;\n    }\n  }, {\n    key: \"bottom\",\n    get: function get() {\n      return this.y + this.radius;\n    },\n    set: function set(bottom) {\n      this.y = bottom - this.radius;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.radius * 2;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.radius * 2;\n    }\n  }, {\n    key: \"box\",\n    get: function get() {\n      return new RectangleBody(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n  }]);\n  return CircleBody;\n}();","map":{"version":3,"names":["clamp","getMagnitude","Vector2","x","y","magnitude","cap","Math","min","max","amount","b","position","abs","vec","floor","RectangleBody","width","height","left","top","right","bottom","vector","CircleBody","radius"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/common/build/geometry.js"],"sourcesContent":["import { clamp, getMagnitude } from \"./math\";\nexport class Vector2 {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    normalize() {\n        const magnitude = getMagnitude(this.x, this.y);\n        return new Vector2(this.x / magnitude, this.y / magnitude);\n    }\n    setMax(cap) {\n        this.x = Math.min(this.x, cap);\n        this.y = Math.min(this.y, cap);\n    }\n    setMin(cap) {\n        this.x = Math.max(this.x, cap);\n        this.y = Math.max(this.y, cap);\n    }\n    clamp(x, y) {\n        this.x = clamp(this.x, -x, x);\n        this.y = clamp(this.y, -y, y);\n    }\n    decrease(amount) {\n        if (this.x > 0) {\n            this.x -= amount;\n            this.x = Math.max(this.x, 0);\n        }\n        else if (this.x < 0) {\n            this.x += amount;\n            this.x = Math.min(this.x, 0);\n        }\n        if (this.y > 0) {\n            this.y -= amount;\n            this.y = Math.max(this.y, 0);\n        }\n        else if (this.y < 0) {\n            this.y += amount;\n            this.y = Math.min(this.y, 0);\n        }\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    toString() {\n        return `x: ${this.x}, y: ${this.y}`;\n    }\n    equal(b) {\n        return this.x == b.x && this.y == b.y;\n    }\n    closeBy(position) {\n        return Math.abs(this.x - position.x) < 100 && Math.abs(this.y - position.y) < 100;\n    }\n    minus(vec) {\n        return new Vector2(Math.floor(this.x - vec.x), Math.floor(this.y - vec.y));\n    }\n    get isEmpty() {\n        return this.x === 0 && this.y === 0;\n    }\n}\n/**\n * An object to represent a Rectangle shape\n */\nexport class RectangleBody {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Return a copy of this object\n     */\n    copy() {\n        return new RectangleBody(this.x, this.y, this.width, this.height);\n    }\n    // Getters & Setters\n    get left() {\n        return this.x;\n    }\n    set left(left) {\n        this.x = left;\n    }\n    get top() {\n        return this.y;\n    }\n    set top(top) {\n        this.y = top;\n    }\n    get right() {\n        return this.x + this.width;\n    }\n    set right(right) {\n        this.x = right - this.width;\n    }\n    get bottom() {\n        return this.y + this.height;\n    }\n    set bottom(bottom) {\n        this.y = bottom - this.height;\n    }\n    get position() {\n        return new Vector2(this.x + this.width / 2, this.y + this.height / 2);\n    }\n    set position(vector) {\n        this.x = vector.x;\n        this.y = vector.y;\n    }\n    get center() {\n        return new Vector2(this.x + this.width / 2, this.y + this.height / 2);\n    }\n}\n/**\n * An object to represent a Circle shape\n */\nexport class CircleBody {\n    constructor(x, y, radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n    }\n    /**\n     * Return a copy of this object\n     */\n    copy() {\n        return new CircleBody(this.x, this.y, this.radius);\n    }\n    // Getters & Setters\n    get left() {\n        return this.x - this.radius;\n    }\n    set left(left) {\n        this.x = left + this.radius;\n    }\n    get top() {\n        return this.y - this.radius;\n    }\n    set top(top) {\n        this.y = top + this.radius;\n    }\n    get right() {\n        return this.x + this.radius;\n    }\n    set right(right) {\n        this.x = right - this.radius;\n    }\n    get bottom() {\n        return this.y + this.radius;\n    }\n    set bottom(bottom) {\n        this.y = bottom - this.radius;\n    }\n    get width() {\n        return this.radius * 2;\n    }\n    get height() {\n        return this.radius * 2;\n    }\n    get box() {\n        return new RectangleBody(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}