{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserRandomSource = void 0;\nvar QUOTA = 65536;\nvar BrowserRandomSource = /*#__PURE__*/function () {\n  function BrowserRandomSource() {\n    _classCallCheck(this, BrowserRandomSource);\n    this.isAvailable = false;\n    this.isInstantiated = false;\n    var browserCrypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto // IE11 has msCrypto\n    : null;\n    if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n      this._crypto = browserCrypto;\n      this.isAvailable = true;\n      this.isInstantiated = true;\n    }\n  }\n  _createClass(BrowserRandomSource, [{\n    key: \"randomBytes\",\n    value: function randomBytes(length) {\n      if (!this.isAvailable || !this._crypto) {\n        throw new Error(\"Browser random byte generator is not available.\");\n      }\n      var out = new Uint8Array(length);\n      for (var i = 0; i < out.length; i += QUOTA) {\n        this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n      }\n      return out;\n    }\n  }]);\n  return BrowserRandomSource;\n}();\nexports.BrowserRandomSource = BrowserRandomSource;","map":{"version":3,"sources":["../../source/browser.ts"],"names":[],"mappings":";;AAAA;AACA;AAAA;AAAA;;;;;AAIA,IAAM,KAAK,GAAG,KAAK;AAAC,IAEP,mBAAmB;EAM5B,+BAAA;IAAA;IALA,IAAA,CAAA,WAAW,GAAG,KAAK;IACnB,IAAA,CAAA,cAAc,GAAG,KAAK;IAKlB,IAAM,aAAa,GAAG,OAAO,IAAI,KAAK,WAAW,GAC1C,IAAI,CAAC,MAAM,IAAK,IAA2B,CAAC,QAAQ,CAAE;IAAA,EACvD,IAAI;IAEV,IAAI,aAAa,IAAI,aAAa,CAAC,eAAe,KAAK,SAAS,EAAE;MAC9D,IAAI,CAAC,OAAO,GAAG,aAAa;MAC5B,IAAI,CAAC,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC,cAAc,GAAG,IAAI;IAC7B;EACL;EAAC;IAAA;IAAA,OAED,qBAAY,MAAc,EAAA;MACtB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;QACpC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC;MACrE;MACD,IAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;MAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,KAAK,EAAE;QACxC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;MACrF;MACD,OAAO,GAAG;IACd;EAAC;EAAA;AAAA;AA3BL,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\nclass BrowserRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"script"}