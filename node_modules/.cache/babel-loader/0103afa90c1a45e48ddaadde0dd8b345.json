{"ast":null,"code":"import _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/gui/hud/MaterialLinearComp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Material Linear Component\n */\nexport function MaterialLinearComp(props) {\n  _s();\n  var material = props.material;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    amount = _useState2[0],\n    setAmount = _useState2[1];\n  var animateValue = function animateValue(start, end, duration, steps) {\n    var range = end - start;\n    var current = start;\n    var time = duration / steps;\n    var increment = (end > start ? 1 : -1) * range / steps;\n    console.log(\"Animate increment \".concat(increment));\n    var step = function step() {\n      current += increment;\n      if (current > end) {\n        setAmount(end);\n      } else {\n        setAmount(current);\n        setTimeout(step, time);\n      }\n    };\n    setTimeout(step, time);\n  };\n  useEffect(function () {\n    setAmount(material.production);\n    material.listen('production', function (value, prev) {\n      console.log(\"[Material][Update] val: \".concat(value, \", prev: \").concat(prev));\n      animateValue(prev, value, 1000, 10);\n    });\n  }, [material]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.text,\n    children: [material.name, \" \", amount.toFixed(8)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(MaterialLinearComp, \"b547w4LXC92GoAGM+yVOyEzuOY8=\");\n_c = MaterialLinearComp;\nvar styles = {\n  text: {\n    fontSize: '10px'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"MaterialLinearComp\");","map":{"version":3,"names":["React","useEffect","useState","MaterialLinearComp","props","material","amount","setAmount","animateValue","start","end","duration","steps","range","current","time","increment","console","log","step","setTimeout","production","listen","value","prev","styles","text","name","toFixed","fontSize"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/gui/hud/MaterialLinearComp.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useState } from 'react';\nimport { Material } from 'state/Material';\n\n/**\n * Material Linear Component\n */\nexport function MaterialLinearComp(props: {\n\tmaterial: Material\n}): React.ReactElement {\n\n\tconst { material } = props;\n\tconst [amount, setAmount] = useState(0)\n\n\n\tconst animateValue = (start, end, duration, steps) => {\n\t\tconst range = end - start\n\t\tlet current = start\n\t\tconst time = duration / steps\n\t\tconst increment = (end > start ? 1 : -1) * range / steps\n\t\tconsole.log(`Animate increment ${increment}`)\n\n\t\tconst step = function () {\n\t\t\tcurrent += increment\n\t\t\tif (current > end) {\n\t\t\t\tsetAmount(end)\n\t\t\t} else {\n\t\t\t\tsetAmount(current)\n\t\t\t\tsetTimeout(step, time)\n\t\t\t}\n\t\t}\n\n\t\tsetTimeout(step, time)\n\t}\n\n\tuseEffect(() => {\n\t\tsetAmount(material.production)\n\t\tmaterial.listen('production', (value, prev) => {\n\t\t\tconsole.log(`[Material][Update] val: ${value}, prev: ${prev}`)\n\t\t\tanimateValue(prev, value, 1000, 10)\n\t\t})\n\t}, [material])\n\n\treturn (\n\t\t<p style={styles.text}>{material.name} {amount.toFixed(8)}</p>\n\t);\n}\n\nconst styles: { [key: string]: CSSProperties } = {\n\ttext: {\n\t\tfontSize: '10px'\n\t},\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAmBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAGlE;AACA;AACA;AACA,OAAO,SAASC,kBAAkB,CAACC,KAElC,EAAsB;EAAA;EAEtB,IAAQC,QAAQ,GAAKD,KAAK,CAAlBC,QAAQ;EAChB,gBAA4BH,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAhCI,MAAM;IAAEC,SAAS;EAGxB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAK;IACrD,IAAMC,KAAK,GAAGH,GAAG,GAAGD,KAAK;IACzB,IAAIK,OAAO,GAAGL,KAAK;IACnB,IAAMM,IAAI,GAAGJ,QAAQ,GAAGC,KAAK;IAC7B,IAAMI,SAAS,GAAG,CAACN,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAII,KAAK,GAAGD,KAAK;IACxDK,OAAO,CAACC,GAAG,6BAAsBF,SAAS,EAAG;IAE7C,IAAMG,IAAI,GAAG,SAAPA,IAAI,GAAe;MACxBL,OAAO,IAAIE,SAAS;MACpB,IAAIF,OAAO,GAAGJ,GAAG,EAAE;QAClBH,SAAS,CAACG,GAAG,CAAC;MACf,CAAC,MAAM;QACNH,SAAS,CAACO,OAAO,CAAC;QAClBM,UAAU,CAACD,IAAI,EAAEJ,IAAI,CAAC;MACvB;IACD,CAAC;IAEDK,UAAU,CAACD,IAAI,EAAEJ,IAAI,CAAC;EACvB,CAAC;EAEDd,SAAS,CAAC,YAAM;IACfM,SAAS,CAACF,QAAQ,CAACgB,UAAU,CAAC;IAC9BhB,QAAQ,CAACiB,MAAM,CAAC,YAAY,EAAE,UAACC,KAAK,EAAEC,IAAI,EAAK;MAC9CP,OAAO,CAACC,GAAG,mCAA4BK,KAAK,qBAAWC,IAAI,EAAG;MAC9DhB,YAAY,CAACgB,IAAI,EAAED,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC;IACpC,CAAC,CAAC;EACH,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,oBACC;IAAG,KAAK,EAAEoB,MAAM,CAACC,IAAK;IAAA,WAAErB,QAAQ,CAACsB,IAAI,OAAGrB,MAAM,CAACsB,OAAO,CAAC,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAEhE;AAAC,GAvCezB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAyClC,IAAMsB,MAAwC,GAAG;EAChDC,IAAI,EAAE;IACLG,QAAQ,EAAE;EACX;AACD,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}