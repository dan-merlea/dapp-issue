{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar extensions = require('@pixi/extensions');\nvar StartupSystem = /*#__PURE__*/function () {\n  function StartupSystem(renderer) {\n    _classCallCheck(this, StartupSystem);\n    this.renderer = renderer;\n  }\n  _createClass(StartupSystem, [{\n    key: \"run\",\n    value: function run(options) {\n      var renderer = this.renderer;\n      renderer.emitWithCustomOptions(renderer.runners.init, options);\n      if (options.hello) {\n        console.log(\"PixiJS \".concat(\"7.0.0\", \" - \", renderer.rendererLogId, \" - https://pixijs.com\"));\n      }\n      renderer.resize(this.renderer.screen.width, this.renderer.screen.height);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n  return StartupSystem;\n}();\nStartupSystem.extension = {\n  type: [extensions.ExtensionType.RendererSystem, extensions.ExtensionType.CanvasRendererSystem],\n  name: \"startup\"\n};\nextensions.extensions.add(StartupSystem);\nexports.StartupSystem = StartupSystem;","map":{"version":3,"sources":["../../src/startup/StartupSystem.ts"],"names":["ExtensionType","extensions"],"mappings":";;;;;;;;IAsBgB,aAChB;EAYI,uBAAY,QACZ,EAAA;IAAA;IACI,IAAA,CAAK,QAAW,GAAA,QAAA;EAAA;EACpB;IAAA;IAAA,OAMA,aAAI,OACJ,EAAA;MACI,IAAM,QAAA,GAAW,IAAK,CAAA,QAAA;MAEtB,QAAA,CAAS,qBAAsB,CAAA,QAAA,CAAS,OAAQ,CAAA,IAAA,EAAM,OAAO,CAAA;MAE7D,IAAI,OAAA,CAAQ,KACZ,EAAA;QAEI,OAAA,CAAQ,GAAI,kBAAU,OAAiB,SAAA,QAAA,CAAS,aAAoC,2BAAA;MAAA;MAG/E,QAAA,CAAA,MAAA,CAAO,IAAA,CAAK,QAAS,CAAA,MAAA,CAAO,KAAA,EAAO,IAAK,CAAA,QAAA,CAAS,MAAA,CAAO,MAAM,CAAA;IAAA;EAC3E;IAAA;IAAA,OAEA,mBACA,CAAA;EAEA;EAAA;AAAA;AAxCY,aAAA,CAGL,SAA+B,GAAA;EAClC,IAAM,EAAA,CACFA,UAAAA,CAAAA,aAAc,CAAA,cAAA,EACdA,UAAAA,CAAAA,aAAc,CAAA,oBAAA,CAClB;EACA,IAAM,EAAA;AACV,CAAA;AAkCJC,UAAAA,CAAAA,UAAAA,CAAW,GAAA,CAAI,aAAa,CAAA","sourcesContent":["import type { BackgroundOptions } from '../background/BackgroundSystem';\nimport type { ViewOptions } from '../view/ViewSystem';\nimport type { IRendererPlugins } from '../plugin/PluginSystem';\nimport type { IRenderer } from '../IRenderer';\nimport type { ISystem } from '../system/ISystem';\nimport type { ContextOptions } from '../systems';\nimport type { ExtensionMetadata } from '@pixi/extensions';\nimport { extensions, ExtensionType } from '@pixi/extensions';\n\n// TODO this can be infered by good use of generics in the future..\nexport interface StartupOptions extends Record<string, unknown>\n{\n    hello: boolean;\n    _plugin: IRendererPlugins,\n    background: BackgroundOptions,\n    _view: ViewOptions,\n    context?: ContextOptions\n}\n\n/**\n * A simple system responsible for initiating the renderer.\n * @memberof PIXI\n */export class StartupSystem implements ISystem\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = {\n        type: [\n            ExtensionType.RendererSystem,\n            ExtensionType.CanvasRendererSystem\n        ],\n        name: 'startup',\n    };\n\n    readonly renderer: IRenderer;\n\n    constructor(renderer: IRenderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * It all starts here! This initiates every system, passing in the options for any system by name.\n     * @param options - the config for the renderer and all its systems\n     */\n    run(options: StartupOptions): void\n    {\n        const renderer = this.renderer;\n\n        renderer.emitWithCustomOptions(renderer.runners.init, options);\n\n        if (options.hello)\n        {\n            // eslint-disable-next-line no-console\n            console.log(`PixiJS ${'$_VERSION'} - ${renderer.rendererLogId} - https://pixijs.com`);\n        }\n\n        renderer.resize(this.renderer.screen.width, this.renderer.screen.height);\n    }\n\n    destroy(): void\n    {\n        // ka pow!\n    }\n}\n\nextensions.add(StartupSystem);\n"]},"metadata":{},"sourceType":"script"}