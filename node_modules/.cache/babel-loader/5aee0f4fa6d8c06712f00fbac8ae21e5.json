{"ast":null,"code":"import _regeneratorRuntime from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Constants}from\"@krogan/common\";import{Client}from\"colyseus.js\";import{useEffect,useState}from\"react\";import{useRoomContext,useRoomDispatch}from\"context/room\";import{serverUrl}from'utils/server';export var useLobbyManager=function useLobbyManager(){var _useRoomContext=useRoomContext(),lobbyRoom=_useRoomContext.lobbyRoom;var dispatch=useRoomDispatch();var client=new Client(serverUrl());var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var connectToLobby=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address){var options,lobbyRoom;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"Connecting as \".concat(address));options={address:address};// After connecting by address, complete the auth flow - add username, choose spaceships, choose captains\n_context.next=4;return client.joinOrCreate(Constants.ROOM_LOBBY_NAME,options).catch(function(err){console.error(err);setMessage('The Alpha version of Kroganverse is open only to a close group. Wait for the beta version to be able to test the game.');});case 4:lobbyRoom=_context.sent;if(lobbyRoom){console.log(\"Connected to room: \".concat(lobbyRoom.id));dispatch({type:'setLobbyRoom',lobbyRoom:lobbyRoom});}case 6:case\"end\":return _context.stop();}}},_callee);}));return function connectToLobby(_x){return _ref.apply(this,arguments);};}();var setupRoomHandlers=function setupRoomHandlers(){if(!lobbyRoom)return;// Listen for state changes\nlobbyRoom.onMessage(\"broadcast\",handleMessage);lobbyRoom.state.players.onAdd=handlePlayerAdd;lobbyRoom.state.players.onRemove=handlePlayerRemove;};useEffect(setupRoomHandlers,[lobbyRoom]);// PLAYER HANDLERS\nvar isPlayerIdMe=function isPlayerIdMe(id){return(lobbyRoom===null||lobbyRoom===void 0?void 0:lobbyRoom.sessionId)===id;};var handlePlayerAdd=function handlePlayerAdd(player,playerId){player.onChange=function(){handlePlayerUpdate(player,player.playerId);};handlePlayerUpdate(player,playerId);};var handlePlayerUpdate=function handlePlayerUpdate(player,playerId){var isMe=isPlayerIdMe(playerId);if(isMe){dispatch({type:'setPlayer',player:player});}};var handlePlayerRemove=function handlePlayerRemove(player,playerId){var isMe=isPlayerIdMe(playerId);if(isMe)dispatch({type:'setPlayer',player:undefined});};// METHODS\nvar updateUsername=function updateUsername(username){lobbyRoom===null||lobbyRoom===void 0?void 0:lobbyRoom.send(Constants.SET_USERNAME,username);};var updateSpaceships=function updateSpaceships(nonces){lobbyRoom===null||lobbyRoom===void 0?void 0:lobbyRoom.send(Constants.SET_SPACESHIPS,nonces);};var handleMessage=function handleMessage(message){console.log(\"Received message: \".concat(JSON.stringify(message)));};var leave=function leave(){lobbyRoom===null||lobbyRoom===void 0?void 0:lobbyRoom.leave();};return{message:message,connectToLobby:connectToLobby,updateUsername:updateUsername,updateSpaceships:updateSpaceships,leave:leave};};","map":null,"metadata":{},"sourceType":"module"}