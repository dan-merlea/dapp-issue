{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayVec = exports.ArrayVecType = void 0;\nvar utils_1 = require(\"../../utils\");\nvar collections_1 = require(\"./collections\");\nvar types_1 = require(\"./types\");\n// A type for known-length arrays. E.g. \"array20\", \"array32\", \"array64\" etc.\nvar ArrayVecType = /*#__PURE__*/function (_types_1$Type) {\n  _inherits(ArrayVecType, _types_1$Type);\n  var _super = _createSuper(ArrayVecType);\n  function ArrayVecType(length, typeParameter) {\n    var _this;\n    _classCallCheck(this, ArrayVecType);\n    _this = _super.call(this, \"Array\", [typeParameter]);\n    utils_1.guardTrue(length > 0, \"array length > 0\");\n    _this.length = length;\n    return _this;\n  }\n  _createClass(ArrayVecType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return ArrayVecType.ClassName;\n    }\n  }]);\n  return ArrayVecType;\n}(types_1.Type);\nexports.ArrayVecType = ArrayVecType;\nArrayVecType.ClassName = \"ArrayVecType\";\nvar ArrayVec = /*#__PURE__*/function (_types_1$TypedValue) {\n  _inherits(ArrayVec, _types_1$TypedValue);\n  var _super2 = _createSuper(ArrayVec);\n  function ArrayVec(type, items) {\n    var _this2;\n    _classCallCheck(this, ArrayVec);\n    _this2 = _super2.call(this, type);\n    utils_1.guardLength(items, type.length);\n    _this2.backingCollection = new collections_1.CollectionOfTypedValues(items);\n    return _this2;\n  }\n  _createClass(ArrayVec, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return ArrayVec.ClassName;\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.backingCollection.getLength();\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this.backingCollection.getItems();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.backingCollection.valueOf();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.backingCollection.equals(other.backingCollection);\n    }\n  }]);\n  return ArrayVec;\n}(types_1.TypedValue);\nexports.ArrayVec = ArrayVec;\nArrayVec.ClassName = \"ArrayVec\";","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/genericArray.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;AAAA,IACa,YAAa;EAAA;EAAA;EAItB,sBAAY,MAAc,EAAE,aAAmB,EAAA;IAAA;IAAA;IAC3C,0BAAM,OAAO,EAAE,CAAC,aAAa,CAAC;IAE9B,OAAA,CAAA,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,kBAAkB,CAAC;IACzC,MAAK,MAAM,GAAG,MAAM;IAAC;EACzB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,YAAY,CAAC,SAAS;IACjC;EAAC;EAAA;AAAA,EAb6B,OAAA,CAAA,IAAI;AAAtC,OAAA,CAAA,YAAA,GAAA,YAAA;AACW,YAAA,CAAA,SAAS,GAAG,cAAc;AAAC,IAezB,QAAS;EAAA;EAAA;EAIlB,kBAAY,IAAkB,EAAE,KAAmB,EAAA;IAAA;IAAA;IAC/C,4BAAM,IAAI;IACV,OAAA,CAAA,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;IAC/B,OAAK,iBAAiB,GAAG,IAAI,aAAA,CAAA,uBAAuB,CAAC,KAAK,CAAC;IAAC;EAChE;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,QAAQ,CAAC,SAAS;IAC7B;EAAC;IAAA;IAAA,OAED,qBAAS;MACL,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;IAC7C;EAAC;IAAA;IAAA,OAED,oBAAQ;MACJ,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;IAC5C;EAAC;IAAA;IAAA,OAED,mBAAO;MACH,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;IAC3C;EAAC;IAAA;IAAA,OAED,gBAAO,KAAe,EAAA;MAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC;IACjE;EAAC;EAAA;AAAA,EA5ByB,OAAA,CAAA,UAAU;AAAxC,OAAA,CAAA,QAAA,GAAA,QAAA;AACW,QAAA,CAAA,SAAS,GAAG,UAAU","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayVec = exports.ArrayVecType = void 0;\nconst utils_1 = require(\"../../utils\");\nconst collections_1 = require(\"./collections\");\nconst types_1 = require(\"./types\");\n// A type for known-length arrays. E.g. \"array20\", \"array32\", \"array64\" etc.\nclass ArrayVecType extends types_1.Type {\n    constructor(length, typeParameter) {\n        super(\"Array\", [typeParameter]);\n        utils_1.guardTrue(length > 0, \"array length > 0\");\n        this.length = length;\n    }\n    getClassName() {\n        return ArrayVecType.ClassName;\n    }\n}\nexports.ArrayVecType = ArrayVecType;\nArrayVecType.ClassName = \"ArrayVecType\";\nclass ArrayVec extends types_1.TypedValue {\n    constructor(type, items) {\n        super(type);\n        utils_1.guardLength(items, type.length);\n        this.backingCollection = new collections_1.CollectionOfTypedValues(items);\n    }\n    getClassName() {\n        return ArrayVec.ClassName;\n    }\n    getLength() {\n        return this.backingCollection.getLength();\n    }\n    getItems() {\n        return this.backingCollection.getItems();\n    }\n    valueOf() {\n        return this.backingCollection.valueOf();\n    }\n    equals(other) {\n        return this.backingCollection.equals(other.backingCollection);\n    }\n}\nexports.ArrayVec = ArrayVec;\nArrayVec.ClassName = \"ArrayVec\";\n//# sourceMappingURL=genericArray.js.map"]},"metadata":{},"sourceType":"script"}