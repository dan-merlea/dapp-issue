{"ast":null,"code":"function nextPow2(v) {\n  v += v === 0 ? 1 : 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\nfunction isPow2(v) {\n  return !(v & v - 1) && !!v;\n}\nfunction log2(v) {\n  var r = (v > 65535 ? 1 : 0) << 4;\n  v >>>= r;\n  var shift = (v > 255 ? 1 : 0) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 15 ? 1 : 0) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 3 ? 1 : 0) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}\nexport { isPow2, log2, nextPow2 };","map":{"version":3,"sources":["../../src/data/pow2.ts"],"names":[],"mappings":"AASO,SAAA,QAAA,CAAkB,CACzB,EAAA;EACS,CAAA,IAAA,CAAA,KAAM,CAAA,GAAI,CAAI,GAAA,CAAA;EACjB,EAAA,CAAA;EACF,CAAA,IAAK,CAAM,KAAA,CAAA;EACX,CAAA,IAAK,CAAM,KAAA,CAAA;EACX,CAAA,IAAK,CAAM,KAAA,CAAA;EACX,CAAA,IAAK,CAAM,KAAA,CAAA;EACX,CAAA,IAAK,CAAM,KAAA,EAAA;EAEX,OAAO,CAAI,GAAA,CAAA;AACf;AASO,SAAA,MAAA,CAAgB,CACvB,EAAA;EACI,OAAO,EAAE,CAAA,GAAK,CAAI,GAAA,CAAA,CAAA,IAAQ,CAAC,CAAC,CAAA;AAChC;AASO,SAAA,IAAA,CAAc,CACrB,EAAA;EACI,IAAI,CAAK,GAAA,CAAA,CAAA,GAAI,KAAS,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA;EAEzB,CAAA,MAAA,CAAA;EAEP,IAAI,KAAS,GAAA,CAAA,CAAA,GAAI,GAAO,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA;EAE3B,CAAA,MAAA,KAAA;EAAY,CAAA,IAAA,KAAA;EACV,KAAA,GAAA,CAAA,CAAA,GAAI,EAAM,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA;EACtB,CAAA,MAAA,KAAA;EAAY,CAAA,IAAA,KAAA;EACV,KAAA,GAAA,CAAA,CAAA,GAAI,CAAM,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA;EACtB,CAAA,MAAA,KAAA;EAAY,CAAA,IAAA,KAAA;EAEnB,OAAO,CAAA,GAAK,CAAK,IAAA,CAAA;AACrB","sourcesContent":["// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} - next rounded power of two\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {boolean} `true` if value is power of two\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} logarithm base 2\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n"]},"metadata":{},"sourceType":"module"}