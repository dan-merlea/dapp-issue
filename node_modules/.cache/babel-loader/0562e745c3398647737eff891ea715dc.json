{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n// Common aliases\nvar $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util;\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n$root.proto = function () {\n  /**\n   * Namespace proto.\n   * @exports proto\n   * @namespace\n   */\n  var proto = {};\n  proto.Transaction = function () {\n    /**\n     * Properties of a Transaction.\n     * @memberof proto\n     * @interface ITransaction\n     * @property {number|Long|null} [Nonce] Transaction Nonce\n     * @property {Uint8Array|null} [Value] Transaction Value\n     * @property {Uint8Array|null} [RcvAddr] Transaction RcvAddr\n     * @property {Uint8Array|null} [RcvUserName] Transaction RcvUserName\n     * @property {Uint8Array|null} [SndAddr] Transaction SndAddr\n     * @property {Uint8Array|null} [SndUserName] Transaction SndUserName\n     * @property {number|Long|null} [GasPrice] Transaction GasPrice\n     * @property {number|Long|null} [GasLimit] Transaction GasLimit\n     * @property {Uint8Array|null} [Data] Transaction Data\n     * @property {Uint8Array|null} [ChainID] Transaction ChainID\n     * @property {number|null} [Version] Transaction Version\n     * @property {Uint8Array|null} [Signature] Transaction Signature\n     * @property {number|null} [Options] Transaction Options\n     */\n    /**\n     * Constructs a new Transaction.\n     * @memberof proto\n     * @classdesc Represents a Transaction.\n     * @implements ITransaction\n     * @constructor\n     * @param {proto.ITransaction=} [properties] Properties to set\n     */\n    function Transaction(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n    }\n    /**\n     * Transaction Nonce.\n     * @member {number|Long} Nonce\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * Transaction Value.\n     * @member {Uint8Array} Value\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Value = $util.newBuffer([]);\n    /**\n     * Transaction RcvAddr.\n     * @member {Uint8Array} RcvAddr\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.RcvAddr = $util.newBuffer([]);\n    /**\n     * Transaction RcvUserName.\n     * @member {Uint8Array} RcvUserName\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.RcvUserName = $util.newBuffer([]);\n    /**\n     * Transaction SndAddr.\n     * @member {Uint8Array} SndAddr\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.SndAddr = $util.newBuffer([]);\n    /**\n     * Transaction SndUserName.\n     * @member {Uint8Array} SndUserName\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.SndUserName = $util.newBuffer([]);\n    /**\n     * Transaction GasPrice.\n     * @member {number|Long} GasPrice\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.GasPrice = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * Transaction GasLimit.\n     * @member {number|Long} GasLimit\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.GasLimit = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\n     * Transaction Data.\n     * @member {Uint8Array} Data\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Data = $util.newBuffer([]);\n    /**\n     * Transaction ChainID.\n     * @member {Uint8Array} ChainID\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.ChainID = $util.newBuffer([]);\n    /**\n     * Transaction Version.\n     * @member {number} Version\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Version = 0;\n    /**\n     * Transaction Signature.\n     * @member {Uint8Array} Signature\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Signature = $util.newBuffer([]);\n    /**\n     * Transaction Options.\n     * @member {number} Options\n     * @memberof proto.Transaction\n     * @instance\n     */\n    Transaction.prototype.Options = 0;\n    /**\n     * Creates a new Transaction instance using the specified properties.\n     * @function create\n     * @memberof proto.Transaction\n     * @static\n     * @param {proto.ITransaction=} [properties] Properties to set\n     * @returns {proto.Transaction} Transaction instance\n     */\n    Transaction.create = function create(properties) {\n      return new Transaction(properties);\n    };\n    /**\n     * Encodes the specified Transaction message. Does not implicitly {@link proto.Transaction.verify|verify} messages.\n     * @function encode\n     * @memberof proto.Transaction\n     * @static\n     * @param {proto.ITransaction} message Transaction message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Transaction.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.Nonce != null && Object.hasOwnProperty.call(message, \"Nonce\")) writer.uint32( /* id 1, wireType 0 =*/8).uint64(message.Nonce);\n      if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\")) writer.uint32( /* id 2, wireType 2 =*/18).bytes(message.Value);\n      if (message.RcvAddr != null && Object.hasOwnProperty.call(message, \"RcvAddr\")) writer.uint32( /* id 3, wireType 2 =*/26).bytes(message.RcvAddr);\n      if (message.RcvUserName != null && Object.hasOwnProperty.call(message, \"RcvUserName\")) writer.uint32( /* id 4, wireType 2 =*/34).bytes(message.RcvUserName);\n      if (message.SndAddr != null && Object.hasOwnProperty.call(message, \"SndAddr\")) writer.uint32( /* id 5, wireType 2 =*/42).bytes(message.SndAddr);\n      if (message.SndUserName != null && Object.hasOwnProperty.call(message, \"SndUserName\")) writer.uint32( /* id 6, wireType 2 =*/50).bytes(message.SndUserName);\n      if (message.GasPrice != null && Object.hasOwnProperty.call(message, \"GasPrice\")) writer.uint32( /* id 7, wireType 0 =*/56).uint64(message.GasPrice);\n      if (message.GasLimit != null && Object.hasOwnProperty.call(message, \"GasLimit\")) writer.uint32( /* id 8, wireType 0 =*/64).uint64(message.GasLimit);\n      if (message.Data != null && Object.hasOwnProperty.call(message, \"Data\")) writer.uint32( /* id 9, wireType 2 =*/74).bytes(message.Data);\n      if (message.ChainID != null && Object.hasOwnProperty.call(message, \"ChainID\")) writer.uint32( /* id 10, wireType 2 =*/82).bytes(message.ChainID);\n      if (message.Version != null && Object.hasOwnProperty.call(message, \"Version\")) writer.uint32( /* id 11, wireType 0 =*/88).uint32(message.Version);\n      if (message.Signature != null && Object.hasOwnProperty.call(message, \"Signature\")) writer.uint32( /* id 12, wireType 2 =*/98).bytes(message.Signature);\n      if (message.Options != null && Object.hasOwnProperty.call(message, \"Options\")) writer.uint32( /* id 13, wireType 0 =*/104).uint32(message.Options);\n      return writer;\n    };\n    /**\n     * Encodes the specified Transaction message, length delimited. Does not implicitly {@link proto.Transaction.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof proto.Transaction\n     * @static\n     * @param {proto.ITransaction} message Transaction message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Transaction.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\n     * Decodes a Transaction message from the specified reader or buffer.\n     * @function decode\n     * @memberof proto.Transaction\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {proto.Transaction} Transaction\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Transaction.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.proto.Transaction();\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n        switch (tag >>> 3) {\n          case 1:\n            message.Nonce = reader.uint64();\n            break;\n          case 2:\n            message.Value = reader.bytes();\n            break;\n          case 3:\n            message.RcvAddr = reader.bytes();\n            break;\n          case 4:\n            message.RcvUserName = reader.bytes();\n            break;\n          case 5:\n            message.SndAddr = reader.bytes();\n            break;\n          case 6:\n            message.SndUserName = reader.bytes();\n            break;\n          case 7:\n            message.GasPrice = reader.uint64();\n            break;\n          case 8:\n            message.GasLimit = reader.uint64();\n            break;\n          case 9:\n            message.Data = reader.bytes();\n            break;\n          case 10:\n            message.ChainID = reader.bytes();\n            break;\n          case 11:\n            message.Version = reader.uint32();\n            break;\n          case 12:\n            message.Signature = reader.bytes();\n            break;\n          case 13:\n            message.Options = reader.uint32();\n            break;\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n      return message;\n    };\n    /**\n     * Decodes a Transaction message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof proto.Transaction\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {proto.Transaction} Transaction\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Transaction.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\n     * Verifies a Transaction message.\n     * @function verify\n     * @memberof proto.Transaction\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Transaction.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (message.Nonce != null && message.hasOwnProperty(\"Nonce\")) if (!$util.isInteger(message.Nonce) && !(message.Nonce && $util.isInteger(message.Nonce.low) && $util.isInteger(message.Nonce.high))) return \"Nonce: integer|Long expected\";\n      if (message.Value != null && message.hasOwnProperty(\"Value\")) if (!(message.Value && typeof message.Value.length === \"number\" || $util.isString(message.Value))) return \"Value: buffer expected\";\n      if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\")) if (!(message.RcvAddr && typeof message.RcvAddr.length === \"number\" || $util.isString(message.RcvAddr))) return \"RcvAddr: buffer expected\";\n      if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\")) if (!(message.RcvUserName && typeof message.RcvUserName.length === \"number\" || $util.isString(message.RcvUserName))) return \"RcvUserName: buffer expected\";\n      if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\")) if (!(message.SndAddr && typeof message.SndAddr.length === \"number\" || $util.isString(message.SndAddr))) return \"SndAddr: buffer expected\";\n      if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\")) if (!(message.SndUserName && typeof message.SndUserName.length === \"number\" || $util.isString(message.SndUserName))) return \"SndUserName: buffer expected\";\n      if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\")) if (!$util.isInteger(message.GasPrice) && !(message.GasPrice && $util.isInteger(message.GasPrice.low) && $util.isInteger(message.GasPrice.high))) return \"GasPrice: integer|Long expected\";\n      if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\")) if (!$util.isInteger(message.GasLimit) && !(message.GasLimit && $util.isInteger(message.GasLimit.low) && $util.isInteger(message.GasLimit.high))) return \"GasLimit: integer|Long expected\";\n      if (message.Data != null && message.hasOwnProperty(\"Data\")) if (!(message.Data && typeof message.Data.length === \"number\" || $util.isString(message.Data))) return \"Data: buffer expected\";\n      if (message.ChainID != null && message.hasOwnProperty(\"ChainID\")) if (!(message.ChainID && typeof message.ChainID.length === \"number\" || $util.isString(message.ChainID))) return \"ChainID: buffer expected\";\n      if (message.Version != null && message.hasOwnProperty(\"Version\")) if (!$util.isInteger(message.Version)) return \"Version: integer expected\";\n      if (message.Signature != null && message.hasOwnProperty(\"Signature\")) if (!(message.Signature && typeof message.Signature.length === \"number\" || $util.isString(message.Signature))) return \"Signature: buffer expected\";\n      if (message.Options != null && message.hasOwnProperty(\"Options\")) if (!$util.isInteger(message.Options)) return \"Options: integer expected\";\n      return null;\n    };\n    /**\n     * Creates a Transaction message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof proto.Transaction\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {proto.Transaction} Transaction\n     */\n    Transaction.fromObject = function fromObject(object) {\n      if (object instanceof $root.proto.Transaction) return object;\n      var message = new $root.proto.Transaction();\n      if (object.Nonce != null) if ($util.Long) (message.Nonce = $util.Long.fromValue(object.Nonce)).unsigned = true;else if (typeof object.Nonce === \"string\") message.Nonce = parseInt(object.Nonce, 10);else if (typeof object.Nonce === \"number\") message.Nonce = object.Nonce;else if (typeof object.Nonce === \"object\") message.Nonce = new $util.LongBits(object.Nonce.low >>> 0, object.Nonce.high >>> 0).toNumber(true);\n      if (object.Value != null) if (typeof object.Value === \"string\") $util.base64.decode(object.Value, message.Value = $util.newBuffer($util.base64.length(object.Value)), 0);else if (object.Value.length) message.Value = object.Value;\n      if (object.RcvAddr != null) if (typeof object.RcvAddr === \"string\") $util.base64.decode(object.RcvAddr, message.RcvAddr = $util.newBuffer($util.base64.length(object.RcvAddr)), 0);else if (object.RcvAddr.length) message.RcvAddr = object.RcvAddr;\n      if (object.RcvUserName != null) if (typeof object.RcvUserName === \"string\") $util.base64.decode(object.RcvUserName, message.RcvUserName = $util.newBuffer($util.base64.length(object.RcvUserName)), 0);else if (object.RcvUserName.length) message.RcvUserName = object.RcvUserName;\n      if (object.SndAddr != null) if (typeof object.SndAddr === \"string\") $util.base64.decode(object.SndAddr, message.SndAddr = $util.newBuffer($util.base64.length(object.SndAddr)), 0);else if (object.SndAddr.length) message.SndAddr = object.SndAddr;\n      if (object.SndUserName != null) if (typeof object.SndUserName === \"string\") $util.base64.decode(object.SndUserName, message.SndUserName = $util.newBuffer($util.base64.length(object.SndUserName)), 0);else if (object.SndUserName.length) message.SndUserName = object.SndUserName;\n      if (object.GasPrice != null) if ($util.Long) (message.GasPrice = $util.Long.fromValue(object.GasPrice)).unsigned = true;else if (typeof object.GasPrice === \"string\") message.GasPrice = parseInt(object.GasPrice, 10);else if (typeof object.GasPrice === \"number\") message.GasPrice = object.GasPrice;else if (typeof object.GasPrice === \"object\") message.GasPrice = new $util.LongBits(object.GasPrice.low >>> 0, object.GasPrice.high >>> 0).toNumber(true);\n      if (object.GasLimit != null) if ($util.Long) (message.GasLimit = $util.Long.fromValue(object.GasLimit)).unsigned = true;else if (typeof object.GasLimit === \"string\") message.GasLimit = parseInt(object.GasLimit, 10);else if (typeof object.GasLimit === \"number\") message.GasLimit = object.GasLimit;else if (typeof object.GasLimit === \"object\") message.GasLimit = new $util.LongBits(object.GasLimit.low >>> 0, object.GasLimit.high >>> 0).toNumber(true);\n      if (object.Data != null) if (typeof object.Data === \"string\") $util.base64.decode(object.Data, message.Data = $util.newBuffer($util.base64.length(object.Data)), 0);else if (object.Data.length) message.Data = object.Data;\n      if (object.ChainID != null) if (typeof object.ChainID === \"string\") $util.base64.decode(object.ChainID, message.ChainID = $util.newBuffer($util.base64.length(object.ChainID)), 0);else if (object.ChainID.length) message.ChainID = object.ChainID;\n      if (object.Version != null) message.Version = object.Version >>> 0;\n      if (object.Signature != null) if (typeof object.Signature === \"string\") $util.base64.decode(object.Signature, message.Signature = $util.newBuffer($util.base64.length(object.Signature)), 0);else if (object.Signature.length) message.Signature = object.Signature;\n      if (object.Options != null) message.Options = object.Options >>> 0;\n      return message;\n    };\n    /**\n     * Creates a plain object from a Transaction message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof proto.Transaction\n     * @static\n     * @param {proto.Transaction} message Transaction\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Transaction.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n      if (options.defaults) {\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.Nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.Nonce = options.longs === String ? \"0\" : 0;\n        if (options.bytes === String) object.Value = \"\";else {\n          object.Value = [];\n          if (options.bytes !== Array) object.Value = $util.newBuffer(object.Value);\n        }\n        if (options.bytes === String) object.RcvAddr = \"\";else {\n          object.RcvAddr = [];\n          if (options.bytes !== Array) object.RcvAddr = $util.newBuffer(object.RcvAddr);\n        }\n        if (options.bytes === String) object.RcvUserName = \"\";else {\n          object.RcvUserName = [];\n          if (options.bytes !== Array) object.RcvUserName = $util.newBuffer(object.RcvUserName);\n        }\n        if (options.bytes === String) object.SndAddr = \"\";else {\n          object.SndAddr = [];\n          if (options.bytes !== Array) object.SndAddr = $util.newBuffer(object.SndAddr);\n        }\n        if (options.bytes === String) object.SndUserName = \"\";else {\n          object.SndUserName = [];\n          if (options.bytes !== Array) object.SndUserName = $util.newBuffer(object.SndUserName);\n        }\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.GasPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.GasPrice = options.longs === String ? \"0\" : 0;\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.GasLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.GasLimit = options.longs === String ? \"0\" : 0;\n        if (options.bytes === String) object.Data = \"\";else {\n          object.Data = [];\n          if (options.bytes !== Array) object.Data = $util.newBuffer(object.Data);\n        }\n        if (options.bytes === String) object.ChainID = \"\";else {\n          object.ChainID = [];\n          if (options.bytes !== Array) object.ChainID = $util.newBuffer(object.ChainID);\n        }\n        object.Version = 0;\n        if (options.bytes === String) object.Signature = \"\";else {\n          object.Signature = [];\n          if (options.bytes !== Array) object.Signature = $util.newBuffer(object.Signature);\n        }\n        object.Options = 0;\n      }\n      if (message.Nonce != null && message.hasOwnProperty(\"Nonce\")) if (typeof message.Nonce === \"number\") object.Nonce = options.longs === String ? String(message.Nonce) : message.Nonce;else object.Nonce = options.longs === String ? $util.Long.prototype.toString.call(message.Nonce) : options.longs === Number ? new $util.LongBits(message.Nonce.low >>> 0, message.Nonce.high >>> 0).toNumber(true) : message.Nonce;\n      if (message.Value != null && message.hasOwnProperty(\"Value\")) object.Value = options.bytes === String ? $util.base64.encode(message.Value, 0, message.Value.length) : options.bytes === Array ? Array.prototype.slice.call(message.Value) : message.Value;\n      if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\")) object.RcvAddr = options.bytes === String ? $util.base64.encode(message.RcvAddr, 0, message.RcvAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvAddr) : message.RcvAddr;\n      if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\")) object.RcvUserName = options.bytes === String ? $util.base64.encode(message.RcvUserName, 0, message.RcvUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvUserName) : message.RcvUserName;\n      if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\")) object.SndAddr = options.bytes === String ? $util.base64.encode(message.SndAddr, 0, message.SndAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndAddr) : message.SndAddr;\n      if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\")) object.SndUserName = options.bytes === String ? $util.base64.encode(message.SndUserName, 0, message.SndUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndUserName) : message.SndUserName;\n      if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\")) if (typeof message.GasPrice === \"number\") object.GasPrice = options.longs === String ? String(message.GasPrice) : message.GasPrice;else object.GasPrice = options.longs === String ? $util.Long.prototype.toString.call(message.GasPrice) : options.longs === Number ? new $util.LongBits(message.GasPrice.low >>> 0, message.GasPrice.high >>> 0).toNumber(true) : message.GasPrice;\n      if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\")) if (typeof message.GasLimit === \"number\") object.GasLimit = options.longs === String ? String(message.GasLimit) : message.GasLimit;else object.GasLimit = options.longs === String ? $util.Long.prototype.toString.call(message.GasLimit) : options.longs === Number ? new $util.LongBits(message.GasLimit.low >>> 0, message.GasLimit.high >>> 0).toNumber(true) : message.GasLimit;\n      if (message.Data != null && message.hasOwnProperty(\"Data\")) object.Data = options.bytes === String ? $util.base64.encode(message.Data, 0, message.Data.length) : options.bytes === Array ? Array.prototype.slice.call(message.Data) : message.Data;\n      if (message.ChainID != null && message.hasOwnProperty(\"ChainID\")) object.ChainID = options.bytes === String ? $util.base64.encode(message.ChainID, 0, message.ChainID.length) : options.bytes === Array ? Array.prototype.slice.call(message.ChainID) : message.ChainID;\n      if (message.Version != null && message.hasOwnProperty(\"Version\")) object.Version = message.Version;\n      if (message.Signature != null && message.hasOwnProperty(\"Signature\")) object.Signature = options.bytes === String ? $util.base64.encode(message.Signature, 0, message.Signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.Signature) : message.Signature;\n      if (message.Options != null && message.hasOwnProperty(\"Options\")) object.Options = message.Options;\n      return object;\n    };\n    /**\n     * Converts this Transaction to JSON.\n     * @function toJSON\n     * @memberof proto.Transaction\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Transaction.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n    return Transaction;\n  }();\n  return proto;\n}();\nmodule.exports = $root;","map":{"version":3,"sources":["../../src/proto/compiled.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\nvar $protobuf = require(\"protobufjs/minimal\");\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n$root.proto = (function () {\n    /**\n     * Namespace proto.\n     * @exports proto\n     * @namespace\n     */\n    var proto = {};\n    proto.Transaction = (function () {\n        /**\n         * Properties of a Transaction.\n         * @memberof proto\n         * @interface ITransaction\n         * @property {number|Long|null} [Nonce] Transaction Nonce\n         * @property {Uint8Array|null} [Value] Transaction Value\n         * @property {Uint8Array|null} [RcvAddr] Transaction RcvAddr\n         * @property {Uint8Array|null} [RcvUserName] Transaction RcvUserName\n         * @property {Uint8Array|null} [SndAddr] Transaction SndAddr\n         * @property {Uint8Array|null} [SndUserName] Transaction SndUserName\n         * @property {number|Long|null} [GasPrice] Transaction GasPrice\n         * @property {number|Long|null} [GasLimit] Transaction GasLimit\n         * @property {Uint8Array|null} [Data] Transaction Data\n         * @property {Uint8Array|null} [ChainID] Transaction ChainID\n         * @property {number|null} [Version] Transaction Version\n         * @property {Uint8Array|null} [Signature] Transaction Signature\n         * @property {number|null} [Options] Transaction Options\n         */\n        /**\n         * Constructs a new Transaction.\n         * @memberof proto\n         * @classdesc Represents a Transaction.\n         * @implements ITransaction\n         * @constructor\n         * @param {proto.ITransaction=} [properties] Properties to set\n         */\n        function Transaction(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * Transaction Nonce.\n         * @member {number|Long} Nonce\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * Transaction Value.\n         * @member {Uint8Array} Value\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Value = $util.newBuffer([]);\n        /**\n         * Transaction RcvAddr.\n         * @member {Uint8Array} RcvAddr\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.RcvAddr = $util.newBuffer([]);\n        /**\n         * Transaction RcvUserName.\n         * @member {Uint8Array} RcvUserName\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.RcvUserName = $util.newBuffer([]);\n        /**\n         * Transaction SndAddr.\n         * @member {Uint8Array} SndAddr\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.SndAddr = $util.newBuffer([]);\n        /**\n         * Transaction SndUserName.\n         * @member {Uint8Array} SndUserName\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.SndUserName = $util.newBuffer([]);\n        /**\n         * Transaction GasPrice.\n         * @member {number|Long} GasPrice\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.GasPrice = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * Transaction GasLimit.\n         * @member {number|Long} GasLimit\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.GasLimit = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * Transaction Data.\n         * @member {Uint8Array} Data\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Data = $util.newBuffer([]);\n        /**\n         * Transaction ChainID.\n         * @member {Uint8Array} ChainID\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.ChainID = $util.newBuffer([]);\n        /**\n         * Transaction Version.\n         * @member {number} Version\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Version = 0;\n        /**\n         * Transaction Signature.\n         * @member {Uint8Array} Signature\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Signature = $util.newBuffer([]);\n        /**\n         * Transaction Options.\n         * @member {number} Options\n         * @memberof proto.Transaction\n         * @instance\n         */\n        Transaction.prototype.Options = 0;\n        /**\n         * Creates a new Transaction instance using the specified properties.\n         * @function create\n         * @memberof proto.Transaction\n         * @static\n         * @param {proto.ITransaction=} [properties] Properties to set\n         * @returns {proto.Transaction} Transaction instance\n         */\n        Transaction.create = function create(properties) {\n            return new Transaction(properties);\n        };\n        /**\n         * Encodes the specified Transaction message. Does not implicitly {@link proto.Transaction.verify|verify} messages.\n         * @function encode\n         * @memberof proto.Transaction\n         * @static\n         * @param {proto.ITransaction} message Transaction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Transaction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Nonce != null && Object.hasOwnProperty.call(message, \"Nonce\"))\n                writer.uint32(/* id 1, wireType 0 =*/ 8).uint64(message.Nonce);\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\n                writer.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.Value);\n            if (message.RcvAddr != null && Object.hasOwnProperty.call(message, \"RcvAddr\"))\n                writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.RcvAddr);\n            if (message.RcvUserName != null && Object.hasOwnProperty.call(message, \"RcvUserName\"))\n                writer.uint32(/* id 4, wireType 2 =*/ 34).bytes(message.RcvUserName);\n            if (message.SndAddr != null && Object.hasOwnProperty.call(message, \"SndAddr\"))\n                writer.uint32(/* id 5, wireType 2 =*/ 42).bytes(message.SndAddr);\n            if (message.SndUserName != null && Object.hasOwnProperty.call(message, \"SndUserName\"))\n                writer.uint32(/* id 6, wireType 2 =*/ 50).bytes(message.SndUserName);\n            if (message.GasPrice != null && Object.hasOwnProperty.call(message, \"GasPrice\"))\n                writer.uint32(/* id 7, wireType 0 =*/ 56).uint64(message.GasPrice);\n            if (message.GasLimit != null && Object.hasOwnProperty.call(message, \"GasLimit\"))\n                writer.uint32(/* id 8, wireType 0 =*/ 64).uint64(message.GasLimit);\n            if (message.Data != null && Object.hasOwnProperty.call(message, \"Data\"))\n                writer.uint32(/* id 9, wireType 2 =*/ 74).bytes(message.Data);\n            if (message.ChainID != null && Object.hasOwnProperty.call(message, \"ChainID\"))\n                writer.uint32(/* id 10, wireType 2 =*/ 82).bytes(message.ChainID);\n            if (message.Version != null && Object.hasOwnProperty.call(message, \"Version\"))\n                writer.uint32(/* id 11, wireType 0 =*/ 88).uint32(message.Version);\n            if (message.Signature != null && Object.hasOwnProperty.call(message, \"Signature\"))\n                writer.uint32(/* id 12, wireType 2 =*/ 98).bytes(message.Signature);\n            if (message.Options != null && Object.hasOwnProperty.call(message, \"Options\"))\n                writer.uint32(/* id 13, wireType 0 =*/ 104).uint32(message.Options);\n            return writer;\n        };\n        /**\n         * Encodes the specified Transaction message, length delimited. Does not implicitly {@link proto.Transaction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof proto.Transaction\n         * @static\n         * @param {proto.ITransaction} message Transaction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Transaction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a Transaction message from the specified reader or buffer.\n         * @function decode\n         * @memberof proto.Transaction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {proto.Transaction} Transaction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Transaction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.proto.Transaction();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                    case 1:\n                        message.Nonce = reader.uint64();\n                        break;\n                    case 2:\n                        message.Value = reader.bytes();\n                        break;\n                    case 3:\n                        message.RcvAddr = reader.bytes();\n                        break;\n                    case 4:\n                        message.RcvUserName = reader.bytes();\n                        break;\n                    case 5:\n                        message.SndAddr = reader.bytes();\n                        break;\n                    case 6:\n                        message.SndUserName = reader.bytes();\n                        break;\n                    case 7:\n                        message.GasPrice = reader.uint64();\n                        break;\n                    case 8:\n                        message.GasLimit = reader.uint64();\n                        break;\n                    case 9:\n                        message.Data = reader.bytes();\n                        break;\n                    case 10:\n                        message.ChainID = reader.bytes();\n                        break;\n                    case 11:\n                        message.Version = reader.uint32();\n                        break;\n                    case 12:\n                        message.Signature = reader.bytes();\n                        break;\n                    case 13:\n                        message.Options = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                }\n            }\n            return message;\n        };\n        /**\n         * Decodes a Transaction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof proto.Transaction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {proto.Transaction} Transaction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Transaction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a Transaction message.\n         * @function verify\n         * @memberof proto.Transaction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Transaction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Nonce != null && message.hasOwnProperty(\"Nonce\"))\n                if (!$util.isInteger(message.Nonce) && !(message.Nonce && $util.isInteger(message.Nonce.low) && $util.isInteger(message.Nonce.high)))\n                    return \"Nonce: integer|Long expected\";\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                if (!(message.Value && typeof message.Value.length === \"number\" || $util.isString(message.Value)))\n                    return \"Value: buffer expected\";\n            if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\"))\n                if (!(message.RcvAddr && typeof message.RcvAddr.length === \"number\" || $util.isString(message.RcvAddr)))\n                    return \"RcvAddr: buffer expected\";\n            if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\"))\n                if (!(message.RcvUserName && typeof message.RcvUserName.length === \"number\" || $util.isString(message.RcvUserName)))\n                    return \"RcvUserName: buffer expected\";\n            if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\"))\n                if (!(message.SndAddr && typeof message.SndAddr.length === \"number\" || $util.isString(message.SndAddr)))\n                    return \"SndAddr: buffer expected\";\n            if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\"))\n                if (!(message.SndUserName && typeof message.SndUserName.length === \"number\" || $util.isString(message.SndUserName)))\n                    return \"SndUserName: buffer expected\";\n            if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\"))\n                if (!$util.isInteger(message.GasPrice) && !(message.GasPrice && $util.isInteger(message.GasPrice.low) && $util.isInteger(message.GasPrice.high)))\n                    return \"GasPrice: integer|Long expected\";\n            if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\"))\n                if (!$util.isInteger(message.GasLimit) && !(message.GasLimit && $util.isInteger(message.GasLimit.low) && $util.isInteger(message.GasLimit.high)))\n                    return \"GasLimit: integer|Long expected\";\n            if (message.Data != null && message.hasOwnProperty(\"Data\"))\n                if (!(message.Data && typeof message.Data.length === \"number\" || $util.isString(message.Data)))\n                    return \"Data: buffer expected\";\n            if (message.ChainID != null && message.hasOwnProperty(\"ChainID\"))\n                if (!(message.ChainID && typeof message.ChainID.length === \"number\" || $util.isString(message.ChainID)))\n                    return \"ChainID: buffer expected\";\n            if (message.Version != null && message.hasOwnProperty(\"Version\"))\n                if (!$util.isInteger(message.Version))\n                    return \"Version: integer expected\";\n            if (message.Signature != null && message.hasOwnProperty(\"Signature\"))\n                if (!(message.Signature && typeof message.Signature.length === \"number\" || $util.isString(message.Signature)))\n                    return \"Signature: buffer expected\";\n            if (message.Options != null && message.hasOwnProperty(\"Options\"))\n                if (!$util.isInteger(message.Options))\n                    return \"Options: integer expected\";\n            return null;\n        };\n        /**\n         * Creates a Transaction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof proto.Transaction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {proto.Transaction} Transaction\n         */\n        Transaction.fromObject = function fromObject(object) {\n            if (object instanceof $root.proto.Transaction)\n                return object;\n            var message = new $root.proto.Transaction();\n            if (object.Nonce != null)\n                if ($util.Long)\n                    (message.Nonce = $util.Long.fromValue(object.Nonce)).unsigned = true;\n                else if (typeof object.Nonce === \"string\")\n                    message.Nonce = parseInt(object.Nonce, 10);\n                else if (typeof object.Nonce === \"number\")\n                    message.Nonce = object.Nonce;\n                else if (typeof object.Nonce === \"object\")\n                    message.Nonce = new $util.LongBits(object.Nonce.low >>> 0, object.Nonce.high >>> 0).toNumber(true);\n            if (object.Value != null)\n                if (typeof object.Value === \"string\")\n                    $util.base64.decode(object.Value, message.Value = $util.newBuffer($util.base64.length(object.Value)), 0);\n                else if (object.Value.length)\n                    message.Value = object.Value;\n            if (object.RcvAddr != null)\n                if (typeof object.RcvAddr === \"string\")\n                    $util.base64.decode(object.RcvAddr, message.RcvAddr = $util.newBuffer($util.base64.length(object.RcvAddr)), 0);\n                else if (object.RcvAddr.length)\n                    message.RcvAddr = object.RcvAddr;\n            if (object.RcvUserName != null)\n                if (typeof object.RcvUserName === \"string\")\n                    $util.base64.decode(object.RcvUserName, message.RcvUserName = $util.newBuffer($util.base64.length(object.RcvUserName)), 0);\n                else if (object.RcvUserName.length)\n                    message.RcvUserName = object.RcvUserName;\n            if (object.SndAddr != null)\n                if (typeof object.SndAddr === \"string\")\n                    $util.base64.decode(object.SndAddr, message.SndAddr = $util.newBuffer($util.base64.length(object.SndAddr)), 0);\n                else if (object.SndAddr.length)\n                    message.SndAddr = object.SndAddr;\n            if (object.SndUserName != null)\n                if (typeof object.SndUserName === \"string\")\n                    $util.base64.decode(object.SndUserName, message.SndUserName = $util.newBuffer($util.base64.length(object.SndUserName)), 0);\n                else if (object.SndUserName.length)\n                    message.SndUserName = object.SndUserName;\n            if (object.GasPrice != null)\n                if ($util.Long)\n                    (message.GasPrice = $util.Long.fromValue(object.GasPrice)).unsigned = true;\n                else if (typeof object.GasPrice === \"string\")\n                    message.GasPrice = parseInt(object.GasPrice, 10);\n                else if (typeof object.GasPrice === \"number\")\n                    message.GasPrice = object.GasPrice;\n                else if (typeof object.GasPrice === \"object\")\n                    message.GasPrice = new $util.LongBits(object.GasPrice.low >>> 0, object.GasPrice.high >>> 0).toNumber(true);\n            if (object.GasLimit != null)\n                if ($util.Long)\n                    (message.GasLimit = $util.Long.fromValue(object.GasLimit)).unsigned = true;\n                else if (typeof object.GasLimit === \"string\")\n                    message.GasLimit = parseInt(object.GasLimit, 10);\n                else if (typeof object.GasLimit === \"number\")\n                    message.GasLimit = object.GasLimit;\n                else if (typeof object.GasLimit === \"object\")\n                    message.GasLimit = new $util.LongBits(object.GasLimit.low >>> 0, object.GasLimit.high >>> 0).toNumber(true);\n            if (object.Data != null)\n                if (typeof object.Data === \"string\")\n                    $util.base64.decode(object.Data, message.Data = $util.newBuffer($util.base64.length(object.Data)), 0);\n                else if (object.Data.length)\n                    message.Data = object.Data;\n            if (object.ChainID != null)\n                if (typeof object.ChainID === \"string\")\n                    $util.base64.decode(object.ChainID, message.ChainID = $util.newBuffer($util.base64.length(object.ChainID)), 0);\n                else if (object.ChainID.length)\n                    message.ChainID = object.ChainID;\n            if (object.Version != null)\n                message.Version = object.Version >>> 0;\n            if (object.Signature != null)\n                if (typeof object.Signature === \"string\")\n                    $util.base64.decode(object.Signature, message.Signature = $util.newBuffer($util.base64.length(object.Signature)), 0);\n                else if (object.Signature.length)\n                    message.Signature = object.Signature;\n            if (object.Options != null)\n                message.Options = object.Options >>> 0;\n            return message;\n        };\n        /**\n         * Creates a plain object from a Transaction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof proto.Transaction\n         * @static\n         * @param {proto.Transaction} message Transaction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Transaction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.Nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                }\n                else\n                    object.Nonce = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.Value = \"\";\n                else {\n                    object.Value = [];\n                    if (options.bytes !== Array)\n                        object.Value = $util.newBuffer(object.Value);\n                }\n                if (options.bytes === String)\n                    object.RcvAddr = \"\";\n                else {\n                    object.RcvAddr = [];\n                    if (options.bytes !== Array)\n                        object.RcvAddr = $util.newBuffer(object.RcvAddr);\n                }\n                if (options.bytes === String)\n                    object.RcvUserName = \"\";\n                else {\n                    object.RcvUserName = [];\n                    if (options.bytes !== Array)\n                        object.RcvUserName = $util.newBuffer(object.RcvUserName);\n                }\n                if (options.bytes === String)\n                    object.SndAddr = \"\";\n                else {\n                    object.SndAddr = [];\n                    if (options.bytes !== Array)\n                        object.SndAddr = $util.newBuffer(object.SndAddr);\n                }\n                if (options.bytes === String)\n                    object.SndUserName = \"\";\n                else {\n                    object.SndUserName = [];\n                    if (options.bytes !== Array)\n                        object.SndUserName = $util.newBuffer(object.SndUserName);\n                }\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.GasPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                }\n                else\n                    object.GasPrice = options.longs === String ? \"0\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, true);\n                    object.GasLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                }\n                else\n                    object.GasLimit = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.Data = \"\";\n                else {\n                    object.Data = [];\n                    if (options.bytes !== Array)\n                        object.Data = $util.newBuffer(object.Data);\n                }\n                if (options.bytes === String)\n                    object.ChainID = \"\";\n                else {\n                    object.ChainID = [];\n                    if (options.bytes !== Array)\n                        object.ChainID = $util.newBuffer(object.ChainID);\n                }\n                object.Version = 0;\n                if (options.bytes === String)\n                    object.Signature = \"\";\n                else {\n                    object.Signature = [];\n                    if (options.bytes !== Array)\n                        object.Signature = $util.newBuffer(object.Signature);\n                }\n                object.Options = 0;\n            }\n            if (message.Nonce != null && message.hasOwnProperty(\"Nonce\"))\n                if (typeof message.Nonce === \"number\")\n                    object.Nonce = options.longs === String ? String(message.Nonce) : message.Nonce;\n                else\n                    object.Nonce = options.longs === String ? $util.Long.prototype.toString.call(message.Nonce) : options.longs === Number ? new $util.LongBits(message.Nonce.low >>> 0, message.Nonce.high >>> 0).toNumber(true) : message.Nonce;\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                object.Value = options.bytes === String ? $util.base64.encode(message.Value, 0, message.Value.length) : options.bytes === Array ? Array.prototype.slice.call(message.Value) : message.Value;\n            if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\"))\n                object.RcvAddr = options.bytes === String ? $util.base64.encode(message.RcvAddr, 0, message.RcvAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvAddr) : message.RcvAddr;\n            if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\"))\n                object.RcvUserName = options.bytes === String ? $util.base64.encode(message.RcvUserName, 0, message.RcvUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvUserName) : message.RcvUserName;\n            if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\"))\n                object.SndAddr = options.bytes === String ? $util.base64.encode(message.SndAddr, 0, message.SndAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndAddr) : message.SndAddr;\n            if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\"))\n                object.SndUserName = options.bytes === String ? $util.base64.encode(message.SndUserName, 0, message.SndUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndUserName) : message.SndUserName;\n            if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\"))\n                if (typeof message.GasPrice === \"number\")\n                    object.GasPrice = options.longs === String ? String(message.GasPrice) : message.GasPrice;\n                else\n                    object.GasPrice = options.longs === String ? $util.Long.prototype.toString.call(message.GasPrice) : options.longs === Number ? new $util.LongBits(message.GasPrice.low >>> 0, message.GasPrice.high >>> 0).toNumber(true) : message.GasPrice;\n            if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\"))\n                if (typeof message.GasLimit === \"number\")\n                    object.GasLimit = options.longs === String ? String(message.GasLimit) : message.GasLimit;\n                else\n                    object.GasLimit = options.longs === String ? $util.Long.prototype.toString.call(message.GasLimit) : options.longs === Number ? new $util.LongBits(message.GasLimit.low >>> 0, message.GasLimit.high >>> 0).toNumber(true) : message.GasLimit;\n            if (message.Data != null && message.hasOwnProperty(\"Data\"))\n                object.Data = options.bytes === String ? $util.base64.encode(message.Data, 0, message.Data.length) : options.bytes === Array ? Array.prototype.slice.call(message.Data) : message.Data;\n            if (message.ChainID != null && message.hasOwnProperty(\"ChainID\"))\n                object.ChainID = options.bytes === String ? $util.base64.encode(message.ChainID, 0, message.ChainID.length) : options.bytes === Array ? Array.prototype.slice.call(message.ChainID) : message.ChainID;\n            if (message.Version != null && message.hasOwnProperty(\"Version\"))\n                object.Version = message.Version;\n            if (message.Signature != null && message.hasOwnProperty(\"Signature\"))\n                object.Signature = options.bytes === String ? $util.base64.encode(message.Signature, 0, message.Signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.Signature) : message.Signature;\n            if (message.Options != null && message.hasOwnProperty(\"Options\"))\n                object.Options = message.Options;\n            return object;\n        };\n        /**\n         * Converts this Transaction to JSON.\n         * @function toJSON\n         * @memberof proto.Transaction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Transaction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        return Transaction;\n    })();\n    return proto;\n})();\nmodule.exports = $root;\n//# sourceMappingURL=compiled.js.map"]},"metadata":{},"sourceType":"script"}