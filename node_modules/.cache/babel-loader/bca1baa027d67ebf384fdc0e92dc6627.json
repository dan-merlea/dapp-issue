{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrAccountNotConnected = exports.ErrCannotSignSingleTransaction = exports.Err = void 0;\n/**\n * The base class for exceptions (errors).\n */\nvar Err = /*#__PURE__*/function (_Error) {\n  _inherits(Err, _Error);\n  var _super = _createSuper(Err);\n  function Err(message, inner) {\n    var _this;\n    _classCallCheck(this, Err);\n    _this = _super.call(this, message);\n    _this.inner = undefined;\n    _this.inner = inner;\n    return _this;\n  }\n  return _createClass(Err);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.Err = Err;\nvar ErrCannotSignSingleTransaction = /*#__PURE__*/function (_Err) {\n  _inherits(ErrCannotSignSingleTransaction, _Err);\n  var _super2 = _createSuper(ErrCannotSignSingleTransaction);\n  function ErrCannotSignSingleTransaction() {\n    _classCallCheck(this, ErrCannotSignSingleTransaction);\n    return _super2.call(this, \"Cannot sign single transaction.\");\n  }\n  return _createClass(ErrCannotSignSingleTransaction);\n}(Err);\nexports.ErrCannotSignSingleTransaction = ErrCannotSignSingleTransaction;\nvar ErrAccountNotConnected = /*#__PURE__*/function (_Err2) {\n  _inherits(ErrAccountNotConnected, _Err2);\n  var _super3 = _createSuper(ErrAccountNotConnected);\n  function ErrAccountNotConnected() {\n    _classCallCheck(this, ErrAccountNotConnected);\n    return _super3.call(this, \"Account is not connected.\");\n  }\n  return _createClass(ErrAccountNotConnected);\n}(Err);\nexports.ErrAccountNotConnected = ErrAccountNotConnected;","map":null,"metadata":{},"sourceType":"script"}