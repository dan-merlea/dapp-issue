{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionLogs = void 0;\nvar errors_1 = require(\"./errors\");\nvar primitives_1 = require(\"./primitives\");\nvar transactionEvents_1 = require(\"./transactionEvents\");\nvar TransactionLogs = /*#__PURE__*/function () {\n  function TransactionLogs(init) {\n    _classCallCheck(this, TransactionLogs);\n    this.address = new primitives_1.Address(\"\");\n    this.events = [];\n    Object.assign(this, init);\n  }\n  _createClass(TransactionLogs, [{\n    key: \"findSingleOrNoneEvent\",\n    value: function findSingleOrNoneEvent(identifier, predicate) {\n      var events = this.findEvents(identifier, predicate);\n      if (events.length > 1) {\n        throw new errors_1.ErrUnexpectedCondition(\"more than one event of type \".concat(identifier));\n      }\n      return events[0];\n    }\n  }, {\n    key: \"findFirstOrNoneEvent\",\n    value: function findFirstOrNoneEvent(identifier, predicate) {\n      return this.findEvents(identifier, predicate)[0];\n    }\n  }, {\n    key: \"findEvents\",\n    value: function findEvents(identifier, predicate) {\n      var events = this.events.filter(function (event) {\n        return event.identifier == identifier;\n      });\n      if (predicate) {\n        events = events.filter(function (event) {\n          return predicate(event);\n        });\n      }\n      return events;\n    }\n  }], [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(logs) {\n      var result = new TransactionLogs();\n      result.address = new primitives_1.Address(logs.address);\n      result.events = (logs.events || []).map(function (event) {\n        return transactionEvents_1.TransactionEvent.fromHttpResponse(event);\n      });\n      return result;\n    }\n  }]);\n  return TransactionLogs;\n}();\nexports.TransactionLogs = TransactionLogs;","map":{"version":3,"sources":["../src/transactionLogs.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAAuD,IAE1C,eAAe;EAIxB,yBAAY,IAA+B,EAAA;IAAA;IAH3C,IAAA,CAAA,OAAO,GAAa,IAAI,YAAA,CAAA,OAAO,CAAC,EAAE,CAAC;IACnC,IAAA,CAAA,MAAM,GAAuB,EAAE;IAG3B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;EAC7B;EAAC;IAAA;IAAA,OAUD,+BAAsB,UAAkB,EAAE,SAAgD,EAAA;MACtF,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC;MAEnD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,IAAI,QAAA,CAAA,sBAAsB,uCAAgC,UAAU,EAAG;MAChF;MAED,OAAO,MAAM,CAAC,CAAC,CAAC;IACpB;EAAC;IAAA;IAAA,OAED,8BAAqB,UAAkB,EAAE,SAAgD,EAAA;MACrF,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACpD;EAAC;IAAA;IAAA,OAED,oBAAW,UAAkB,EAAE,SAAgD,EAAA;MAC3E,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK;QAAA,OAAI,KAAK,CAAC,UAAU,IAAI,UAAU;MAAA,EAAC;MAExE,IAAI,SAAS,EAAE;QACX,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK;UAAA,OAAI,SAAS,CAAC,KAAK,CAAC;QAAA,EAAC;MACpD;MAED,OAAO,MAAM;IACjB;EAAC;IAAA;IAAA,OA9BD,0BAAwB,IAAS,EAAA;MAC7B,IAAI,MAAM,GAAG,IAAI,eAAe,EAAE;MAClC,MAAM,CAAC,OAAO,GAAG,IAAI,YAAA,CAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;MAC1C,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,UAAC,KAAU;QAAA,OAAK,mBAAA,CAAA,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC;MAAA,EAAC;MAEjG,OAAO,MAAM;IACjB;EAAC;EAAA;AAAA;AAdL,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionLogs = void 0;\nconst errors_1 = require(\"./errors\");\nconst primitives_1 = require(\"./primitives\");\nconst transactionEvents_1 = require(\"./transactionEvents\");\nclass TransactionLogs {\n    constructor(init) {\n        this.address = new primitives_1.Address(\"\");\n        this.events = [];\n        Object.assign(this, init);\n    }\n    static fromHttpResponse(logs) {\n        let result = new TransactionLogs();\n        result.address = new primitives_1.Address(logs.address);\n        result.events = (logs.events || []).map((event) => transactionEvents_1.TransactionEvent.fromHttpResponse(event));\n        return result;\n    }\n    findSingleOrNoneEvent(identifier, predicate) {\n        let events = this.findEvents(identifier, predicate);\n        if (events.length > 1) {\n            throw new errors_1.ErrUnexpectedCondition(`more than one event of type ${identifier}`);\n        }\n        return events[0];\n    }\n    findFirstOrNoneEvent(identifier, predicate) {\n        return this.findEvents(identifier, predicate)[0];\n    }\n    findEvents(identifier, predicate) {\n        let events = this.events.filter(event => event.identifier == identifier);\n        if (predicate) {\n            events = events.filter(event => predicate(event));\n        }\n        return events;\n    }\n}\nexports.TransactionLogs = TransactionLogs;\n//# sourceMappingURL=transactionLogs.js.map"]},"metadata":{},"sourceType":"script"}