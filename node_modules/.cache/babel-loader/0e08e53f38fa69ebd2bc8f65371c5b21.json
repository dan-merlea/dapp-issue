{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEmpty = exports.guardEmpty = exports.guardNotEmpty = exports.guardLength = exports.guardSameLength = exports.guardValueIsSetWithMessage = exports.guardValueIsSet = exports.guardTrue = void 0;\nvar errors = __importStar(require(\"./errors\"));\n// TODO: Create a class called \"Guard\". Add the following as member functions.\nfunction guardTrue(value, what) {\n  if (!value) {\n    throw new errors.ErrInvariantFailed(\"[<\".concat(what, \">] isn't true\"));\n  }\n}\nexports.guardTrue = guardTrue;\n// TODO: merge with guardValueIsSetWithMessage\nfunction guardValueIsSet(name, value) {\n  guardValueIsSetWithMessage(\"\".concat(name, \" isn't set (null or undefined)\"), value);\n}\nexports.guardValueIsSet = guardValueIsSet;\n// TODO: merge with guardValueIsSet\nfunction guardValueIsSetWithMessage(message, value) {\n  if (value == null || value === undefined) {\n    throw new errors.ErrInvariantFailed(message);\n  }\n}\nexports.guardValueIsSetWithMessage = guardValueIsSetWithMessage;\nfunction guardSameLength(a, b) {\n  a = a || [];\n  b = b || [];\n  if (a.length != b.length) {\n    throw new errors.ErrInvariantFailed(\"arrays do not have the same length\");\n  }\n}\nexports.guardSameLength = guardSameLength;\nfunction guardLength(withLength, expectedLength) {\n  var actualLength = withLength.length || 0;\n  if (actualLength != expectedLength) {\n    throw new errors.ErrInvariantFailed(\"wrong length, expected: \".concat(expectedLength, \", actual: \").concat(actualLength));\n  }\n}\nexports.guardLength = guardLength;\nfunction guardNotEmpty(value, what) {\n  if (isEmpty(value)) {\n    throw new errors.ErrInvariantFailed(\"\".concat(what, \" is empty\"));\n  }\n}\nexports.guardNotEmpty = guardNotEmpty;\nfunction guardEmpty(value, what) {\n  if (!isEmpty(value)) {\n    throw new errors.ErrInvariantFailed(\"\".concat(what, \" is not empty\"));\n  }\n}\nexports.guardEmpty = guardEmpty;\nfunction isEmpty(value) {\n  if (value.isEmpty) {\n    return value.isEmpty();\n  }\n  return value.length === 0;\n}\nexports.isEmpty = isEmpty;","map":null,"metadata":{},"sourceType":"script"}