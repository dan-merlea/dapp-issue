{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { a as h } from \"./chunk-6D5GT4OX.js\";\nimport { a as S } from \"./chunk-JRQCY6J5.js\";\nimport { a as u } from \"./chunk-HGGYZF27.js\";\nimport { b as f } from \"./chunk-V2DQWH6R.js\";\nimport { a as v } from \"./chunk-UV6VUF3Z.js\";\nimport { a as i } from \"./chunk-HZKP5C5V.js\";\nimport { b as g, c as p, d as l, s as k } from \"./chunk-HEFMRSX3.js\";\nimport { j as c, k as m, m as d } from \"./chunk-HBP5N4FR.js\";\nd();\nk();\nimport { Address as T } from \"@elrondnetwork/erdjs\";\nimport L from \"bignumber.js\";\nfunction B(t) {\n  var w = new L(p),\n    e = new L(g),\n    n = t ? e.times(m.Buffer.from(t).length) : 0;\n  return w.plus(n).toString(10);\n}\nfunction F(w) {\n  return c(this, arguments, /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var t, e, n, a;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            t = _ref.transactions;\n            e = u(i.getState());\n            _context.next = 4;\n            return S(e);\n          case 4:\n            n = _context.sent;\n            a = h(n);\n            return _context.abrupt(\"return\", t.map(function (r) {\n              var I = r.value,\n                o = r.receiver,\n                _r$data = r.data,\n                N = _r$data === void 0 ? \"\" : _r$data,\n                b = r.chainID,\n                _r$version = r.version,\n                A = _r$version === void 0 ? 1 : _r$version,\n                P = r.options,\n                _r$gasPrice = r.gasPrice,\n                y = _r$gasPrice === void 0 ? l : _r$gasPrice,\n                _r$gasLimit = r.gasLimit,\n                R = _r$gasLimit === void 0 ? B(r.data) : _r$gasLimit,\n                s = o;\n              try {\n                s = new T(o).hex();\n              } catch (_) {\n                throw \"Invalid Receiver address\";\n              }\n              var D = f(i.getState()).valueOf().toString(),\n                G = b || D;\n              return v({\n                value: I,\n                receiver: s,\n                data: N,\n                gasPrice: y,\n                gasLimit: Number(R),\n                nonce: Number(a.valueOf().toString()),\n                sender: new T(e).hex(),\n                chainID: G,\n                version: A,\n                options: P\n              });\n            }));\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nexport { F as a };","map":null,"metadata":{},"sourceType":"module"}