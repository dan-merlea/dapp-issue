{"ast":null,"code":"import _classCallCheck from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Container,Graphics}from'pixi.js';import{Maths}from'@krogan/common';import{Constants,Geometry}from'@krogan/common';import SpaceshipContainer from'sprites/game/SpaceshipContainer';var CircleSprite=/*#__PURE__*/function(_Container){_inherits(CircleSprite,_Container);var _super=_createSuper(CircleSprite);function CircleSprite(specs,position,radius,texture){var _this;_classCallCheck(this,CircleSprite);_this=_super.call(this);// Sprite ( todo: move to spaceshipsprite )\n_this._sprite=void 0;_this._body=void 0;_this._boundaries=void 0;_this._specs=void 0;_this._toX=0;_this._toY=0;_this._speed=0;_this._toAngle=0;_this._velocity=new Geometry.Vector2(0,0);_this._destination=void 0;_this._sprite=new SpaceshipContainer(position,radius,texture);_this._sprite.zIndex=99;_this.addChild(_this._sprite);// Body\n_this._body=new Geometry.CircleBody(position.x,position.y,radius);// Add the boundaries BEFORE scaling the sprite\nif(Constants.DEBUG){_this._boundaries=new Graphics();_this._boundaries.lineStyle(0.5,0xff00ff);_this._boundaries.drawCircle(0,0,radius);_this._boundaries.endFill();_this.addChild(_this._boundaries);}_this._specs=specs;_this.toX=position.x;_this.toY=position.y;_this.toAngle=position.angle;_this.position.set(position.x,position.y);_this.sortableChildren=true;console.log(\"Initialized on x: \".concat(_this.x,\", y: \").concat(_this.y));return _this;}/**  \n     * Methods for simulation\n     */_createClass(CircleSprite,[{key:\"move\",value:function move(dir,preVelocity){var _preVelocity$x,_preVelocity$y;var resetSelfControl=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(this._destination&&resetSelfControl){this.destination=undefined;console.log('Destination cleared by user action');}if(!dir.isEmpty){// Create direction\nthis.toAngle=Maths.angleFromVector(dir.x,dir.y);this._speed=Maths.clamp(this._speed+this._specs.acceleration,0,this._specs.speed);}this._velocity=Maths.vectorFromAngle(this._sprite.angle,this._speed);if(this.velocity.isEmpty)return this.velocity;// Update position\nvar x=this.x+((_preVelocity$x=preVelocity===null||preVelocity===void 0?void 0:preVelocity.x)!==null&&_preVelocity$x!==void 0?_preVelocity$x:this._velocity.x);var y=this.y+((_preVelocity$y=preVelocity===null||preVelocity===void 0?void 0:preVelocity.y)!==null&&_preVelocity$y!==void 0?_preVelocity$y:this._velocity.y);this.position.set(x,y);this.toX=this.x;this.toY=this.y;this._speed=Maths.clamp(this._speed-Constants.SPACE_FRICTION,0,this._specs.speed);this.turnIfNeeded();return this._velocity;}},{key:\"turnIfNeeded\",value:function turnIfNeeded(){var angleDiff=Maths.getAngleDiff(Maths.positiveAngle(this._sprite.angle),Maths.positiveAngle(this.toAngle));var swiftness=this._specs.acceleration*Constants.ROTATION_SPEED;if(Math.abs(angleDiff)<swiftness){// tolerance\nthis._sprite.angle=this.toAngle;return;}var steerPower=swiftness;if(angleDiff>0)steerPower*=-1;var newAngle=this._sprite.angle+steerPower;this._sprite.angle=newAngle;}// HELPERS\n},{key:\"shouldSlide\",value:function shouldSlide(){return!this.velocity.isEmpty&&!this.destination;}// Setters\n},{key:\"update\",value:function update(data){if(data.x){this._body.x=data.x;this.x=data.x;}if(data.y){this._body.y=data.y;this.y=data.y;}if(data.angle)this._sprite.angle=data.angle;if(data.radius){this._body.radius=data.radius;this.width=data.radius*2;this.height=data.radius*2;}}},{key:\"destination\",get:function get(){return this._destination;}// Setters\n,set:function set(destination){this._destination=destination;}// Getters\n},{key:\"body\",get:function get(){return this._body;}},{key:\"toX\",get:function get(){return this._toX;},set:function set(toX){this._toX=toX;}},{key:\"toY\",get:function get(){return this._toY;},set:function set(toY){this._toY=toY;}},{key:\"toAngle\",get:function get(){return this._toAngle;},set:function set(toAngle){this._toAngle=toAngle;}},{key:\"velocity\",get:function get(){return this._velocity;}}]);return CircleSprite;}(Container);export{CircleSprite as default};","map":null,"metadata":{},"sourceType":"module"}