{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { a as g } from \"./chunk-4TLJN3KA.js\";\nimport { b as s } from \"./chunk-OI3KYR6B.js\";\nimport { a as T } from \"./chunk-DWONPSD7.js\";\nimport { d as u } from \"./chunk-HGGYZF27.js\";\nimport { b as h } from \"./chunk-V2DQWH6R.js\";\nimport { a as t } from \"./chunk-HZKP5C5V.js\";\nimport { a as v } from \"./chunk-E37GJNPW.js\";\nimport { g as m } from \"./chunk-ABUY7RHS.js\";\nimport { d } from \"./chunk-MD7XZQEH.js\";\nimport { c as e } from \"./chunk-RLURHDNV.js\";\nimport { c as f, s as P } from \"./chunk-HEFMRSX3.js\";\nimport { a as w } from \"./chunk-U6VBIKWK.js\";\nimport { j as l, m as p } from \"./chunk-HBP5N4FR.js\";\np();\nimport F from \"bignumber.js\";\nP();\nv();\nw();\nfunction Q(X) {\n  return l(this, arguments, /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var a, y, _ref$minGasLimit, I, S, b, r, o, c, N, i, C, n, _n, D;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            a = _ref.transactions, y = _ref.callbackRoute, _ref$minGasLimit = _ref.minGasLimit, I = _ref$minGasLimit === void 0 ? f : _ref$minGasLimit, S = _ref.customTransactionInformation, b = _ref.transactionsDisplayInfo;\n            r = t.getState(), o = Date.now().toString(), c = u(r), N = h(r), i = Array.isArray(a) ? a : [a], C = g(i, I);\n            if (new F(T(c) ? c : \"0\").minus(C).isGreaterThan(0)) {\n              _context.next = 5;\n              break;\n            }\n            n = {\n              type: \"warning\",\n              iconClassName: s.textWarning,\n              title: \"Insufficient EGLD funds\",\n              description: \"Current EGLD balance cannot cover the transaction fees.\"\n            };\n            return _context.abrupt(\"return\", (t.dispatch(e(n)), {\n              error: \"insufficient funds\",\n              sessionId: null\n            }));\n          case 5:\n            if (i == null ? void 0 : i.every(function (n) {\n              return n.getChainID().valueOf() === N.valueOf();\n            })) {\n              _context.next = 8;\n              break;\n            }\n            _n = {\n              type: \"warning\",\n              iconClassName: s.textWarning,\n              title: \"Network change detected\",\n              description: \"The application tried to change the transaction network\"\n            };\n            return _context.abrupt(\"return\", (t.dispatch(e(_n)), {\n              error: \"Invalid ChainID\",\n              sessionId: null\n            }));\n          case 8:\n            D = {\n              sessionId: o,\n              callbackRoute: y,\n              customTransactionInformation: S,\n              transactions: i.map(function (n) {\n                return n.toPlainObject();\n              })\n            };\n            return _context.abrupt(\"return\", (t.dispatch(d(D)), t.dispatch(m({\n              sessionId: o,\n              transactionsDisplayInfo: b\n            })), {\n              sessionId: o\n            }));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nexport { Q as a };","map":{"version":3,"names":["a","g","b","s","T","d","u","h","t","v","m","c","e","f","P","w","j","l","p","F","Q","X","arguments","transactions","y","callbackRoute","minGasLimit","I","S","customTransactionInformation","transactionsDisplayInfo","r","getState","o","Date","now","toString","N","i","Array","isArray","C","minus","isGreaterThan","n","type","iconClassName","textWarning","title","description","dispatch","error","sessionId","every","getChainID","valueOf","D","map","toPlainObject"],"sources":["/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@elrondnetwork/dapp-core/__chunks__/chunk-IXOAYMPJ.js"],"sourcesContent":["import{a as g}from\"./chunk-4TLJN3KA.js\";import{b as s}from\"./chunk-OI3KYR6B.js\";import{a as T}from\"./chunk-DWONPSD7.js\";import{d as u}from\"./chunk-HGGYZF27.js\";import{b as h}from\"./chunk-V2DQWH6R.js\";import{a as t}from\"./chunk-HZKP5C5V.js\";import{a as v}from\"./chunk-E37GJNPW.js\";import{g as m}from\"./chunk-ABUY7RHS.js\";import{d}from\"./chunk-MD7XZQEH.js\";import{c as e}from\"./chunk-RLURHDNV.js\";import{c as f,s as P}from\"./chunk-HEFMRSX3.js\";import{a as w}from\"./chunk-U6VBIKWK.js\";import{j as l,m as p}from\"./chunk-HBP5N4FR.js\";p();import F from\"bignumber.js\";P();v();w();function Q(X){return l(this,arguments,function*({transactions:a,callbackRoute:y,minGasLimit:I=f,customTransactionInformation:S,transactionsDisplayInfo:b}){let r=t.getState(),o=Date.now().toString(),c=u(r),N=h(r),i=Array.isArray(a)?a:[a],C=g(i,I);if(!new F(T(c)?c:\"0\").minus(C).isGreaterThan(0)){let n={type:\"warning\",iconClassName:s.textWarning,title:\"Insufficient EGLD funds\",description:\"Current EGLD balance cannot cover the transaction fees.\"};return t.dispatch(e(n)),{error:\"insufficient funds\",sessionId:null}}if(!(i==null?void 0:i.every(n=>n.getChainID().valueOf()===N.valueOf()))){let n={type:\"warning\",iconClassName:s.textWarning,title:\"Network change detected\",description:\"The application tried to change the transaction network\"};return t.dispatch(e(n)),{error:\"Invalid ChainID\",sessionId:null}}let D={sessionId:o,callbackRoute:y,customTransactionInformation:S,transactions:i.map(n=>n.toPlainObject())};return t.dispatch(d(D)),t.dispatch(m({sessionId:o,transactionsDisplayInfo:b})),{sessionId:o}})}export{Q as a};\n//# sourceMappingURL=chunk-IXOAYMPJ.js.map\n"],"mappings":";AAAA,SAAOA,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOH,CAAC,IAAII,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOJ,CAAC,IAAIK,CAAC,QAAK,qBAAqB;AAAC,SAAOP,CAAC,IAAIQ,CAAC,QAAK,qBAAqB;AAAC,SAAOR,CAAC,IAAIS,CAAC,QAAK,qBAAqB;AAAC,SAAOR,CAAC,IAAIS,CAAC,QAAK,qBAAqB;AAAC,SAAOL,CAAC,QAAK,qBAAqB;AAAC,SAAOM,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOD,CAAC,IAAIE,CAAC,EAACV,CAAC,IAAIW,CAAC,QAAK,qBAAqB;AAAC,SAAOd,CAAC,IAAIe,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,EAACP,CAAC,IAAIQ,CAAC,QAAK,qBAAqB;AAACA,CAAC,EAAE;AAAC,OAAOC,CAAC,MAAK,cAAc;AAACL,CAAC,EAAE;AAACL,CAAC,EAAE;AAACM,CAAC,EAAE;AAAC,SAASK,CAAC,CAACC,CAAC,EAAC;EAAC,OAAOJ,CAAC,CAAC,IAAI,EAACK,SAAS,0CAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAwBtB,CAAC,QAAduB,YAAY,EAAiBC,CAAC,QAAfC,aAAa,0BAAGC,WAAW,EAACC,CAAC,iCAACd,CAAC,qBAA8Be,CAAC,QAA9BC,4BAA4B,EAA2B3B,CAAC,QAAzB4B,uBAAuB;YAASC,CAAC,GAACvB,CAAC,CAACwB,QAAQ,EAAE,EAACC,CAAC,GAACC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE,EAACzB,CAAC,GAACL,CAAC,CAACyB,CAAC,CAAC,EAACM,CAAC,GAAC9B,CAAC,CAACwB,CAAC,CAAC,EAACO,CAAC,GAACC,KAAK,CAACC,OAAO,CAACxC,CAAC,CAAC,GAACA,CAAC,GAAC,CAACA,CAAC,CAAC,EAACyC,CAAC,GAACxC,CAAC,CAACqC,CAAC,EAACX,CAAC,CAAC;YAAA,IAAK,IAAIR,CAAC,CAACf,CAAC,CAACO,CAAC,CAAC,GAACA,CAAC,GAAC,GAAG,CAAC,CAAC+B,KAAK,CAACD,CAAC,CAAC,CAACE,aAAa,CAAC,CAAC,CAAC;cAAA;cAAA;YAAA;YAAMC,CAAC,GAAC;cAACC,IAAI,EAAC,SAAS;cAACC,aAAa,EAAC3C,CAAC,CAAC4C,WAAW;cAACC,KAAK,EAAC,yBAAyB;cAACC,WAAW,EAAC;YAAyD,CAAC;YAAA,kCAAQzC,CAAC,CAAC0C,QAAQ,CAACtC,CAAC,CAACgC,CAAC,CAAC,CAAC,EAAC;cAACO,KAAK,EAAC,oBAAoB;cAACC,SAAS,EAAC;YAAI,CAAC;UAAA;YAAA,IAAMd,CAAC,IAAE,IAAI,GAAC,KAAK,CAAC,GAACA,CAAC,CAACe,KAAK,CAAC,UAAAT,CAAC;cAAA,OAAEA,CAAC,CAACU,UAAU,EAAE,CAACC,OAAO,EAAE,KAAGlB,CAAC,CAACkB,OAAO,EAAE;YAAA,EAAC;cAAA;cAAA;YAAA;YAAOX,EAAC,GAAC;cAACC,IAAI,EAAC,SAAS;cAACC,aAAa,EAAC3C,CAAC,CAAC4C,WAAW;cAACC,KAAK,EAAC,yBAAyB;cAACC,WAAW,EAAC;YAAyD,CAAC;YAAA,kCAAQzC,CAAC,CAAC0C,QAAQ,CAACtC,CAAC,CAACgC,EAAC,CAAC,CAAC,EAAC;cAACO,KAAK,EAAC,iBAAiB;cAACC,SAAS,EAAC;YAAI,CAAC;UAAA;YAAKI,CAAC,GAAC;cAACJ,SAAS,EAACnB,CAAC;cAACR,aAAa,EAACD,CAAC;cAACK,4BAA4B,EAACD,CAAC;cAACL,YAAY,EAACe,CAAC,CAACmB,GAAG,CAAC,UAAAb,CAAC;gBAAA,OAAEA,CAAC,CAACc,aAAa,EAAE;cAAA;YAAC,CAAC;YAAA,kCAAQlD,CAAC,CAAC0C,QAAQ,CAAC7C,CAAC,CAACmD,CAAC,CAAC,CAAC,EAAChD,CAAC,CAAC0C,QAAQ,CAACxC,CAAC,CAAC;cAAC0C,SAAS,EAACnB,CAAC;cAACH,uBAAuB,EAAC5B;YAAC,CAAC,CAAC,CAAC,EAAC;cAACkD,SAAS,EAACnB;YAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAC,EAAC;AAAA;AAAC,SAAOb,CAAC,IAAIpB,CAAC"},"metadata":{},"sourceType":"module"}