{"ast":null,"code":"import { a as d } from \"./chunk-T23Y2Z2E.js\";\nimport { a as g } from \"./chunk-AYL37FPA.js\";\nimport { a as A } from \"./chunk-QKYNB6HS.js\";\nimport { a as D } from \"./chunk-RURXSKZY.js\";\nimport { a as u } from \"./chunk-WVJETRW5.js\";\nimport { a as o } from \"./chunk-R5Y25RSQ.js\";\nimport { a as s, b as f, c as V, d as k } from \"./chunk-JAJNAWTC.js\";\nimport { a as p } from \"./chunk-AFDVSSA7.js\";\nimport { a as c } from \"./chunk-MSLRMLPB.js\";\nimport { b as m } from \"./chunk-XKC2DETV.js\";\nimport { e as i, s as v } from \"./chunk-HEFMRSX3.js\";\nimport { m as r } from \"./chunk-HBP5N4FR.js\";\nr();\nv();\nvar Y = function Y(_ref) {\n  var e = _ref.transaction,\n    x = _ref.hideMultipleBadge;\n  var l;\n  if (e.action) {\n    if (f.includes(e.action.name)) return o(e.value);\n    if (V.includes(e.action.name)) return A(e);\n    if (s.includes(e.action.name)) return D(e);\n    if (k.includes(e.action.name)) return g(e);\n    var a = u(e);\n    if (a.length) {\n      var t = a[0],\n        _ = Object.values(m).includes(t.type),\n        T = !x && a.length > 1 ? d(a) : \"\";\n      if (_) {\n        var _p = p({\n            token: t\n          }),\n          L = _p.badgeText,\n          n = _p.tokenFormattedAmount,\n          O = _p.tokenExplorerLink,\n          h = _p.tokenLinkText;\n        return {\n          nftValueData: {\n            badgeText: L,\n            tokenFormattedAmount: n,\n            tokenExplorerLink: O,\n            tokenLinkText: h,\n            transactionTokens: a,\n            token: t,\n            value: n != null ? t.value : null,\n            decimals: n != null ? t.decimals : null,\n            titleText: T\n          }\n        };\n      }\n      var _c = c({\n          token: t\n        }),\n        y = _c.tokenExplorerLink,\n        E = _c.showFormattedAmount,\n        I = _c.tokenFormattedAmount,\n        N = _c.tokenLinkText,\n        F = _c.token;\n      return {\n        tokenValueData: {\n          tokenExplorerLink: y,\n          showFormattedAmount: E,\n          tokenFormattedAmount: I,\n          tokenLinkText: N,\n          transactionTokens: a,\n          token: F,\n          value: t.value,\n          decimals: (l = t.decimals) != null ? l : i,\n          titleText: T\n        }\n      };\n    }\n  }\n  return o(e.value);\n};\nexport { Y as a };","map":null,"metadata":{},"sourceType":"module"}