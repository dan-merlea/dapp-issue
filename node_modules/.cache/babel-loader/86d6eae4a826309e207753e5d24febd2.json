{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { h as a, s as T } from \"./chunk-HEFMRSX3.js\";\nimport { k as c } from \"./chunk-P6M5SGWP.js\";\nimport { j as t, m as i } from \"./chunk-HBP5N4FR.js\";\ni();\nT();\nc();\nimport { ExtensionProvider as m } from \"@elrondnetwork/erdjs-extension-provider\";\nimport { HWProvider as d } from \"@elrondnetwork/erdjs-hw-provider\";\nimport { WalletConnectProvider as g, WalletConnectProviderV2 as w } from \"@elrondnetwork/erdjs-wallet-connect-provider\";\nimport { WalletProvider as l } from \"@elrondnetwork/erdjs-web-wallet-provider\";\nvar P = \"/dapp/init\",\n  U = function U(e) {\n    switch (e == null ? void 0 : e.constructor) {\n      case l:\n        return \"wallet\";\n      case g:\n        return \"walletconnect\";\n      case w:\n        return \"walletconnectv2\";\n      case d:\n        return \"ledger\";\n      case m:\n        return \"extension\";\n      case s:\n        return \"\";\n      default:\n        return \"extra\";\n    }\n  },\n  I = function I(e) {\n    return new l(\"\".concat(e).concat(P));\n  },\n  y = function y(e) {\n    return t(void 0, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var n, _yield$n$getAppConfig, o, p;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (e.isInitialized()) {\n                _context.next = 2;\n                break;\n              }\n              throw new Error(\"Unable to get version. Provider not initialized\");\n            case 2:\n              n = e.hwApp;\n              _context.next = 5;\n              return n.getAppConfiguration();\n            case 5:\n              _yield$n$getAppConfig = _context.sent;\n              o = _yield$n$getAppConfig.contractData;\n              p = _yield$n$getAppConfig.version;\n              return _context.abrupt(\"return\", {\n                version: p,\n                dataEnabled: o === a\n              });\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  },\n  r = function r(e) {\n    return \"Unable to perform \".concat(e, \", Provider not initialized\");\n  },\n  s = /*#__PURE__*/function () {\n    function s() {\n      _classCallCheck(this, s);\n    }\n    _createClass(s, [{\n      key: \"init\",\n      value: function init() {\n        return Promise.resolve(!1);\n      }\n    }, {\n      key: \"login\",\n      value: function login(n) {\n        throw new Error(r(\"login with options: \".concat(n)));\n      }\n    }, {\n      key: \"logout\",\n      value: function logout(n) {\n        throw new Error(r(\"logout with options: \".concat(n)));\n      }\n    }, {\n      key: \"getAddress\",\n      value: function getAddress() {\n        throw new Error(r(\"getAddress\"));\n      }\n    }, {\n      key: \"isInitialized\",\n      value: function isInitialized() {\n        return !1;\n      }\n    }, {\n      key: \"isConnected\",\n      value: function isConnected() {\n        return Promise.resolve(!1);\n      }\n    }, {\n      key: \"sendTransaction\",\n      value: function sendTransaction(n, o) {\n        throw new Error(r(\"sendTransaction with transactions: \".concat(n, \" options: \").concat(o)));\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function signTransaction(n, o) {\n        throw new Error(r(\"signTransaction with transactions: \".concat(n, \" options: \").concat(o)));\n      }\n    }, {\n      key: \"signTransactions\",\n      value: function signTransactions(n, o) {\n        throw new Error(r(\"signTransactions with transactions: \".concat(n, \" options: \").concat(o)));\n      }\n    }, {\n      key: \"signMessage\",\n      value: function signMessage(n, o) {\n        throw new Error(r(\"signTransactions with \".concat(n, \" and options \").concat(o)));\n      }\n    }, {\n      key: \"sendCustomMessage\",\n      value: function sendCustomMessage(_ref) {\n        var n = _ref.method,\n          o = _ref.params;\n        throw new Error(r(\"sendCustomMessage with method: \".concat(n, \" params: \").concat(o)));\n      }\n    }, {\n      key: \"sendCustomRequest\",\n      value: function sendCustomRequest(n) {\n        throw new Error(r(\"sendSessionEvent with options: \".concat(n)));\n      }\n    }, {\n      key: \"ping\",\n      value: function ping() {\n        return Promise.resolve(!1);\n      }\n    }]);\n    return s;\n  }(),\n  D = new s();\nexport { P as a, U as b, I as c, y as d, s as e, D as f };","map":null,"metadata":{},"sourceType":"module"}