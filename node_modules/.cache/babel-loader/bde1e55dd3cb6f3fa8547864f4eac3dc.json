{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _const = require('../const.js');\nfunction decomposeDataUri(dataUri) {\n  var dataUriMatch = _const.DATA_URI.exec(dataUri);\n  if (dataUriMatch) {\n    return {\n      mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : void 0,\n      subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : void 0,\n      charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : void 0,\n      encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : void 0,\n      data: dataUriMatch[5]\n    };\n  }\n  return void 0;\n}\nexports.decomposeDataUri = decomposeDataUri;","map":{"version":3,"sources":["../../src/network/decomposeDataUri.ts"],"names":["DATA_URI"],"mappings":";;;;;;AAqDO,SAAA,gBAAA,CAA0B,OACjC,EAAA;EACU,IAAA,YAAA,GAAeA,MAAAA,CAAAA,QAAS,CAAA,IAAA,CAAK,OAAO,CAAA;EAE1C,IAAI,YACJ,EAAA;IACW,OAAA;MACH,SAAA,EAAW,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,CAAG,WAAA,EAAgB,GAAA,KAAA,CAAA;MAC7D,OAAA,EAAS,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,CAAG,WAAA,EAAgB,GAAA,KAAA,CAAA;MAC3D,OAAA,EAAS,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,CAAG,WAAA,EAAgB,GAAA,KAAA,CAAA;MAC3D,QAAA,EAAU,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,CAAG,WAAA,EAAgB,GAAA,KAAA,CAAA;MAC5D,IAAA,EAAM,YAAa,CAAA,CAAA;IAAA,CACvB;EAAA;EAGG,OAAA,KAAA,CAAA;AACX","sourcesContent":["import { DATA_URI } from '../const';\n\nexport interface DecomposedDataUri\n{\n    mediaType: string;\n    subType: string;\n    charset: string;\n    encoding: string;\n    data: string;\n}\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @returns {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri: string): DecomposedDataUri\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n"]},"metadata":{},"sourceType":"script"}