{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionEventTopic = exports.TransactionEvent = void 0;\nvar primitives_1 = require(\"./primitives\");\nvar TransactionEvent = /*#__PURE__*/function () {\n  function TransactionEvent(init) {\n    _classCallCheck(this, TransactionEvent);\n    this.address = new primitives_1.Address(\"\");\n    this.identifier = \"\";\n    this.topics = [];\n    this.data = \"\";\n    Object.assign(this, init);\n  }\n  _createClass(TransactionEvent, [{\n    key: \"findFirstOrNoneTopic\",\n    value: function findFirstOrNoneTopic(predicate) {\n      return this.topics.filter(function (topic) {\n        return predicate(topic);\n      })[0];\n    }\n  }, {\n    key: \"getLastTopic\",\n    value: function getLastTopic() {\n      return this.topics[this.topics.length - 1];\n    }\n  }], [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(responsePart) {\n      var result = new TransactionEvent();\n      result.address = new primitives_1.Address(responsePart.address);\n      result.identifier = responsePart.identifier || \"\";\n      result.topics = (responsePart.topics || []).map(function (topic) {\n        return new TransactionEventTopic(topic);\n      });\n      result.data = Buffer.from(responsePart.data || \"\", \"base64\").toString();\n      return result;\n    }\n  }]);\n  return TransactionEvent;\n}();\nexports.TransactionEvent = TransactionEvent;\nvar TransactionEventTopic = /*#__PURE__*/function () {\n  function TransactionEventTopic(topic) {\n    _classCallCheck(this, TransactionEventTopic);\n    this.raw = Buffer.from(topic || \"\", \"base64\");\n  }\n  _createClass(TransactionEventTopic, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.raw.toString(\"utf8\");\n    }\n  }, {\n    key: \"hex\",\n    value: function hex() {\n      return this.raw.toString(\"hex\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.raw;\n    }\n  }]);\n  return TransactionEventTopic;\n}();\nexports.TransactionEventTopic = TransactionEventTopic;","map":{"version":3,"mappings":";;;;;;;;AACA;AAAuC,IAE1BA,gBAAgB;EAMzB,0BAAYC,IAAgC;IAAA;IAL5C,YAAO,GAAa,IAAIC,oBAAO,CAAC,EAAE,CAAC;IACnC,eAAU,GAAW,EAAE;IACvB,WAAM,GAA4B,EAAE;IACpC,SAAI,GAAW,EAAE;IAGbC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,IAAI,CAAC;EAC7B;EAAC;IAAA;IAAA,OAiBD,8BAAqBI,SAAoD;MACrE,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,eAAK;QAAA,OAAIF,SAAS,CAACG,KAAK,CAAC;MAAA,EAAC,CAAC,CAAC,CAAC;IAC3D;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,IAAI,CAACF,MAAM,CAAC,IAAI,CAACA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC;IAC9C;EAAC;IAAA;IAAA,OArBD,0BAAwBC,YAKvB;MACG,IAAIC,MAAM,GAAG,IAAIX,gBAAgB,EAAE;MACnCW,MAAM,CAACC,OAAO,GAAG,IAAIV,oBAAO,CAACQ,YAAY,CAACE,OAAO,CAAC;MAClDD,MAAM,CAACE,UAAU,GAAGH,YAAY,CAACG,UAAU,IAAI,EAAE;MACjDF,MAAM,CAACL,MAAM,GAAG,CAACI,YAAY,CAACJ,MAAM,IAAI,EAAE,EAAEQ,GAAG,CAAC,eAAK;QAAA,OAAI,IAAIC,qBAAqB,CAACP,KAAK,CAAC;MAAA,EAAC;MAC1FG,MAAM,CAACK,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACR,YAAY,CAACM,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,CAACG,QAAQ,EAAE;MAEvE,OAAOR,MAAM;IACjB;EAAC;EAAA;AAAA;AAvBLS;AAgCC,IAEYL,qBAAqB;EAG9B,+BAAYP,KAAa;IAAA;IACrB,IAAI,CAACa,GAAG,GAAGJ,MAAM,CAACC,IAAI,CAACV,KAAK,IAAI,EAAE,EAAE,QAAQ,CAAC;EACjD;EAAC;IAAA;IAAA,OAED,oBAAQ;MACJ,OAAO,IAAI,CAACa,GAAG,CAACF,QAAQ,CAAC,MAAM,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,eAAG;MACC,OAAO,IAAI,CAACE,GAAG,CAACF,QAAQ,CAAC,KAAK,CAAC;IACnC;EAAC;IAAA;IAAA,OAED,mBAAO;MACH,OAAO,IAAI,CAACE,GAAG;IACnB;EAAC;EAAA;AAAA;AAjBLD","names":["TransactionEvent","init","primitives_1","Object","assign","predicate","topics","filter","topic","length","responsePart","result","address","identifier","map","TransactionEventTopic","data","Buffer","from","toString","exports","raw"],"sourceRoot":"","sources":["../src/transactionEvents.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}