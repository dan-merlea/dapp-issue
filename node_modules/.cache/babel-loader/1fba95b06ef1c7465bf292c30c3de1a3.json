{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hash = void 0;\nvar errors = __importStar(require(\"./errors\"));\nvar Hash = /*#__PURE__*/function () {\n  /**\n   * Creates a new Hash object.\n   *\n   * @param hash The hash, as a Buffer or a hex-encoded string.\n   */\n  function Hash(hash) {\n    _classCallCheck(this, Hash);\n    if (!hash) {\n      this.hash = Buffer.from([]);\n    } else if (hash instanceof Buffer) {\n      this.hash = hash;\n    } else if (typeof hash === \"string\") {\n      this.hash = Buffer.from(hash, \"hex\");\n    } else {\n      throw new errors.ErrBadType(\"hash\", \"buffer | string\", hash);\n    }\n  }\n  _createClass(Hash, [{\n    key: \"isEmpty\",\n    value:\n    /**\n     * Returns whether the hash is empty (not computed).\n     */\n    function isEmpty() {\n      return this.hash.length == 0;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.hex();\n    }\n  }, {\n    key: \"hex\",\n    value: function hex() {\n      return this.hash.toString(\"hex\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.hash;\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new Hash(Buffer.from([]));\n    }\n  }]);\n  return Hash;\n}();\nexports.Hash = Hash;","map":null,"metadata":{},"sourceType":"script"}