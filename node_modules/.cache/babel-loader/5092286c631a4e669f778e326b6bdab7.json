{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = void 0;\nvar Watch = /*#__PURE__*/function () {\n  function Watch() {\n    _classCallCheck(this, Watch);\n    this.timestamps = new Map();\n  }\n  _createClass(Watch, [{\n    key: \"start\",\n    value: function start(label) {\n      if (this.timestamps.has(label)) {\n        throw new Error(\"Watch already started for label: \".concat(label));\n      }\n      this.timestamps.set(label, {\n        started: Date.now()\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(label) {\n      var timestamp = this.get(label);\n      if (typeof timestamp.elapsed !== \"undefined\") {\n        throw new Error(\"Watch already stopped for label: \".concat(label));\n      }\n      var elapsed = Date.now() - timestamp.started;\n      this.timestamps.set(label, {\n        started: timestamp.started,\n        elapsed: elapsed\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(label) {\n      var timestamp = this.timestamps.get(label);\n      if (typeof timestamp === \"undefined\") {\n        throw new Error(\"No timestamp found for label: \".concat(label));\n      }\n      return timestamp;\n    }\n  }, {\n    key: \"elapsed\",\n    value: function elapsed(label) {\n      var timestamp = this.get(label);\n      var elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n      return elapsed;\n    }\n  }]);\n  return Watch;\n}();\nexports.Watch = Watch;\nexports.default = Watch;","map":null,"metadata":{},"sourceType":"script"}