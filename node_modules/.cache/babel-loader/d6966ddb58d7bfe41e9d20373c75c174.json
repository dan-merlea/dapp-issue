{"ast":null,"code":"import _regeneratorRuntime from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getAccount}from'@elrondnetwork/dapp-core/utils';import{useGetLoginInfo,useGetAccountInfo}from'@elrondnetwork/dapp-core/hooks';import{logout}from'@elrondnetwork/dapp-core/utils';import{ProxyNetworkProvider}from'@elrondnetwork/erdjs-network-providers/out';import{gateway}from'config';import{useCoreDispatch}from'core/context';export function useAccount(){var dispatch=useCoreDispatch();var _useGetAccountInfo=useGetAccountInfo(),address=_useGetAccountInfo.address;var _useGetLoginInfo=useGetLoginInfo(),isLoggedIn=_useGetLoginInfo.isLoggedIn;var loadAccount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var account;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isLoggedIn){_context.next=7;break;}_context.next=3;return getAccount(address);case 3:account=_context.sent;if(account){console.log(\"Account loaded \".concat(account.address));setLocalContext(account);}_context.next=8;break;case 7:setLocalContext(undefined);case 8:case\"end\":return _context.stop();}}},_callee);}));return function loadAccount(){return _ref.apply(this,arguments);};}();var disconnect=function disconnect(){logout();setLocalContext(undefined);};var setLocalContext=function setLocalContext(account){dispatch({type:'setAccount',account:account?account:undefined});dispatch({type:'setAddress',address:account?account.address:'...'});dispatch({type:'setIsLoggedIn',isLoggedIn:account!=undefined});};var proxy=function proxy(){return new ProxyNetworkProvider(gateway,{timeout:4000});};return{loadAccount:loadAccount,disconnect:disconnect,proxy:proxy};}","map":null,"metadata":{},"sourceType":"module"}