{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkStake = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n/**\n * An object holding Network stake parameters.\n */\nvar NetworkStake = /*#__PURE__*/function () {\n  function NetworkStake() {\n    _classCallCheck(this, NetworkStake);\n    this.TotalValidators = 0;\n    this.ActiveValidators = 0;\n    this.QueueSize = 0;\n    this.TotalStaked = new bignumber_js_1.default(0);\n  }\n  /**\n   * Constructs a configuration object from a HTTP response (as returned by the provider).\n   */\n  _createClass(NetworkStake, null, [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(payload) {\n      var networkStake = new NetworkStake();\n      networkStake.TotalValidators = Number(payload[\"totalValidators\"]);\n      networkStake.ActiveValidators = Number(payload[\"activeValidators\"]);\n      networkStake.QueueSize = Number(payload[\"queueSize\"]);\n      networkStake.TotalStaked = new bignumber_js_1.default(payload[\"totalStaked\"]);\n      return networkStake;\n    }\n  }]);\n  return NetworkStake;\n}();\nexports.NetworkStake = NetworkStake;","map":null,"metadata":{},"sourceType":"script"}