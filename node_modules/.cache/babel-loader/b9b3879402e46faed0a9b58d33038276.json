{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiNetworkProvider = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar accounts_1 = require(\"./accounts\");\nvar networkStake_1 = require(\"./networkStake\");\nvar networkGeneralStatistics_1 = require(\"./networkGeneralStatistics\");\nvar proxyNetworkProvider_1 = require(\"./proxyNetworkProvider\");\nvar tokenDefinitions_1 = require(\"./tokenDefinitions\");\nvar tokens_1 = require(\"./tokens\");\nvar transactions_1 = require(\"./transactions\");\nvar transactionStatus_1 = require(\"./transactionStatus\");\nvar primitives_1 = require(\"./primitives\");\nvar errors_1 = require(\"./errors\");\nvar config_1 = require(\"./config\");\nvar contractQueryResponse_1 = require(\"./contractQueryResponse\");\nvar contractQueryRequest_1 = require(\"./contractQueryRequest\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nvar ApiNetworkProvider = /*#__PURE__*/function () {\n  function ApiNetworkProvider(url, config) {\n    _classCallCheck(this, ApiNetworkProvider);\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, config_1.defaultAxiosConfig), config);\n    this.backingProxyNetworkProvider = new proxyNetworkProvider_1.ProxyNetworkProvider(url, config);\n  }\n  _createClass(ApiNetworkProvider, [{\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkConfig();\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkStatus();\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStakeStatistics\",\n    value: function getNetworkStakeStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response, networkStake;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doGetGeneric(\"stake\");\n              case 2:\n                response = _context3.sent;\n                networkStake = networkStake_1.NetworkStake.fromHttpResponse(response);\n                return _context3.abrupt(\"return\", networkStake);\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkGeneralStatistics\",\n    value: function getNetworkGeneralStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, stats;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doGetGeneric(\"stats\");\n              case 2:\n                response = _context4.sent;\n                stats = networkGeneralStatistics_1.NetworkGeneralStatistics.fromHttpResponse(response);\n                return _context4.abrupt(\"return\", stats);\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, account;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32()));\n              case 2:\n                response = _context5.sent;\n                account = accounts_1.AccountOnNetwork.fromHttpResponse(response);\n                return _context5.abrupt(\"return\", account);\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokensOfAccount\",\n    value: function getFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var url, response, tokens;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                pagination = pagination || config_1.defaultPagination;\n                url = \"accounts/\".concat(address.bech32(), \"/tokens?\").concat(this.buildPaginationParams(pagination));\n                _context6.next = 4;\n                return this.doGetGeneric(url);\n              case 4:\n                response = _context6.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item);\n                }); // TODO: Fix sorting\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context6.abrupt(\"return\", tokens);\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokensOfAccount\",\n    value: function getNonFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var url, response, tokens;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                pagination = pagination || config_1.defaultPagination;\n                url = \"accounts/\".concat(address.bech32(), \"/nfts?\").concat(this.buildPaginationParams(pagination));\n                _context7.next = 4;\n                return this.doGetGeneric(url);\n              case 4:\n                response = _context7.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(item);\n                }); // TODO: Fix sorting\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context7.abrupt(\"return\", tokens);\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokenOfAccount\",\n    value: function getFungibleTokenOfAccount(address, tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/tokens/\").concat(tokenIdentifier));\n              case 2:\n                response = _context8.sent;\n                tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response);\n                return _context8.abrupt(\"return\", tokenData);\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokenOfAccount\",\n    value: function getNonFungibleTokenOfAccount(address, collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var nonceAsHex, response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                nonceAsHex = new primitives_1.Nonce(nonce).hex();\n                _context9.next = 3;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/nfts/\").concat(collection, \"-\").concat(nonceAsHex));\n              case 3:\n                response = _context9.sent;\n                tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context9.abrupt(\"return\", tokenData);\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var response, transaction;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash));\n              case 2:\n                response = _context10.sent;\n                transaction = transactions_1.TransactionOnNetwork.fromApiHttpResponse(txHash, response);\n                return _context10.abrupt(\"return\", transaction);\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var response, status;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash, \"?fields=status\"));\n              case 2:\n                response = _context11.sent;\n                status = new transactionStatus_1.TransactionStatus(response.status);\n                return _context11.abrupt(\"return\", status);\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doPostGeneric(\"transactions\", tx.toSendable());\n              case 2:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response.txHash);\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.backingProxyNetworkProvider.simulateTransaction(tx);\n              case 2:\n                return _context13.abrupt(\"return\", _context13.sent);\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var request, response;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                request = new contractQueryRequest_1.ContractQueryRequest(query).toHttpRequest();\n                _context14.next = 4;\n                return this.doPostGeneric(\"query\", request);\n              case 4:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", contractQueryResponse_1.ContractQueryResponse.fromHttpResponse(response));\n              case 8:\n                _context14.prev = 8;\n                _context14.t0 = _context14[\"catch\"](0);\n                throw new errors_1.ErrContractQuery(_context14.t0);\n              case 11:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[0, 8]]);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfFungibleToken\",\n    value: function getDefinitionOfFungibleToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var response, definition;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.doGetGeneric(\"tokens/\".concat(tokenIdentifier));\n              case 2:\n                response = _context15.sent;\n                definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromApiHttpResponse(response);\n                return _context15.abrupt(\"return\", definition);\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfTokenCollection\",\n    value: function getDefinitionOfTokenCollection(collection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var response, definition;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.doGetGeneric(\"collections/\".concat(collection));\n              case 2:\n                response = _context16.sent;\n                definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromApiHttpResponse(response);\n                return _context16.abrupt(\"return\", definition);\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleToken\",\n    value: function getNonFungibleToken(collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        var nonceAsHex, response, token;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                nonceAsHex = new primitives_1.Nonce(nonce).hex();\n                _context17.next = 3;\n                return this.doGetGeneric(\"nfts/\".concat(collection, \"-\").concat(nonceAsHex));\n              case 3:\n                response = _context17.sent;\n                token = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context17.abrupt(\"return\", token);\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.doGet(resourceUrl);\n              case 2:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.doPost(resourceUrl, payload);\n              case 2:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n    }\n  }, {\n    key: \"buildPaginationParams\",\n    value: function buildPaginationParams(pagination) {\n      return \"from=\".concat(pagination.from, \"&size=\").concat(pagination.size);\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var url, response;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context20.prev = 1;\n                _context20.next = 4;\n                return axios_1.default.get(url, this.config);\n              case 4:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response.data);\n              case 8:\n                _context20.prev = 8;\n                _context20.t0 = _context20[\"catch\"](1);\n                this.handleApiError(_context20.t0, resourceUrl);\n              case 11:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[1, 8]]);\n      }));\n    }\n  }, {\n    key: \"doPost\",\n    value: function doPost(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var url, response, responsePayload;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context21.prev = 1;\n                _context21.next = 4;\n                return axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }));\n              case 4:\n                response = _context21.sent;\n                responsePayload = response.data;\n                return _context21.abrupt(\"return\", responsePayload);\n              case 9:\n                _context21.prev = 9;\n                _context21.t0 = _context21[\"catch\"](1);\n                this.handleApiError(_context21.t0, resourceUrl);\n              case 12:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[1, 9]]);\n      }));\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n      }\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n  return ApiNetworkProvider;\n}();\nexports.ApiNetworkProvider = ApiNetworkProvider;","map":null,"metadata":{},"sourceType":"script"}