{"ast":null,"code":"import _objectSpread from \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Session } from 'core';\nexport function reducer(state, action) {\n  switch (action.type) {\n    case 'setLobbyRoom':\n      {\n        var lobbyRoom = action.lobbyRoom;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          lobbyRoom: lobbyRoom\n        });\n      }\n    case 'setGameRoom':\n      {\n        var gameRoom = action.gameRoom;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          gameRoom: gameRoom\n        });\n      }\n    case 'setMapRoom':\n      {\n        var mapRoom = action.mapRoom;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mapRoom: mapRoom\n        });\n      }\n    case 'setPlayer':\n      {\n        var player = action.player;\n        Session.setItem('player', player, 10800);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          player: player\n        });\n      }\n    case 'setSpaceships':\n      {\n        var spaceships = action.spaceships;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          spaceships: spaceships\n        });\n      }\n\n    // HUD\n\n    case 'setStats':\n      {\n        var stats = action.stats;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            stats: stats\n          })\n        });\n      }\n    case 'setBackButton':\n      {\n        var visible = action.visible;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            backButtonVisible: visible\n          })\n        });\n      }\n    case 'setSelectedPoint':\n      {\n        var point = action.point;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            selectedPoint: point\n          })\n        });\n      }\n    case 'setSelectedTile':\n      {\n        var tile = action.tile;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            selectedTile: tile\n          })\n        });\n      }\n    case 'setSelectedSpaceship':\n      {\n        var spaceship = action.spaceship;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            selectedSpaceship: spaceship\n          })\n        });\n      }\n    case 'setPlayerId':\n      {\n        var playerId = action.playerId;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            playerId: playerId\n          })\n        });\n      }\n    case 'setControlledSpaceship':\n      {\n        var _spaceship = action.spaceship;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            backButtonVisible: false,\n            controlledSpaceship: _spaceship\n          })\n        });\n      }\n    case 'setAsteroid':\n      {\n        var asteroid = action.asteroid;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          hud: _objectSpread(_objectSpread({}, state.hud), {}, {\n            backButtonVisible: false,\n            selectedAsteroid: asteroid\n          })\n        });\n      }\n  }\n}","map":{"version":3,"names":["Session","reducer","state","action","type","lobbyRoom","gameRoom","mapRoom","player","setItem","spaceships","stats","hud","visible","backButtonVisible","point","selectedPoint","tile","selectedTile","spaceship","selectedSpaceship","playerId","controlledSpaceship","asteroid","selectedAsteroid"],"sources":["/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/context/room/room.reducer.tsx"],"sourcesContent":["import { Session } from 'core';\nimport { StateType } from './room.state';\n\nexport type DispatchType = (action: ActionType) => void;\n\nexport type ActionType =\n\t| { type: 'setMapRoom'; mapRoom: StateType['mapRoom'] }\n\t| { type: 'setGameRoom'; gameRoom: StateType['gameRoom'] }\n\t| { type: 'setLobbyRoom'; lobbyRoom: StateType['lobbyRoom'] }\n\t| { type: 'setPlayer'; player: StateType['player'] }\n\t| { type: 'setSpaceships'; spaceships: StateType['spaceships'] }\n\t| { type: 'setStats'; stats: StateType['hud']['stats'] }\n\t| { type: 'setBackButton'; visible: StateType['hud']['backButtonVisible'] }\n\t| { type: 'setSelectedPoint'; point: StateType['hud']['selectedPoint'] }\n\t| { type: 'setSelectedTile'; tile: StateType['hud']['selectedTile'] }\n\t| { type: 'setSelectedSpaceship'; spaceship: StateType['hud']['selectedSpaceship'] }\n\t| { type: 'setPlayerId'; playerId: StateType['hud']['playerId'] }\n\t| { type: 'setControlledSpaceship'; spaceship: StateType['hud']['controlledSpaceship'] }\n\t| { type: 'setAsteroid'; asteroid: StateType['hud']['selectedAsteroid'] }\n\nexport function reducer(state: StateType, action: ActionType): StateType {\n\tswitch (action.type) {\n\t\tcase 'setLobbyRoom': {\n\t\t\tconst { lobbyRoom } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlobbyRoom,\n\t\t\t};\n\t\t}\n\n\t\tcase 'setGameRoom': {\n\t\t\tconst { gameRoom } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameRoom,\n\t\t\t};\n\t\t}\n\n\t\tcase 'setMapRoom': {\n\t\t\tconst { mapRoom } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmapRoom,\n\t\t\t};\n\t\t}\n\n\t\tcase 'setPlayer': {\n\t\t\tconst { player } = action;\n\t\t\tSession.setItem('player', player, 10800);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayer,\n\t\t\t};\n\t\t}\n\n\t\tcase 'setSpaceships': {\n\t\t\tconst { spaceships } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspaceships,\n\t\t\t};\n\t\t}\n\n\t\t// HUD\n\n\t\tcase 'setStats': {\n\t\t\tconst { stats } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tstats\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setBackButton': {\n\t\t\tconst { visible } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tbackButtonVisible: visible\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setSelectedPoint': {\n\t\t\tconst { point } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tselectedPoint: point\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setSelectedTile': {\n\t\t\tconst { tile } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tselectedTile: tile\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setSelectedSpaceship': {\n\t\t\tconst { spaceship } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tselectedSpaceship: spaceship\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setPlayerId': {\n\t\t\tconst { playerId } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tplayerId\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setControlledSpaceship': {\n\t\t\tconst { spaceship } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tbackButtonVisible: false,\n\t\t\t\t\tcontrolledSpaceship: spaceship\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase 'setAsteroid': {\n\t\t\tconst { asteroid } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thud: {\n\t\t\t\t\t...state.hud,\n\t\t\t\t\tbackButtonVisible: false,\n\t\t\t\t\tselectedAsteroid: asteroid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,MAAM;AAoB9B,OAAO,SAASC,OAAO,CAACC,KAAgB,EAAEC,MAAkB,EAAa;EACxE,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAK,cAAc;MAAE;QACpB,IAAQC,SAAS,GAAKF,MAAM,CAApBE,SAAS;QACjB,uCACIH,KAAK;UACRG,SAAS,EAATA;QAAS;MAEX;IAEA,KAAK,aAAa;MAAE;QACnB,IAAQC,QAAQ,GAAKH,MAAM,CAAnBG,QAAQ;QAChB,uCACIJ,KAAK;UACRI,QAAQ,EAARA;QAAQ;MAEV;IAEA,KAAK,YAAY;MAAE;QAClB,IAAQC,OAAO,GAAKJ,MAAM,CAAlBI,OAAO;QACf,uCACIL,KAAK;UACRK,OAAO,EAAPA;QAAO;MAET;IAEA,KAAK,WAAW;MAAE;QACjB,IAAQC,MAAM,GAAKL,MAAM,CAAjBK,MAAM;QACdR,OAAO,CAACS,OAAO,CAAC,QAAQ,EAAED,MAAM,EAAE,KAAK,CAAC;QACxC,uCACIN,KAAK;UACRM,MAAM,EAANA;QAAM;MAER;IAEA,KAAK,eAAe;MAAE;QACrB,IAAQE,UAAU,GAAKP,MAAM,CAArBO,UAAU;QAClB,uCACIR,KAAK;UACRQ,UAAU,EAAVA;QAAU;MAEZ;;IAEA;;IAEA,KAAK,UAAU;MAAE;QAChB,IAAQC,KAAK,GAAKR,MAAM,CAAhBQ,KAAK;QACb,uCACIT,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZD,KAAK,EAALA;UAAK;QACL;MAEH;IAEA,KAAK,eAAe;MAAE;QACrB,IAAQE,OAAO,GAAKV,MAAM,CAAlBU,OAAO;QACf,uCACIX,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZE,iBAAiB,EAAED;UAAO;QAC1B;MAEH;IAEA,KAAK,kBAAkB;MAAE;QACxB,IAAQE,KAAK,GAAKZ,MAAM,CAAhBY,KAAK;QACb,uCACIb,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZI,aAAa,EAAED;UAAK;QACpB;MAEH;IAEA,KAAK,iBAAiB;MAAE;QACvB,IAAQE,IAAI,GAAKd,MAAM,CAAfc,IAAI;QACZ,uCACIf,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZM,YAAY,EAAED;UAAI;QAClB;MAEH;IAEA,KAAK,sBAAsB;MAAE;QAC5B,IAAQE,SAAS,GAAKhB,MAAM,CAApBgB,SAAS;QACjB,uCACIjB,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZQ,iBAAiB,EAAED;UAAS;QAC5B;MAEH;IAEA,KAAK,aAAa;MAAE;QACnB,IAAQE,QAAQ,GAAKlB,MAAM,CAAnBkB,QAAQ;QAChB,uCACInB,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZS,QAAQ,EAARA;UAAQ;QACR;MAEH;IAEA,KAAK,wBAAwB;MAAE;QAC9B,IAAQF,UAAS,GAAKhB,MAAM,CAApBgB,SAAS;QACjB,uCACIjB,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZE,iBAAiB,EAAE,KAAK;YACxBQ,mBAAmB,EAAEH;UAAS;QAC9B;MAEH;IAEA,KAAK,aAAa;MAAE;QACnB,IAAQI,QAAQ,GAAKpB,MAAM,CAAnBoB,QAAQ;QAChB,uCACIrB,KAAK;UACRU,GAAG,kCACCV,KAAK,CAACU,GAAG;YACZE,iBAAiB,EAAE,KAAK;YACxBU,gBAAgB,EAAED;UAAQ;QAC1B;MAEH;EAAC;AAEH"},"metadata":{},"sourceType":"module"}