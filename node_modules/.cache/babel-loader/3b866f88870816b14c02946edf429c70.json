{"ast":null,"code":"import _toArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport { a as l } from \"./chunk-35N6HQAC.js\";\nimport { a as T } from \"./chunk-XAPH7V6V.js\";\nimport { a as S } from \"./chunk-U6VBIKWK.js\";\nimport { m as c } from \"./chunk-HBP5N4FR.js\";\nc();\nS();\nimport { Address as d, TransactionPayload as E } from \"@elrondnetwork/erdjs\";\nvar D = [\"ESDTNFTTransfer\", \"ESDTNFTBurn\", \"ESDTNFTAddQuantity\", \"ESDTNFTCreate\", \"MultiESDTNFTTransfer\", \"ESDTTransfer\", \"ESDTBurn\", \"ESDTLocalMint\", \"ESDTLocalBurn\", \"ESDTWipe\", \"ESDTFreeze\"];\nfunction w(r, s) {\n  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  if (!T(r)) return !1;\n  if (new d(r).isContractAddress()) return !0;\n  var i = m({\n    receiver: r,\n    data: t\n  });\n  return i ? new d(i).isContractAddress() || C(r, s, t) : !1;\n}\nvar g = function g(r) {\n    return r.toLowerCase().match(/[0-9a-f]/g);\n  },\n  p = function p(r) {\n    return r.length % 2 === 0;\n  };\nfunction C(r, s, t) {\n  var n = t == null ? void 0 : t.split(\"@\");\n  if (n == null) return !1;\n  var _n = _toArray(n),\n    e = _n[0],\n    i = _n.slice(1),\n    o = s != null && r != null && r === s,\n    u = D.includes(e),\n    f = i.every(function (a) {\n      return g(a) && p(a);\n    });\n  return o && u && f;\n}\nfunction m(_ref) {\n  var r = _ref.receiver,\n    s = _ref.data;\n  try {\n    if (!s) return r;\n    var t = l(s) ? E.fromEncoded(s).toString() : s,\n      n = x(t),\n      e = t.split(\"@\");\n    return n > -1 ? e[n] : r;\n  } catch (t) {\n    console.log(t);\n    return;\n  }\n}\nfunction x(r) {\n  return r.includes(\"MultiESDTNFTTransfer\") ? 1 : r.includes(\"ESDTNFTTransfer\") ? 4 : -1;\n}\nexport { D as a, w as b, C as c, m as d };","map":null,"metadata":{},"sourceType":"module"}