{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar display = require('@pixi/display');\nvar events = require('@pixi/events');\nvar accessibleTarget = require('./accessibleTarget.js');\ndisplay.DisplayObject.mixin(accessibleTarget.accessibleTarget);\nvar KEY_CODE_TAB = 9;\nvar DIV_TOUCH_SIZE = 100;\nvar DIV_TOUCH_POS_X = 0;\nvar DIV_TOUCH_POS_Y = 0;\nvar DIV_TOUCH_ZINDEX = 2;\nvar DIV_HOOK_SIZE = 1;\nvar DIV_HOOK_POS_X = -1e3;\nvar DIV_HOOK_POS_Y = -1e3;\nvar DIV_HOOK_ZINDEX = 2;\nvar AccessibilityManager = /*#__PURE__*/function () {\n  function AccessibilityManager(renderer) {\n    _classCallCheck(this, AccessibilityManager);\n    this.debug = false;\n    this._isActive = false;\n    this._isMobileAccessibility = false;\n    this.pool = [];\n    this.renderId = 0;\n    this.children = [];\n    this.androidUpdateCount = 0;\n    this.androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (core.utils.isMobile.tablet || core.utils.isMobile.phone) {\n      this.createTouchHook();\n    }\n    var div = document.createElement(\"div\");\n    div.style.width = \"\".concat(DIV_TOUCH_SIZE, \"px\");\n    div.style.height = \"\".concat(DIV_TOUCH_SIZE, \"px\");\n    div.style.position = \"absolute\";\n    div.style.top = \"\".concat(DIV_TOUCH_POS_X, \"px\");\n    div.style.left = \"\".concat(DIV_TOUCH_POS_Y, \"px\");\n    div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n    this.div = div;\n    this.renderer = renderer;\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n  }\n  _createClass(AccessibilityManager, [{\n    key: \"isActive\",\n    get: function get() {\n      return this._isActive;\n    }\n  }, {\n    key: \"isMobileAccessibility\",\n    get: function get() {\n      return this._isMobileAccessibility;\n    }\n  }, {\n    key: \"createTouchHook\",\n    value: function createTouchHook() {\n      var _this = this;\n      var hookDiv = document.createElement(\"button\");\n      hookDiv.style.width = \"\".concat(DIV_HOOK_SIZE, \"px\");\n      hookDiv.style.height = \"\".concat(DIV_HOOK_SIZE, \"px\");\n      hookDiv.style.position = \"absolute\";\n      hookDiv.style.top = \"\".concat(DIV_HOOK_POS_X, \"px\");\n      hookDiv.style.left = \"\".concat(DIV_HOOK_POS_Y, \"px\");\n      hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n      hookDiv.style.backgroundColor = \"#FF0000\";\n      hookDiv.title = \"select to enable accessibility for this content\";\n      hookDiv.addEventListener(\"focus\", function () {\n        _this._isMobileAccessibility = true;\n        _this.activate();\n        _this.destroyTouchHook();\n      });\n      document.body.appendChild(hookDiv);\n      this._hookDiv = hookDiv;\n    }\n  }, {\n    key: \"destroyTouchHook\",\n    value: function destroyTouchHook() {\n      if (!this._hookDiv) {\n        return;\n      }\n      document.body.removeChild(this._hookDiv);\n      this._hookDiv = null;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _this$renderer$view$p;\n      if (this._isActive) {\n        return;\n      }\n      this._isActive = true;\n      globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n      globalThis.removeEventListener(\"keydown\", this._onKeyDown, false);\n      this.renderer.on(\"postrender\", this.update, this);\n      (_this$renderer$view$p = this.renderer.view.parentNode) === null || _this$renderer$view$p === void 0 ? void 0 : _this$renderer$view$p.appendChild(this.div);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this$div$parentNode;\n      if (!this._isActive || this._isMobileAccessibility) {\n        return;\n      }\n      this._isActive = false;\n      globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n      globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n      this.renderer.off(\"postrender\", this.update);\n      (_this$div$parentNode = this.div.parentNode) === null || _this$div$parentNode === void 0 ? void 0 : _this$div$parentNode.removeChild(this.div);\n    }\n  }, {\n    key: \"updateAccessibleObjects\",\n    value: function updateAccessibleObjects(displayObject) {\n      if (!displayObject.visible || !displayObject.accessibleChildren) {\n        return;\n      }\n      if (displayObject.accessible && displayObject.interactive) {\n        if (!displayObject._accessibleActive) {\n          this.addChild(displayObject);\n        }\n        displayObject.renderId = this.renderId;\n      }\n      var children = displayObject.children;\n      if (children) {\n        for (var i = 0; i < children.length; i++) {\n          this.updateAccessibleObjects(children[i]);\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var now = performance.now();\n      if (core.utils.isMobile.android.device && now < this.androidUpdateCount) {\n        return;\n      }\n      this.androidUpdateCount = now + this.androidUpdateFrequency;\n      if (!this.renderer.renderingToScreen) {\n        return;\n      }\n      if (this.renderer.lastObjectRendered) {\n        this.updateAccessibleObjects(this.renderer.lastObjectRendered);\n      }\n      var _this$renderer$view$g = this.renderer.view.getBoundingClientRect(),\n        x = _this$renderer$view$g.x,\n        y = _this$renderer$view$g.y,\n        width = _this$renderer$view$g.width,\n        height = _this$renderer$view$g.height;\n      var _this$renderer = this.renderer,\n        viewWidth = _this$renderer.width,\n        viewHeight = _this$renderer.height,\n        resolution = _this$renderer.resolution;\n      var sx = width / viewWidth * resolution;\n      var sy = height / viewHeight * resolution;\n      var div = this.div;\n      div.style.left = \"\".concat(x, \"px\");\n      div.style.top = \"\".concat(y, \"px\");\n      div.style.width = \"\".concat(viewWidth, \"px\");\n      div.style.height = \"\".concat(viewHeight, \"px\");\n      for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        if (child.renderId !== this.renderId) {\n          child._accessibleActive = false;\n          core.utils.removeItems(this.children, i, 1);\n          this.div.removeChild(child._accessibleDiv);\n          this.pool.push(child._accessibleDiv);\n          child._accessibleDiv = null;\n          i--;\n        } else {\n          div = child._accessibleDiv;\n          var hitArea = child.hitArea;\n          var wt = child.worldTransform;\n          if (child.hitArea) {\n            div.style.left = \"\".concat((wt.tx + hitArea.x * wt.a) * sx, \"px\");\n            div.style.top = \"\".concat((wt.ty + hitArea.y * wt.d) * sy, \"px\");\n            div.style.width = \"\".concat(hitArea.width * wt.a * sx, \"px\");\n            div.style.height = \"\".concat(hitArea.height * wt.d * sy, \"px\");\n          } else {\n            hitArea = child.getBounds();\n            this.capHitArea(hitArea);\n            div.style.left = \"\".concat(hitArea.x * sx, \"px\");\n            div.style.top = \"\".concat(hitArea.y * sy, \"px\");\n            div.style.width = \"\".concat(hitArea.width * sx, \"px\");\n            div.style.height = \"\".concat(hitArea.height * sy, \"px\");\n            if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n              div.title = child.accessibleTitle;\n            }\n            if (div.getAttribute(\"aria-label\") !== child.accessibleHint && child.accessibleHint !== null) {\n              div.setAttribute(\"aria-label\", child.accessibleHint);\n            }\n          }\n          if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex) {\n            div.title = child.accessibleTitle;\n            div.tabIndex = child.tabIndex;\n            if (this.debug) this.updateDebugHTML(div);\n          }\n        }\n      }\n      this.renderId++;\n    }\n  }, {\n    key: \"updateDebugHTML\",\n    value: function updateDebugHTML(div) {\n      div.innerHTML = \"type: \".concat(div.type, \"</br> title : \").concat(div.title, \"</br> tabIndex: \").concat(div.tabIndex);\n    }\n  }, {\n    key: \"capHitArea\",\n    value: function capHitArea(hitArea) {\n      if (hitArea.x < 0) {\n        hitArea.width += hitArea.x;\n        hitArea.x = 0;\n      }\n      if (hitArea.y < 0) {\n        hitArea.height += hitArea.y;\n        hitArea.y = 0;\n      }\n      var _this$renderer2 = this.renderer,\n        viewWidth = _this$renderer2.width,\n        viewHeight = _this$renderer2.height;\n      if (hitArea.x + hitArea.width > viewWidth) {\n        hitArea.width = viewWidth - hitArea.x;\n      }\n      if (hitArea.y + hitArea.height > viewHeight) {\n        hitArea.height = viewHeight - hitArea.y;\n      }\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(displayObject) {\n      var div = this.pool.pop();\n      if (!div) {\n        div = document.createElement(\"button\");\n        div.style.width = \"\".concat(DIV_TOUCH_SIZE, \"px\");\n        div.style.height = \"\".concat(DIV_TOUCH_SIZE, \"px\");\n        div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n        div.style.position = \"absolute\";\n        div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n        div.style.borderStyle = \"none\";\n        if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n          div.setAttribute(\"aria-live\", \"off\");\n        } else {\n          div.setAttribute(\"aria-live\", \"polite\");\n        }\n        if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n          div.setAttribute(\"aria-relevant\", \"additions\");\n        } else {\n          div.setAttribute(\"aria-relevant\", \"text\");\n        }\n        div.addEventListener(\"click\", this._onClick.bind(this));\n        div.addEventListener(\"focus\", this._onFocus.bind(this));\n        div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n      }\n      div.style.pointerEvents = displayObject.accessiblePointerEvents;\n      div.type = displayObject.accessibleType;\n      if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null) {\n        div.title = displayObject.accessibleTitle;\n      } else if (!displayObject.accessibleHint || displayObject.accessibleHint === null) {\n        div.title = \"displayObject \".concat(displayObject.tabIndex);\n      }\n      if (displayObject.accessibleHint && displayObject.accessibleHint !== null) {\n        div.setAttribute(\"aria-label\", displayObject.accessibleHint);\n      }\n      if (this.debug) this.updateDebugHTML(div);\n      displayObject._accessibleActive = true;\n      displayObject._accessibleDiv = div;\n      div.displayObject = displayObject;\n      this.children.push(displayObject);\n      this.div.appendChild(displayObject._accessibleDiv);\n      displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    }\n  }, {\n    key: \"_dispatchEvent\",\n    value: function _dispatchEvent(e, type) {\n      var target = e.target.displayObject;\n      var boundry = this.renderer.events.rootBoundary;\n      var event = Object.assign(new events.FederatedEvent(boundry), {\n        target: target\n      });\n      boundry.rootTarget = this.renderer.lastObjectRendered;\n      type.forEach(function (type2) {\n        return boundry.dispatchEvent(event, type2);\n      });\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(e) {\n      this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n    }\n  }, {\n    key: \"_onFocus\",\n    value: function _onFocus(e) {\n      if (!e.target.getAttribute(\"aria-live\")) {\n        e.target.setAttribute(\"aria-live\", \"assertive\");\n      }\n      this._dispatchEvent(e, [\"mouseover\"]);\n    }\n  }, {\n    key: \"_onFocusOut\",\n    value: function _onFocusOut(e) {\n      if (!e.target.getAttribute(\"aria-live\")) {\n        e.target.setAttribute(\"aria-live\", \"polite\");\n      }\n      this._dispatchEvent(e, [\"mouseout\"]);\n    }\n  }, {\n    key: \"_onKeyDown\",\n    value: function _onKeyDown(e) {\n      if (e.keyCode !== KEY_CODE_TAB) {\n        return;\n      }\n      this.activate();\n    }\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(e) {\n      if (e.movementX === 0 && e.movementY === 0) {\n        return;\n      }\n      this.deactivate();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyTouchHook();\n      this.div = null;\n      globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n      globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n      this.pool = null;\n      this.children = null;\n      this.renderer = null;\n    }\n  }]);\n  return AccessibilityManager;\n}();\nAccessibilityManager.extension = {\n  name: \"accessibility\",\n  type: [core.ExtensionType.RendererPlugin, core.ExtensionType.CanvasRendererPlugin]\n};\ncore.extensions.add(AccessibilityManager);\nexports.AccessibilityManager = AccessibilityManager;","map":{"version":3,"sources":["../src/AccessibilityManager.ts"],"names":["DisplayObject","accessibleTarget","utils","FederatedEvent","ExtensionType","extensions"],"mappings":"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","sourcesContent":["import { ExtensionType, extensions, utils } from '@pixi/core';\nimport { DisplayObject } from '@pixi/display';\nimport { FederatedEvent } from '@pixi/events';\nimport { accessibleTarget } from './accessibleTarget';\n\nimport type { Rectangle, IRenderer, ExtensionMetadata } from '@pixi/core';\nimport type { Container } from '@pixi/display';\nimport type { IAccessibleHTMLElement } from './accessibleTarget';\n\n// add some extra variables to the container..\nDisplayObject.mixin(accessibleTarget);\n\nconst KEY_CODE_TAB = 9;\n\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\n\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1000;\nconst DIV_HOOK_POS_Y = -1000;\nconst DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager recreates the ability to tab and have content read by screen readers.\n * This is very important as it can possibly help people with disabilities access PixiJS content.\n *\n * A DisplayObject can be made accessible just like it can be made interactive. This manager will map the\n * events as if the mouse was being used, minimizing the effort required to implement.\n *\n * An instance of this class is automatically created by default, and can be found at `renderer.plugins.accessibility`\n * @class\n * @memberof PIXI\n */\nexport class AccessibilityManager\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = {\n        name: 'accessibility',\n        type: [\n            ExtensionType.RendererPlugin,\n            ExtensionType.CanvasRendererPlugin,\n        ],\n    };\n\n    /** Setting this to true will visually show the divs. */\n    public debug = false;\n\n    /**\n     * The renderer this accessibility manager works for.\n     * @type {PIXI.CanvasRenderer|PIXI.Renderer}\n     */\n    public renderer: IRenderer;\n\n    /** Internal variable, see isActive getter. */\n    private _isActive = false;\n\n    /** Internal variable, see isMobileAccessibility getter. */\n    private _isMobileAccessibility = false;\n\n    /** Button element for handling touch hooks. */\n    private _hookDiv: HTMLElement;\n\n    /** This is the dom element that will sit over the PixiJS element. This is where the div overlays will go. */\n    private div: HTMLElement;\n\n    /** A simple pool for storing divs. */\n    private pool: IAccessibleHTMLElement[] = [];\n\n    /** This is a tick used to check if an object is no longer being rendered. */\n    private renderId = 0;\n\n    /** The array of currently active accessible items. */\n    private children: DisplayObject[] = [];\n\n    /** Count to throttle div updates on android devices. */\n    private androidUpdateCount = 0;\n\n    /**  The frequency to update the div elements. */\n    private androidUpdateFrequency = 500; // 2fps\n\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.Renderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer: IRenderer)\n    {\n        this._hookDiv = null;\n\n        if (utils.isMobile.tablet || utils.isMobile.phone)\n        {\n            this.createTouchHook();\n        }\n\n        // first we create a div that will sit over the PixiJS element. This is where the div overlays will go.\n        const div = document.createElement('div');\n\n        div.style.width = `${DIV_TOUCH_SIZE}px`;\n        div.style.height = `${DIV_TOUCH_SIZE}px`;\n        div.style.position = 'absolute';\n        div.style.top = `${DIV_TOUCH_POS_X}px`;\n        div.style.left = `${DIV_TOUCH_POS_Y}px`;\n        div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n\n        this.div = div;\n        this.renderer = renderer;\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Value of `true` if accessibility is currently active and accessibility layers are showing.\n     * @member {boolean}\n     * @readonly\n     */\n    get isActive(): boolean\n    {\n        return this._isActive;\n    }\n\n    /**\n     * Value of `true` if accessibility is enabled for touch devices.\n     * @member {boolean}\n     * @readonly\n     */\n    get isMobileAccessibility(): boolean\n    {\n        return this._isMobileAccessibility;\n    }\n\n    /**\n     * Creates the touch hooks.\n     * @private\n     */\n    private createTouchHook(): void\n    {\n        const hookDiv = document.createElement('button');\n\n        hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n        hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'select to enable accessibility for this content';\n\n        hookDiv.addEventListener('focus', () =>\n        {\n            this._isMobileAccessibility = true;\n            this.activate();\n            this.destroyTouchHook();\n        });\n\n        document.body.appendChild(hookDiv);\n        this._hookDiv = hookDiv;\n    }\n\n    /**\n     * Destroys the touch hooks.\n     * @private\n     */\n    private destroyTouchHook(): void\n    {\n        if (!this._hookDiv)\n        {\n            return;\n        }\n        document.body.removeChild(this._hookDiv);\n        this._hookDiv = null;\n    }\n\n    /**\n     * Activating will cause the Accessibility layer to be shown.\n     * This is called when a user presses the tab key.\n     * @private\n     */\n    private activate(): void\n    {\n        if (this._isActive)\n        {\n            return;\n        }\n\n        this._isActive = true;\n\n        globalThis.document.addEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.on('postrender', this.update, this);\n        this.renderer.view.parentNode?.appendChild(this.div);\n    }\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden.\n     * This is called when a user moves the mouse.\n     * @private\n     */\n    private deactivate(): void\n    {\n        if (!this._isActive || this._isMobileAccessibility)\n        {\n            return;\n        }\n\n        this._isActive = false;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.off('postrender', this.update);\n        this.div.parentNode?.removeChild(this.div);\n    }\n\n    /**\n     * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */\n    private updateAccessibleObjects(displayObject: Container): void\n    {\n        if (!displayObject.visible || !displayObject.accessibleChildren)\n        {\n            return;\n        }\n\n        if (displayObject.accessible && displayObject.interactive)\n        {\n            if (!displayObject._accessibleActive)\n            {\n                this.addChild(displayObject);\n            }\n\n            displayObject.renderId = this.renderId;\n        }\n\n        const children = displayObject.children;\n\n        if (children)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                this.updateAccessibleObjects(children[i] as Container);\n            }\n        }\n    }\n\n    /**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     * @private\n     */\n    private update(): void\n    {\n        /* On Android default web browser, tab order seems to be calculated by position rather than tabIndex,\n        *  moving buttons can cause focus to flicker between two buttons making it hard/impossible to navigate,\n        *  so I am just running update every half a second, seems to fix it.\n        */\n        const now = performance.now();\n\n        if (utils.isMobile.android.device && now < this.androidUpdateCount)\n        {\n            return;\n        }\n\n        this.androidUpdateCount = now + this.androidUpdateFrequency;\n\n        if (!this.renderer.renderingToScreen)\n        {\n            return;\n        }\n\n        // update children...\n        if (this.renderer.lastObjectRendered)\n        {\n            this.updateAccessibleObjects(this.renderer.lastObjectRendered as Container);\n        }\n\n        const { x, y, width, height } = this.renderer.view.getBoundingClientRect();\n        const { width: viewWidth, height: viewHeight, resolution } = this.renderer;\n\n        const sx = (width / viewWidth) * resolution;\n        const sy = (height / viewHeight) * resolution;\n\n        let div = this.div;\n\n        div.style.left = `${x}px`;\n        div.style.top = `${y}px`;\n        div.style.width = `${viewWidth}px`;\n        div.style.height = `${viewHeight}px`;\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (child.renderId !== this.renderId)\n            {\n                child._accessibleActive = false;\n\n                utils.removeItems(this.children, i, 1);\n                this.div.removeChild(child._accessibleDiv);\n                this.pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n            }\n            else\n            {\n                // map div to display..\n                div = child._accessibleDiv;\n                let hitArea = child.hitArea as Rectangle;\n                const wt = child.worldTransform;\n\n                if (child.hitArea)\n                {\n                    div.style.left = `${(wt.tx + (hitArea.x * wt.a)) * sx}px`;\n                    div.style.top = `${(wt.ty + (hitArea.y * wt.d)) * sy}px`;\n\n                    div.style.width = `${hitArea.width * wt.a * sx}px`;\n                    div.style.height = `${hitArea.height * wt.d * sy}px`;\n                }\n                else\n                {\n                    hitArea = child.getBounds();\n\n                    this.capHitArea(hitArea);\n\n                    div.style.left = `${hitArea.x * sx}px`;\n                    div.style.top = `${hitArea.y * sy}px`;\n\n                    div.style.width = `${hitArea.width * sx}px`;\n                    div.style.height = `${hitArea.height * sy}px`;\n\n                    // update button titles and hints if they exist and they've changed\n                    if (div.title !== child.accessibleTitle && child.accessibleTitle !== null)\n                    {\n                        div.title = child.accessibleTitle;\n                    }\n                    if (div.getAttribute('aria-label') !== child.accessibleHint\n                        && child.accessibleHint !== null)\n                    {\n                        div.setAttribute('aria-label', child.accessibleHint);\n                    }\n                }\n\n                // the title or index may have changed, if so lets update it!\n                if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex)\n                {\n                    div.title = child.accessibleTitle;\n                    div.tabIndex = child.tabIndex;\n                    if (this.debug) this.updateDebugHTML(div);\n                }\n            }\n        }\n\n        // increment the render id..\n        this.renderId++;\n    }\n\n    /**\n     * private function that will visually add the information to the\n     * accessability div\n     * @param {HTMLElement} div -\n     */\n    public updateDebugHTML(div: IAccessibleHTMLElement): void\n    {\n        div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n    }\n\n    /**\n     * Adjust the hit area based on the bounds of a display object\n     * @param {PIXI.Rectangle} hitArea - Bounds of the child\n     */\n    public capHitArea(hitArea: Rectangle): void\n    {\n        if (hitArea.x < 0)\n        {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0)\n        {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        const { width: viewWidth, height: viewHeight } = this.renderer;\n\n        if (hitArea.x + hitArea.width > viewWidth)\n        {\n            hitArea.width = viewWidth - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > viewHeight)\n        {\n            hitArea.height = viewHeight - hitArea.y;\n        }\n    }\n\n    /**\n     * Adds a DisplayObject to the accessibility manager\n     * @private\n     * @param {PIXI.DisplayObject} displayObject - The child to make accessible.\n     */\n    private addChild<T extends DisplayObject>(displayObject: T): void\n    {\n        //    this.activate();\n\n        let div = this.pool.pop();\n\n        if (!div)\n        {\n            div = document.createElement('button');\n\n            div.style.width = `${DIV_TOUCH_SIZE}px`;\n            div.style.height = `${DIV_TOUCH_SIZE}px`;\n            div.style.backgroundColor = this.debug ? 'rgba(255,255,255,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n            div.style.borderStyle = 'none';\n\n            // ARIA attributes ensure that button title and hint updates are announced properly\n            if (navigator.userAgent.toLowerCase().includes('chrome'))\n            {\n                // Chrome doesn't need aria-live to work as intended; in fact it just gets more confused.\n                div.setAttribute('aria-live', 'off');\n            }\n            else\n            {\n                div.setAttribute('aria-live', 'polite');\n            }\n\n            if (navigator.userAgent.match(/rv:.*Gecko\\//))\n            {\n                // FireFox needs this to announce only the new button name\n                div.setAttribute('aria-relevant', 'additions');\n            }\n            else\n            {\n                // required by IE, other browsers don't much care\n                div.setAttribute('aria-relevant', 'text');\n            }\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        // set pointer events\n        div.style.pointerEvents = displayObject.accessiblePointerEvents;\n        // set the type, this defaults to button!\n        div.type = displayObject.accessibleType;\n\n        if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null)\n        {\n            div.title = displayObject.accessibleTitle;\n        }\n        else if (!displayObject.accessibleHint\n                 || displayObject.accessibleHint === null)\n        {\n            div.title = `displayObject ${displayObject.tabIndex}`;\n        }\n\n        if (displayObject.accessibleHint\n            && displayObject.accessibleHint !== null)\n        {\n            div.setAttribute('aria-label', displayObject.accessibleHint);\n        }\n\n        if (this.debug) this.updateDebugHTML(div);\n\n        displayObject._accessibleActive = true;\n        displayObject._accessibleDiv = div;\n        div.displayObject = displayObject;\n\n        this.children.push(displayObject);\n        this.div.appendChild(displayObject._accessibleDiv);\n        displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    }\n\n    /**\n     * Dispatch events with the EventSystem.\n     * @param e\n     * @param type\n     * @private\n     */\n    private _dispatchEvent(e: UIEvent, type: string[]): void\n    {\n        const { displayObject: target } = e.target as IAccessibleHTMLElement;\n        const boundry = this.renderer.events.rootBoundary;\n        const event: FederatedEvent = Object.assign(new FederatedEvent(boundry), { target });\n\n        boundry.rootTarget = this.renderer.lastObjectRendered as DisplayObject;\n        type.forEach((type) => boundry.dispatchEvent(event, type));\n    }\n\n    /**\n     * Maps the div button press to pixi's EventSystem (click)\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n    private _onClick(e: MouseEvent): void\n    {\n        this._dispatchEvent(e, ['click', 'pointertap', 'tap']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseover)\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n    private _onFocus(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'assertive');\n        }\n\n        this._dispatchEvent(e, ['mouseover']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseout)\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n    private _onFocusOut(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'polite');\n        }\n\n        this._dispatchEvent(e, ['mouseout']);\n    }\n\n    /**\n     * Is called when a key is pressed\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n    private _onKeyDown(e: KeyboardEvent): void\n    {\n        if (e.keyCode !== KEY_CODE_TAB)\n        {\n            return;\n        }\n\n        this.activate();\n    }\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     * @private\n     * @param {MouseEvent} e - The mouse event.\n     */\n    private _onMouseMove(e: MouseEvent): void\n    {\n        if (e.movementX === 0 && e.movementY === 0)\n        {\n            return;\n        }\n\n        this.deactivate();\n    }\n\n    /** Destroys the accessibility manager */\n    public destroy(): void\n    {\n        this.destroyTouchHook();\n        this.div = null;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown);\n\n        this.pool = null;\n        this.children = null;\n        this.renderer = null;\n    }\n}\n\nextensions.add(AccessibilityManager);\n"]},"metadata":{},"sourceType":"script"}