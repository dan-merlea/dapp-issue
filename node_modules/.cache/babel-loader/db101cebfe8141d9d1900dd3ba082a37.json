{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareVersions = void 0;\nfunction compareVersions(versionA, versionB) {\n  var i, diff;\n  var regExStrip0 = /(\\.0+)+$/;\n  var segmentsA = versionA.replace(regExStrip0, '').split('.');\n  var segmentsB = versionB.replace(regExStrip0, '').split('.');\n  var minVersionLength = Math.min(segmentsA.length, segmentsB.length);\n  for (i = 0; i < minVersionLength; i++) {\n    diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n    if (diff == 0) {\n      continue;\n    }\n    if (diff < 0) {\n      return -1;\n    }\n    return 1;\n  }\n  return segmentsA.length - segmentsB.length;\n}\nexports.compareVersions = compareVersions;","map":{"version":3,"sources":["../src/versioning.ts"],"names":[],"mappings":";;;;;;AAAA,SAAgB,eAAe,CAAC,QAAgB,EAAE,QAAgB,EAAA;EAC9D,IAAI,CAAC,EAAE,IAAI;EACX,IAAM,WAAW,GAAG,UAAU;EAC9B,IAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;EAC9D,IAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;EAC9D,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC;EAErE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;IACnC,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9D,IAAG,IAAI,IAAI,CAAC,EAAE;MACV;IACH;IAED,IAAG,IAAI,GAAG,CAAC,EAAG;MACV,OAAO,CAAC,CAAC;IACZ;IAED,OAAO,CAAC;EACX;EAED,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM;AAC9C;AArBA,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareVersions = void 0;\nfunction compareVersions(versionA, versionB) {\n    let i, diff;\n    const regExStrip0 = /(\\.0+)+$/;\n    const segmentsA = versionA.replace(regExStrip0, '').split('.');\n    const segmentsB = versionB.replace(regExStrip0, '').split('.');\n    const minVersionLength = Math.min(segmentsA.length, segmentsB.length);\n    for (i = 0; i < minVersionLength; i++) {\n        diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n        if (diff == 0) {\n            continue;\n        }\n        if (diff < 0) {\n            return -1;\n        }\n        return 1;\n    }\n    return segmentsA.length - segmentsB.length;\n}\nexports.compareVersions = compareVersions;\n//# sourceMappingURL=versioning.js.map"]},"metadata":{},"sourceType":"script"}