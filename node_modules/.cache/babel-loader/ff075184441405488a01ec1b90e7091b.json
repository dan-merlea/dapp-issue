{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeBigNumber = exports.decodeString = exports.decodeBool = exports.decodeUnsignedNumber = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar typesystem_1 = require(\"../typesystem\");\nvar binary_1 = require(\"./binary\");\nvar Codec = new binary_1.BinaryCodec();\nfunction decodeUnsignedNumber(buffer) {\n  var value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n  var raw = Number(value.valueOf());\n  return raw;\n}\nexports.decodeUnsignedNumber = decodeUnsignedNumber;\nfunction decodeBool(buffer) {\n  var value = Codec.decodeTopLevel(buffer, new typesystem_1.BooleanType());\n  var raw = Boolean(value.valueOf());\n  return raw;\n}\nexports.decodeBool = decodeBool;\nfunction decodeString(buffer) {\n  var value = Codec.decodeTopLevel(buffer, new typesystem_1.BytesType());\n  var raw = String(value.valueOf());\n  return raw;\n}\nexports.decodeString = decodeString;\nfunction decodeBigNumber(buffer) {\n  var value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n  var raw = new bignumber_js_1.default(value.valueOf());\n  return raw;\n}\nexports.decodeBigNumber = decodeBigNumber;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/binaryCodecUtils.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAM,KAAK,GAAG,IAAI,QAAA,CAAA,WAAW,EAAE;AAE/B,SAAgB,oBAAoB,CAAC,MAAc,EAAA;EAC/C,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,YAAA,CAAA,WAAW,EAAE,CAAC;EAC3D,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;EACjC,OAAO,GAAG;AACd;AAJA,OAAA,CAAA,oBAAA,GAAA,oBAAA;AAMA,SAAgB,UAAU,CAAC,MAAc,EAAA;EACrC,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,YAAA,CAAA,WAAW,EAAE,CAAC;EAC3D,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;EAClC,OAAO,GAAG;AACd;AAJA,OAAA,CAAA,UAAA,GAAA,UAAA;AAMA,SAAgB,YAAY,CAAC,MAAc,EAAA;EACvC,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,YAAA,CAAA,SAAS,EAAE,CAAC;EACzD,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;EACjC,OAAO,GAAG;AACd;AAJA,OAAA,CAAA,YAAA,GAAA,YAAA;AAMA,SAAgB,eAAe,CAAC,MAAc,EAAA;EAC1C,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,YAAA,CAAA,WAAW,EAAE,CAAC;EAC3D,IAAI,GAAG,GAAG,IAAI,cAAA,CAAA,OAAS,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;EACxC,OAAO,GAAG;AACd;AAJA,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBigNumber = exports.decodeString = exports.decodeBool = exports.decodeUnsignedNumber = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst typesystem_1 = require(\"../typesystem\");\nconst binary_1 = require(\"./binary\");\nconst Codec = new binary_1.BinaryCodec();\nfunction decodeUnsignedNumber(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n    let raw = Number(value.valueOf());\n    return raw;\n}\nexports.decodeUnsignedNumber = decodeUnsignedNumber;\nfunction decodeBool(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BooleanType());\n    let raw = Boolean(value.valueOf());\n    return raw;\n}\nexports.decodeBool = decodeBool;\nfunction decodeString(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BytesType());\n    let raw = String(value.valueOf());\n    return raw;\n}\nexports.decodeString = decodeString;\nfunction decodeBigNumber(buffer) {\n    let value = Codec.decodeTopLevel(buffer, new typesystem_1.BigUIntType());\n    let raw = new bignumber_js_1.default(value.valueOf());\n    return raw;\n}\nexports.decodeBigNumber = decodeBigNumber;\n//# sourceMappingURL=binaryCodecUtils.js.map"]},"metadata":{},"sourceType":"script"}