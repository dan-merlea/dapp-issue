{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Graphics } from 'pixi.js';\nvar HexagonSprite = /*#__PURE__*/function (_Graphics) {\n  _inherits(HexagonSprite, _Graphics);\n  var _super = _createSuper(HexagonSprite);\n  function HexagonSprite(x, y, radius, borderColor, fillColor, fillAlpha) {\n    var _this;\n    _classCallCheck(this, HexagonSprite);\n    _this = _super.call(this);\n    _this._radius = void 0;\n    _this._radius = radius;\n    _this.x = x;\n    _this.y = y;\n    _this.generatePath(borderColor, fillColor, fillAlpha);\n    return _this;\n  }\n  _createClass(HexagonSprite, [{\n    key: \"generatePath\",\n    value: function generatePath(borderColor, fillColor, fillAlpha) {\n      this.beginFill(fillColor !== null && fillColor !== void 0 ? fillColor : 0x000000, fillAlpha !== null && fillAlpha !== void 0 ? fillAlpha : 0);\n      this.lineStyle({\n        width: 1,\n        color: borderColor,\n        alpha: 1\n      });\n      this.moveTo(0, -this._radius);\n      this.lineTo(this.width / 2, -this._radius / 2);\n      this.lineTo(this.width / 2, this._radius / 2);\n      this.lineTo(0, this._radius);\n      this.lineTo(-this.width / 2, this._radius / 2);\n      this.lineTo(-this.width / 2, -this._radius / 2);\n      this.lineTo(0, -this._radius);\n      this.lineTo(this.width / 2, -this._radius / 2);\n      this.endFill();\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw(borderColor, fillColor, fillAlpha) {\n      this.clear();\n      this.generatePath(borderColor, fillColor, fillAlpha);\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this._radius;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._radius * Math.sqrt(3);\n    }\n  }, {\n    key: \"pos\",\n    set: function set(position) {\n      var x = position.x,\n        y = position.y;\n      this.moveTo(x, y);\n    }\n  }]);\n  return HexagonSprite;\n}(Graphics);\nexport { HexagonSprite as default };","map":{"version":3,"names":["Graphics","HexagonSprite","x","y","radius","borderColor","fillColor","fillAlpha","_radius","generatePath","beginFill","lineStyle","width","color","alpha","moveTo","lineTo","endFill","clear","Math","sqrt","position"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/map/HexagonSprite.ts"],"sourcesContent":["import { Graphics } from 'pixi.js';\n\nexport default class HexagonSprite extends Graphics {\n\n    private _radius: number\n\n    constructor(x: number, y: number, radius: number, borderColor: number, fillColor?: number, fillAlpha?: number) {\n        super()\n        this._radius = radius\n        this.x = x\n        this.y = y\n\n        this.generatePath(borderColor, fillColor, fillAlpha)\n    }\n\n    generatePath(borderColor: number, fillColor?: number, fillAlpha?: number) {\n        this.beginFill(fillColor ?? 0x000000, fillAlpha ?? 0);\n\n        this.lineStyle({\n            width: 1,\n            color: borderColor,\n            alpha: 1,\n        })\n\n        this.moveTo(0, -this._radius)\n        this.lineTo(this.width/2, -this._radius/2)\n        this.lineTo(this.width/2, this._radius/2)\n        this.lineTo(0, this._radius)\n        this.lineTo(-this.width/2, this._radius/2)\n        this.lineTo(-this.width/2, -this._radius/2)\n        this.lineTo(0, -this._radius)\n        this.lineTo(this.width/2, -this._radius/2)\n\n        this.endFill()\n    }\n\n    redraw(borderColor: number, fillColor?: number, fillAlpha?: number) {\n        this.clear()\n        this.generatePath(borderColor, fillColor, fillAlpha)\n    }\n\n    get radius(): number {\n        return this._radius\n    }\n\n    get width(): number {\n        return this._radius * Math.sqrt(3)\n    }\n\n    set pos(position: { x: number; y: number }) {\n        const { x, y } = position\n        this.moveTo(x, y)\n    }\n}\n"],"mappings":";;;;AAAA,SAASA,QAAQ,QAAQ,SAAS;AAAC,IAEdC,aAAa;EAAA;EAAA;EAI9B,uBAAYC,CAAS,EAAEC,CAAS,EAAEC,MAAc,EAAEC,WAAmB,EAAEC,SAAkB,EAAEC,SAAkB,EAAE;IAAA;IAAA;IAC3G;IAAO,MAHHC,OAAO;IAIX,MAAKA,OAAO,GAAGJ,MAAM;IACrB,MAAKF,CAAC,GAAGA,CAAC;IACV,MAAKC,CAAC,GAAGA,CAAC;IAEV,MAAKM,YAAY,CAACJ,WAAW,EAAEC,SAAS,EAAEC,SAAS,CAAC;IAAA;EACxD;EAAC;IAAA;IAAA,OAED,sBAAaF,WAAmB,EAAEC,SAAkB,EAAEC,SAAkB,EAAE;MACtE,IAAI,CAACG,SAAS,CAACJ,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,QAAQ,EAAEC,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,CAAC,CAAC;MAErD,IAAI,CAACI,SAAS,CAAC;QACXC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAER,WAAW;QAClBS,KAAK,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAACP,OAAO,CAAC;MAC7B,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACJ,KAAK,GAAC,CAAC,EAAE,CAAC,IAAI,CAACJ,OAAO,GAAC,CAAC,CAAC;MAC1C,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACJ,KAAK,GAAC,CAAC,EAAE,IAAI,CAACJ,OAAO,GAAC,CAAC,CAAC;MACzC,IAAI,CAACQ,MAAM,CAAC,CAAC,EAAE,IAAI,CAACR,OAAO,CAAC;MAC5B,IAAI,CAACQ,MAAM,CAAC,CAAC,IAAI,CAACJ,KAAK,GAAC,CAAC,EAAE,IAAI,CAACJ,OAAO,GAAC,CAAC,CAAC;MAC1C,IAAI,CAACQ,MAAM,CAAC,CAAC,IAAI,CAACJ,KAAK,GAAC,CAAC,EAAE,CAAC,IAAI,CAACJ,OAAO,GAAC,CAAC,CAAC;MAC3C,IAAI,CAACQ,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAACR,OAAO,CAAC;MAC7B,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACJ,KAAK,GAAC,CAAC,EAAE,CAAC,IAAI,CAACJ,OAAO,GAAC,CAAC,CAAC;MAE1C,IAAI,CAACS,OAAO,EAAE;IAClB;EAAC;IAAA;IAAA,OAED,gBAAOZ,WAAmB,EAAEC,SAAkB,EAAEC,SAAkB,EAAE;MAChE,IAAI,CAACW,KAAK,EAAE;MACZ,IAAI,CAACT,YAAY,CAACJ,WAAW,EAAEC,SAAS,EAAEC,SAAS,CAAC;IACxD;EAAC;IAAA;IAAA,KAED,eAAqB;MACjB,OAAO,IAAI,CAACC,OAAO;IACvB;EAAC;IAAA;IAAA,KAED,eAAoB;MAChB,OAAO,IAAI,CAACA,OAAO,GAAGW,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACtC;EAAC;IAAA;IAAA,KAED,aAAQC,QAAkC,EAAE;MACxC,IAAQnB,CAAC,GAAQmB,QAAQ,CAAjBnB,CAAC;QAAEC,CAAC,GAAKkB,QAAQ,CAAdlB,CAAC;MACZ,IAAI,CAACY,MAAM,CAACb,CAAC,EAAEC,CAAC,CAAC;IACrB;EAAC;EAAA;AAAA,EAlDsCH,QAAQ;AAAA,SAA9BC,aAAa"},"metadata":{},"sourceType":"module"}