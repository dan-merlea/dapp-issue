{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanValue = exports.BooleanType = void 0;\nvar types_1 = require(\"./types\");\nvar BooleanType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(BooleanType, _types_1$PrimitiveTyp);\n  var _super = _createSuper(BooleanType);\n  function BooleanType() {\n    _classCallCheck(this, BooleanType);\n    return _super.call(this, \"bool\");\n  }\n  _createClass(BooleanType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BooleanType.ClassName;\n    }\n  }]);\n  return BooleanType;\n}(types_1.PrimitiveType);\nexports.BooleanType = BooleanType;\nBooleanType.ClassName = \"BooleanType\";\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nvar BooleanValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(BooleanValue, _types_1$PrimitiveVal);\n  var _super2 = _createSuper(BooleanValue);\n  function BooleanValue(value) {\n    var _this;\n    _classCallCheck(this, BooleanValue);\n    _this = _super2.call(this, new BooleanType());\n    _this.value = value;\n    return _this;\n  }\n  _createClass(BooleanValue, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BooleanValue.ClassName;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another BooleanValue\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.value === other.value;\n    }\n  }, {\n    key: \"isTrue\",\n    value: function isTrue() {\n      return this.value === true;\n    }\n  }, {\n    key: \"isFalse\",\n    value: function isFalse() {\n      return !this.isTrue();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }]);\n  return BooleanValue;\n}(types_1.PrimitiveValue);\nexports.BooleanValue = BooleanValue;\nBooleanValue.ClassName = \"BooleanValue\";","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/boolean.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAAwD,IAE3C,WAAY;EAAA;EAAA;EAGrB,uBAAA;IAAA;IAAA,yBACU,MAAM;EAChB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,WAAW,CAAC,SAAS;IAChC;EAAC;EAAA;AAAA,EAT4B,OAAA,CAAA,aAAa;AAA9C,OAAA,CAAA,WAAA,GAAA,WAAA;AACW,WAAA,CAAA,SAAS,GAAG,aAAa;AAWpC;;AAEG;AAFH,IAGa,YAAa;EAAA;EAAA;EAItB,sBAAY,KAAc,EAAA;IAAA;IAAA;IACtB,2BAAM,IAAI,WAAW,EAAE;IACvB,MAAK,KAAK,GAAG,KAAK;IAAC;EACvB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,YAAY,CAAC,SAAS;IACjC;IAEA;;;;AAIG;EAJH;IAAA;IAAA,OAKA,gBAAO,KAAmB,EAAA;MACtB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK;IACrC;EAAC;IAAA;IAAA,OAED,kBAAM;MACF,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI;IAC9B;EAAC;IAAA;IAAA,OAED,mBAAO;MACH,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;IACzB;EAAC;IAAA;IAAA,OAED,mBAAO;MACH,OAAO,IAAI,CAAC,KAAK;IACrB;EAAC;EAAA;AAAA,EAhC6B,OAAA,CAAA,cAAc;AAAhD,OAAA,CAAA,YAAA,GAAA,YAAA;AACW,YAAA,CAAA,SAAS,GAAG,cAAc","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanValue = exports.BooleanType = void 0;\nconst types_1 = require(\"./types\");\nclass BooleanType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"bool\");\n    }\n    getClassName() {\n        return BooleanType.ClassName;\n    }\n}\nexports.BooleanType = BooleanType;\nBooleanType.ClassName = \"BooleanType\";\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nclass BooleanValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new BooleanType());\n        this.value = value;\n    }\n    getClassName() {\n        return BooleanValue.ClassName;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another BooleanValue\n     */\n    equals(other) {\n        return this.value === other.value;\n    }\n    isTrue() {\n        return this.value === true;\n    }\n    isFalse() {\n        return !this.isTrue();\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.BooleanValue = BooleanValue;\nBooleanValue.ClassName = \"BooleanValue\";\n//# sourceMappingURL=boolean.js.map"]},"metadata":{},"sourceType":"script"}