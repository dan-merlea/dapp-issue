{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = exports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n  LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n  LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n  LogLevel[LogLevel[\"None\"] = 5] = \"None\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nvar Logger = /*#__PURE__*/function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n  _createClass(Logger, null, [{\n    key: \"setLevel\",\n    value: function setLevel(logLevel) {\n      Logger.logLevel = logLevel;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(message) {\n      if (Logger.logLevel >= LogLevel.Debug) {\n        return;\n      }\n      for (var _len = arguments.length, optionalParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        optionalParams[_key - 1] = arguments[_key];\n      }\n      console.debug(message, optionalParams);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      if (Logger.logLevel >= LogLevel.Debug) {\n        return;\n      }\n      for (var _len2 = arguments.length, optionalParams = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        optionalParams[_key2 - 1] = arguments[_key2];\n      }\n      console.debug(message, optionalParams);\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      if (Logger.logLevel >= LogLevel.Info) {\n        return;\n      }\n      for (var _len3 = arguments.length, optionalParams = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        optionalParams[_key3 - 1] = arguments[_key3];\n      }\n      console.log(message, optionalParams);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      if (Logger.logLevel >= LogLevel.Warn) {\n        return;\n      }\n      for (var _len4 = arguments.length, optionalParams = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        optionalParams[_key4 - 1] = arguments[_key4];\n      }\n      console.warn(message, optionalParams);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      if (Logger.logLevel >= LogLevel.Error) {\n        return;\n      }\n      for (var _len5 = arguments.length, optionalParams = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        optionalParams[_key5 - 1] = arguments[_key5];\n      }\n      console.error(message, optionalParams);\n    }\n  }]);\n  return Logger;\n}();\nexports.Logger = Logger;\nLogger.logLevel = LogLevel.Debug;","map":{"version":3,"mappings":";;;;;;;;AAAA,IAAYA,QAOX;AAPD,WAAYA,QAAQ;EAChBA,yCAAS;EACTA,yCAAS;EACTA,uCAAQ;EACRA,uCAAQ;EACRA,yCAAS;EACTA,uCAAQ;AACZ,CAAC,EAPWA,QAAQ,GAARC,gBAAQ,KAARA,gBAAQ;AAOnB,IAEYC,MAAM;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAGf,kBAAgBC,QAAkB;MAC9BD,MAAM,CAACC,QAAQ,GAAGA,QAAQ;IAC9B;EAAC;IAAA;IAAA,OAED,eAAaC,OAAa,EAA0B;MAChD,IAAIF,MAAM,CAACC,QAAQ,IAAIH,QAAQ,CAACK,KAAK,EAAE;QACnC;;MACH,kCAH0BC,cAAqB;QAArBA,cAAqB;MAAA;MAKhDC,OAAO,CAACC,KAAK,CAACJ,OAAO,EAAEE,cAAc,CAAC;IAC1C;EAAC;IAAA;IAAA,OAED,eAAaF,OAAa,EAA0B;MAChD,IAAIF,MAAM,CAACC,QAAQ,IAAIH,QAAQ,CAACK,KAAK,EAAE;QACnC;;MACH,mCAH0BC,cAAqB;QAArBA,cAAqB;MAAA;MAKhDC,OAAO,CAACC,KAAK,CAACJ,OAAO,EAAEE,cAAc,CAAC;IAC1C;EAAC;IAAA;IAAA,OAED,cAAYF,OAAa,EAA0B;MAC/C,IAAIF,MAAM,CAACC,QAAQ,IAAIH,QAAQ,CAACS,IAAI,EAAE;QAClC;;MACH,mCAHyBH,cAAqB;QAArBA,cAAqB;MAAA;MAK/CC,OAAO,CAACG,GAAG,CAACN,OAAO,EAAEE,cAAc,CAAC;IACxC;EAAC;IAAA;IAAA,OAED,cAAYF,OAAa,EAA0B;MAC/C,IAAIF,MAAM,CAACC,QAAQ,IAAIH,QAAQ,CAACW,IAAI,EAAE;QAClC;;MACH,mCAHyBL,cAAqB;QAArBA,cAAqB;MAAA;MAK/CC,OAAO,CAACK,IAAI,CAACR,OAAO,EAAEE,cAAc,CAAC;IACzC;EAAC;IAAA;IAAA,OAED,eAAaF,OAAa,EAA0B;MAChD,IAAIF,MAAM,CAACC,QAAQ,IAAIH,QAAQ,CAACa,KAAK,EAAE;QACnC;;MACH,mCAH0BP,cAAqB;QAArBA,cAAqB;MAAA;MAKhDC,OAAO,CAACO,KAAK,CAACV,OAAO,EAAEE,cAAc,CAAC;IAC1C;EAAC;EAAA;AAAA;AA7CLL;AACWC,eAAQ,GAAaF,QAAQ,CAACK,KAAK","names":["LogLevel","exports","Logger","logLevel","message","Debug","optionalParams","console","debug","Info","log","Warn","warn","Error","error"],"sourceRoot":"","sources":["../src/logger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}