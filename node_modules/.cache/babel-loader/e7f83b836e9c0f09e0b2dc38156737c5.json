{"ast":null,"code":"\"use strict\";\n\nvar _construct = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/construct.js\").default;\nvar _toConsumableArray = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tuple = exports.TupleType = void 0;\nvar errors = __importStar(require(\"../../errors\"));\nvar struct_1 = require(\"./struct\");\nvar fields_1 = require(\"./fields\");\nvar struct_2 = require(\"./struct\");\nvar TupleType = /*#__PURE__*/function (_struct_2$StructType) {\n  _inherits(TupleType, _struct_2$StructType);\n  var _super = _createSuper(TupleType);\n  function TupleType() {\n    _classCallCheck(this, TupleType);\n    for (var _len = arguments.length, typeParameters = new Array(_len), _key = 0; _key < _len; _key++) {\n      typeParameters[_key] = arguments[_key];\n    }\n    return _super.call(this, TupleType.prepareName(typeParameters), TupleType.prepareFieldDefinitions(typeParameters));\n  }\n  _createClass(TupleType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return TupleType.ClassName;\n    }\n  }], [{\n    key: \"prepareName\",\n    value: function prepareName(typeParameters) {\n      var fields = typeParameters.map(function (type) {\n        return type.toString();\n      }).join(\", \");\n      var result = \"tuple\".concat(fields.length, \"<\").concat(fields, \">\");\n      return result;\n    }\n  }, {\n    key: \"prepareFieldDefinitions\",\n    value: function prepareFieldDefinitions(typeParameters) {\n      var result = typeParameters.map(function (type, i) {\n        return new fields_1.FieldDefinition(prepareFieldName(i), \"anonymous tuple field\", type);\n      });\n      return result;\n    }\n  }]);\n  return TupleType;\n}(struct_2.StructType);\nexports.TupleType = TupleType;\nTupleType.ClassName = \"TupleType\";\nfunction prepareFieldName(fieldIndex) {\n  return \"field\".concat(fieldIndex);\n}\n// TODO: Perhaps add a common base class for Struct and Tuple, called FieldsHolder?\n// Or let Tuple be the base class, but have Struct as a specialization of it, \"named tuple\"?\n// Or leave as it is?\nvar Tuple = /*#__PURE__*/function (_struct_1$Struct) {\n  _inherits(Tuple, _struct_1$Struct);\n  var _super2 = _createSuper(Tuple);\n  function Tuple(type, fields) {\n    _classCallCheck(this, Tuple);\n    return _super2.call(this, type, fields);\n  }\n  _createClass(Tuple, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return Tuple.ClassName;\n    }\n  }], [{\n    key: \"fromItems\",\n    value: function fromItems(items) {\n      if (items.length < 1) {\n        // TODO: Define a better error.\n        throw new errors.ErrTypingSystem(\"bad tuple items\");\n      }\n      var fieldsTypes = items.map(function (item) {\n        return item.getType();\n      });\n      var tupleType = _construct(TupleType, _toConsumableArray(fieldsTypes));\n      var fields = items.map(function (item, i) {\n        return new fields_1.Field(item, prepareFieldName(i));\n      });\n      return new Tuple(tupleType, fields);\n    }\n  }]);\n  return Tuple;\n}(struct_1.Struct);\nexports.Tuple = Tuple;\nTuple.ClassName = \"Tuple\";","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAsC,IAEzBA,SAAU;EAAA;EAAA;EAGnB,qBAAqC;IAAA;IAAA,kCAAtBC,cAAsB;MAAtBA,cAAsB;IAAA;IAAA,yBAC3BD,SAAS,CAACE,WAAW,CAACD,cAAc,CAAC,EAAED,SAAS,CAACG,uBAAuB,CAACF,cAAc,CAAC;EAClG;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAOD,SAAS,CAACI,SAAS;IAC9B;EAAC;IAAA;IAAA,OAEO,qBAAmBH,cAAsB;MAC7C,IAAII,MAAM,GAAWJ,cAAc,CAACK,GAAG,CAAC,cAAI;QAAA,OAAIC,IAAI,CAACC,QAAQ,EAAE;MAAA,EAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC3E,IAAIC,MAAM,kBAAWL,MAAM,CAACM,MAAM,cAAIN,MAAM,MAAG;MAC/C,OAAOK,MAAM;IACjB;EAAC;IAAA;IAAA,OAEO,iCAA+BT,cAAsB;MACzD,IAAIS,MAAM,GAAGT,cAAc,CAACK,GAAG,CAAC,UAACC,IAAI,EAAEK,CAAC;QAAA,OAAK,IAAIC,wBAAe,CAACC,gBAAgB,CAACF,CAAC,CAAC,EAAE,uBAAuB,EAAEL,IAAI,CAAC;MAAA,EAAC;MACrH,OAAOG,MAAM;IACjB;EAAC;EAAA;AAAA,EApB0BK,mBAAU;AAAzCC;AACWhB,mBAAS,GAAG,WAAW;AAsBlC,SAASc,gBAAgB,CAACG,UAAkB;EACxC,sBAAeA,UAAU;AAC7B;AAEA;AACA;AACA;AAAA,IACaC,KAAM;EAAA;EAAA;EAGf,eAAYX,IAAe,EAAEF,MAAe;IAAA;IAAA,0BAClCE,IAAI,EAAEF,MAAM;EACtB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAOa,KAAK,CAACd,SAAS;IAC1B;EAAC;IAAA;IAAA,OAED,mBAAiBe,KAAmB;MAChC,IAAIA,KAAK,CAACR,MAAM,GAAG,CAAC,EAAE;QAClB;QACA,MAAM,IAAIS,MAAM,CAACC,eAAe,CAAC,iBAAiB,CAAC;;MAGvD,IAAIC,WAAW,GAAGH,KAAK,CAACb,GAAG,CAAC,cAAI;QAAA,OAAIiB,IAAI,CAACC,OAAO,EAAE;MAAA,EAAC;MACnD,IAAIC,SAAS,cAAOzB,SAAS,qBAAIsB,WAAW,EAAC;MAC7C,IAAIjB,MAAM,GAAGc,KAAK,CAACb,GAAG,CAAC,UAACiB,IAAI,EAAEX,CAAC;QAAA,OAAK,IAAIC,cAAK,CAACU,IAAI,EAAET,gBAAgB,CAACF,CAAC,CAAC,CAAC;MAAA,EAAC;MAEzE,OAAO,IAAIM,KAAK,CAACO,SAAS,EAAEpB,MAAM,CAAC;IACvC;EAAC;EAAA;AAAA,EAtBsBqB,eAAM;AAAjCV;AACWE,eAAS,GAAG,OAAO","names":["TupleType","typeParameters","prepareName","prepareFieldDefinitions","ClassName","fields","map","type","toString","join","result","length","i","fields_1","prepareFieldName","struct_2","exports","fieldIndex","Tuple","items","errors","ErrTypingSystem","fieldsTypes","item","getType","tupleType","struct_1"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/tuple.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}