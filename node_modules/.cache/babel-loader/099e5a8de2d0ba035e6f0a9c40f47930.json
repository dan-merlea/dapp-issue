{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = void 0;\nvar Watch = /*#__PURE__*/function () {\n  function Watch() {\n    _classCallCheck(this, Watch);\n    this.timestamps = new Map();\n  }\n  _createClass(Watch, [{\n    key: \"start\",\n    value: function start(label) {\n      if (this.timestamps.has(label)) {\n        throw new Error(\"Watch already started for label: \".concat(label));\n      }\n      this.timestamps.set(label, {\n        started: Date.now()\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(label) {\n      var timestamp = this.get(label);\n      if (typeof timestamp.elapsed !== \"undefined\") {\n        throw new Error(\"Watch already stopped for label: \".concat(label));\n      }\n      var elapsed = Date.now() - timestamp.started;\n      this.timestamps.set(label, {\n        started: timestamp.started,\n        elapsed: elapsed\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(label) {\n      var timestamp = this.timestamps.get(label);\n      if (typeof timestamp === \"undefined\") {\n        throw new Error(\"No timestamp found for label: \".concat(label));\n      }\n      return timestamp;\n    }\n  }, {\n    key: \"elapsed\",\n    value: function elapsed(label) {\n      var timestamp = this.get(label);\n      var elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n      return elapsed;\n    }\n  }]);\n  return Watch;\n}();\nexports.Watch = Watch;\nexports.default = Watch;","map":{"version":3,"sources":["../../src/watch.ts"],"names":[],"mappings":";;;;;;;;IAEa,KAAK;EAAlB,iBAAA;IAAA;IACS,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAyB;EA+BtD;EAAC;IAAA;IAAA,OA7BQ,eAAM,KAAa,EAAA;MACxB,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAC9B,MAAM,IAAI,KAAK,4CAAqC,KAAK,EAAG;MAC7D;MACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE;QAAE,OAAO,EAAE,IAAI,CAAC,GAAG;MAAE,CAAE,CAAC;IACrD;EAAC;IAAA;IAAA,OAEM,cAAK,KAAa,EAAA;MACvB,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;MACjC,IAAI,OAAO,SAAS,CAAC,OAAO,KAAK,WAAW,EAAE;QAC5C,MAAM,IAAI,KAAK,4CAAqC,KAAK,EAAG;MAC7D;MACD,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,OAAO;MAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE;QAAE,OAAO,EAAE,SAAS,CAAC,OAAO;QAAE,OAAO,EAAP;MAAO,CAAE,CAAC;IACrE;EAAC;IAAA;IAAA,OAEM,aAAI,KAAa,EAAA;MACtB,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;MAC5C,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;QACpC,MAAM,IAAI,KAAK,yCAAkC,KAAK,EAAG;MAC1D;MACD,OAAO,SAAS;IAClB;EAAC;IAAA;IAAA,OAEM,iBAAQ,KAAa,EAAA;MAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;MACjC,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,OAAO;MACnE,OAAO,OAAO;IAChB;EAAC;EAAA;AAAA;AA/BH,OAAA,CAAA,KAAA,GAAA,KAAA;AAkCA,OAAA,CAAA,OAAA,GAAe,KAAK","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Watch = void 0;\nclass Watch {\n    constructor() {\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, { started: Date.now() });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, { started: timestamp.started, elapsed });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports.default = Watch;\n//# sourceMappingURL=watch.js.map"]},"metadata":{},"sourceType":"script"}