{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\nvar address_1 = require(\"./address\");\n/**\n * An abstraction representing an account (user or Smart Contract) on the Network.\n */\nvar Account = /*#__PURE__*/function () {\n  /**\n   * Creates an account object from an address\n   */\n  function Account(address) {\n    _classCallCheck(this, Account);\n    /**\n     * The address of the account.\n     */\n    this.address = new address_1.Address();\n    /**\n     * The nonce of the account (the account sequence number).\n     */\n    this.nonce = 0;\n    /**\n     * The balance of the account.\n     */\n    this.balance = \"0\";\n    this.address = address;\n  }\n  /**\n   * Updates account properties (such as nonce, balance).\n   */\n  _createClass(Account, [{\n    key: \"update\",\n    value: function update(obj) {\n      this.nonce = obj.nonce;\n      this.balance = obj.balance;\n    }\n    /**\n     * Increments (locally) the nonce (the account sequence number).\n     */\n  }, {\n    key: \"incrementNonce\",\n    value: function incrementNonce() {\n      this.nonce = this.nonce.valueOf() + 1;\n    }\n    /**\n     * Gets then increments (locally) the nonce (the account sequence number).\n     */\n  }, {\n    key: \"getNonceThenIncrement\",\n    value: function getNonceThenIncrement() {\n      var nonce = this.nonce;\n      this.nonce = this.nonce.valueOf() + 1;\n      return nonce;\n    }\n    /**\n     * Converts the account to a pretty, plain JavaScript object.\n     */\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        address: this.address.bech32(),\n        nonce: this.nonce.valueOf(),\n        balance: this.balance.toString()\n      };\n    }\n  }]);\n  return Account;\n}();\nexports.Account = Account;","map":{"version":3,"mappings":";;;;;;;;AAAA;AAGA;;;AAAA,IAGaA,OAAO;EAgBhB;;;EAGA,iBAAYC,OAAiB;IAAA;IAlB7B;;;IAGS,YAAO,GAAa,IAAIC,iBAAO,EAAE;IAE1C;;;IAGA,UAAK,GAAW,CAAC;IAEjB;;;IAGA,YAAO,GAAoB,GAAG;IAM1B,IAAI,CAACD,OAAO,GAAGA,OAAO;EAC1B;EAEA;;;EAAA;IAAA;IAAA,OAGA,gBAAOE,GAA+C;MAClD,IAAI,CAACC,KAAK,GAAGD,GAAG,CAACC,KAAK;MACtB,IAAI,CAACC,OAAO,GAAGF,GAAG,CAACE,OAAO;IAC9B;IAEA;;;EAAA;IAAA;IAAA,OAGA,0BAAc;MACV,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACE,OAAO,EAAE,GAAG,CAAC;IACzC;IAEA;;;EAAA;IAAA;IAAA,OAGA,iCAAqB;MACjB,IAAIF,KAAK,GAAG,IAAI,CAACA,KAAK;MACtB,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,CAACE,OAAO,EAAE,GAAG,CAAC;MACrC,OAAOF,KAAK;IAChB;IAEA;;;EAAA;IAAA;IAAA,OAGA,kBAAM;MACF,OAAO;QACHH,OAAO,EAAE,IAAI,CAACA,OAAO,CAACM,MAAM,EAAE;QAC9BH,KAAK,EAAE,IAAI,CAACA,KAAK,CAACE,OAAO,EAAE;QAC3BD,OAAO,EAAE,IAAI,CAACA,OAAO,CAACG,QAAQ;OACjC;IACL;EAAC;EAAA;AAAA;AAxDLC","names":["Account","address","address_1","obj","nonce","balance","valueOf","bech32","toString","exports"],"sourceRoot":"","sources":["../src/account.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}