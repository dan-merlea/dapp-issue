{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionEventTopic = exports.TransactionEvent = void 0;\nvar primitives_1 = require(\"./primitives\");\nvar TransactionEvent = /*#__PURE__*/function () {\n  function TransactionEvent(init) {\n    _classCallCheck(this, TransactionEvent);\n    this.address = new primitives_1.Address(\"\");\n    this.identifier = \"\";\n    this.topics = [];\n    this.data = \"\";\n    Object.assign(this, init);\n  }\n  _createClass(TransactionEvent, [{\n    key: \"findFirstOrNoneTopic\",\n    value: function findFirstOrNoneTopic(predicate) {\n      return this.topics.filter(function (topic) {\n        return predicate(topic);\n      })[0];\n    }\n  }, {\n    key: \"getLastTopic\",\n    value: function getLastTopic() {\n      return this.topics[this.topics.length - 1];\n    }\n  }], [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(responsePart) {\n      var result = new TransactionEvent();\n      result.address = new primitives_1.Address(responsePart.address);\n      result.identifier = responsePart.identifier || \"\";\n      result.topics = (responsePart.topics || []).map(function (topic) {\n        return new TransactionEventTopic(topic);\n      });\n      result.data = Buffer.from(responsePart.data || \"\", \"base64\").toString();\n      return result;\n    }\n  }]);\n  return TransactionEvent;\n}();\nexports.TransactionEvent = TransactionEvent;\nvar TransactionEventTopic = /*#__PURE__*/function () {\n  function TransactionEventTopic(topic) {\n    _classCallCheck(this, TransactionEventTopic);\n    this.raw = Buffer.from(topic || \"\", \"base64\");\n  }\n  _createClass(TransactionEventTopic, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.raw.toString(\"utf8\");\n    }\n  }, {\n    key: \"hex\",\n    value: function hex() {\n      return this.raw.toString(\"hex\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.raw;\n    }\n  }]);\n  return TransactionEventTopic;\n}();\nexports.TransactionEventTopic = TransactionEventTopic;","map":null,"metadata":{},"sourceType":"script"}