{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SystemRandomSource = void 0;\nvar browser_1 = require(\"./browser\");\nvar node_1 = require(\"./node\");\nvar SystemRandomSource = /*#__PURE__*/function () {\n  function SystemRandomSource() {\n    _classCallCheck(this, SystemRandomSource);\n    this.isAvailable = false;\n    this.name = \"\";\n    // Try browser.\n    this._source = new browser_1.BrowserRandomSource();\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Browser\";\n      return;\n    }\n    // If no browser source, try Node.\n    this._source = new node_1.NodeRandomSource();\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Node\";\n      return;\n    }\n    // No sources, we're out of options.\n  }\n  _createClass(SystemRandomSource, [{\n    key: \"randomBytes\",\n    value: function randomBytes(length) {\n      if (!this.isAvailable) {\n        throw new Error(\"System random byte generator is not available.\");\n      }\n      return this._source.randomBytes(length);\n    }\n  }]);\n  return SystemRandomSource;\n}();\nexports.SystemRandomSource = SystemRandomSource;","map":{"version":3,"sources":["../../source/system.ts"],"names":[],"mappings":";;AAAA;AACA;AAAA;AAAA;;;;;AAGA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAA0C,IAE7B,kBAAkB;EAK3B,8BAAA;IAAA;IAJA,IAAA,CAAA,WAAW,GAAG,KAAK;IACnB,IAAA,CAAA,IAAI,GAAG,EAAE;IAIL;IACA,IAAI,CAAC,OAAO,GAAG,IAAI,SAAA,CAAA,mBAAmB,EAAE;IACxC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;MAC1B,IAAI,CAAC,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC,IAAI,GAAG,SAAS;MACrB;IACH;IAED;IACA,IAAI,CAAC,OAAO,GAAG,IAAI,MAAA,CAAA,gBAAgB,EAAE;IACrC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;MAC1B,IAAI,CAAC,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC,IAAI,GAAG,MAAM;MAClB;IACH;IAED;EACJ;EAAC;IAAA;IAAA,OAED,qBAAY,MAAc,EAAA;MACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;MACpE;MACD,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;IAC3C;EAAC;EAAA;AAAA;AA9BL,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemRandomSource = void 0;\nconst browser_1 = require(\"./browser\");\nconst node_1 = require(\"./node\");\nclass SystemRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.name = \"\";\n        // Try browser.\n        this._source = new browser_1.BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n        // If no browser source, try Node.\n        this._source = new node_1.NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n        // No sources, we're out of options.\n    }\n    randomBytes(length) {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\nexports.SystemRandomSource = SystemRandomSource;\n//# sourceMappingURL=system.js.map"]},"metadata":{},"sourceType":"script"}