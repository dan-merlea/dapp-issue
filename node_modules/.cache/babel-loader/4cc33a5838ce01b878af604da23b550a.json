{"ast":null,"code":"import _toConsumableArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { a as f } from \"./chunk-JBJD3IUJ.js\";\nimport { a as B } from \"./chunk-QFTWB3KE.js\";\nimport { e as O, f as P, r as A, s as R } from \"./chunk-HEFMRSX3.js\";\nimport { m as I } from \"./chunk-HBP5N4FR.js\";\nI();\nR();\nimport { TokenPayment as S } from \"@elrondnetwork/erdjs\";\nimport r from \"bignumber.js\";\nr.config({\n  ROUNDING_MODE: r.ROUND_FLOOR\n});\nfunction _(_ref) {\n  var i = _ref.input,\n    _ref$decimals = _ref.decimals,\n    w = _ref$decimals === void 0 ? O : _ref$decimals,\n    _ref$digits = _ref.digits,\n    t = _ref$digits === void 0 ? P : _ref$digits,\n    _ref$showLastNonZeroD = _ref.showLastNonZeroDecimal,\n    o = _ref$showLastNonZeroD === void 0 ? !0 : _ref$showLastNonZeroD,\n    _ref$showIsLessThanDe = _ref.showIsLessThanDecimalsLabel,\n    v = _ref$showIsLessThanDe === void 0 ? !1 : _ref$showIsLessThanDe,\n    _ref$addCommas = _ref.addCommas,\n    T = _ref$addCommas === void 0 ? !1 : _ref$addCommas;\n  if (!B(i, !1)) throw new Error(\"Invalid input\");\n  var h = new r(i).isNegative(),\n    c = i;\n  return h && (c = i.substring(1)), f(c).then(function () {\n    return S.fungibleFromBigInteger(\"\", c, w).toRationalNumber();\n  }).then(function (u) {\n    var g = new r(u);\n    if (g.isZero()) return A;\n    var b = g.toString(10),\n      _b$split = b.split(\".\"),\n      _b$split2 = _slicedToArray(_b$split, 2),\n      y = _b$split2[0],\n      n = _b$split2[1],\n      d = new r(n || 0),\n      p = f(0).if(Boolean(n && o)).then(function () {\n        return Math.max(n.length, t);\n      }).if(d.isZero() && !o).then(0).if(Boolean(n && !o)).then(function () {\n        return Math.min(n.length, t);\n      }).valueOf(),\n      $ = n && t >= 1 && t <= n.length && d.isGreaterThan(0) && new r(n.substring(0, t)).isZero(),\n      E = g.toFormat(p);\n    return f(b).if(T).then(E).if(Boolean($)).then(function (s) {\n      var a = new r(y).isZero(),\n        _s$split = s.split(\".\"),\n        _s$split2 = _slicedToArray(_s$split, 2),\n        e = _s$split2[0],\n        l = _s$split2[1],\n        m = new Array(t - 1).fill(0),\n        F = [].concat(_toConsumableArray(m), [0]).join(\"\"),\n        N = [].concat(_toConsumableArray(m), [1]).join(\"\");\n      return a ? v ? \"<\".concat(e, \".\").concat(N) : o ? \"\".concat(e, \".\").concat(l) : e : \"\".concat(e, \".\").concat(F);\n    }).if(Boolean(!$ && n)).then(function (s) {\n      var _s$split3 = s.split(\".\"),\n        _s$split4 = _slicedToArray(_s$split3, 1),\n        a = _s$split4[0],\n        e = n.substring(0, p);\n      if (o) {\n        var l = t - e.length;\n        if (l > 0) {\n          var m = Array(l).fill(0).join(\"\");\n          return e = \"\".concat(e).concat(m), \"\".concat(a, \".\").concat(e);\n        }\n        return s;\n      }\n      return e ? \"\".concat(a, \".\").concat(e) : a;\n    }).valueOf();\n  }).if(h).then(function (u) {\n    return \"-\".concat(u);\n  }).valueOf();\n}\nexport { _ as a };","map":null,"metadata":{},"sourceType":"module"}