{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionPayload = void 0;\nvar transactionPayloadBuilders_1 = require(\"./smartcontracts/transactionPayloadBuilders\");\n/**\n * The \"data\" field of a {@link Transaction}, as an immutable object.\n */\nvar TransactionPayload = /*#__PURE__*/function () {\n  /**\n   * Creates a TransactionPayload from a utf-8 string or from a buffer.\n   */\n  function TransactionPayload(data) {\n    _classCallCheck(this, TransactionPayload);\n    this.data = Buffer.from(data || []);\n  }\n  /**\n   * Creates a TransactionPayload from a base-64 encoded string.\n   */\n  _createClass(TransactionPayload, [{\n    key: \"isEmpty\",\n    value:\n    /**\n     * Returns whether the \"data\" is void.\n     */\n    function isEmpty() {\n      return this.data.length == 0;\n    }\n    /**\n     * Returns the base-64 representation of the data.\n     */\n  }, {\n    key: \"encoded\",\n    value: function encoded() {\n      return this.data.toString(\"base64\");\n    }\n    /**\n     * Returns the data as a buffer.\n     */\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.data;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.data.toString();\n    }\n  }, {\n    key: \"getEncodedArguments\",\n    value: function getEncodedArguments() {\n      return this.toString().split(\"@\");\n    }\n  }, {\n    key: \"getRawArguments\",\n    value: function getRawArguments() {\n      return this.getEncodedArguments().map(function (argument) {\n        return Buffer.from(argument, \"hex\");\n      });\n    }\n    /**\n     * Returns the length of the data.\n     */\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Buffer.from(this.data).length;\n    }\n    /**\n     * Returns a new builder, to be used for contract deploy transactions.\n     */\n  }], [{\n    key: \"fromEncoded\",\n    value: function fromEncoded(encoded) {\n      if (!encoded) {\n        return new TransactionPayload(\"\");\n      }\n      var decoded = Buffer.from(encoded, \"base64\").toString();\n      return new TransactionPayload(decoded);\n    }\n  }, {\n    key: \"contractDeploy\",\n    value: function contractDeploy() {\n      return new transactionPayloadBuilders_1.ContractDeployPayloadBuilder();\n    }\n    /**\n     * Returns a new builder, to be used for contract upgrade transactions.\n     */\n  }, {\n    key: \"contractUpgrade\",\n    value: function contractUpgrade() {\n      return new transactionPayloadBuilders_1.ContractUpgradePayloadBuilder();\n    }\n    /**\n     * Returns a new builder, to be used for contract call transactions.\n     */\n  }, {\n    key: \"contractCall\",\n    value: function contractCall() {\n      return new transactionPayloadBuilders_1.ContractCallPayloadBuilder();\n    }\n  }]);\n  return TransactionPayload;\n}();\nexports.TransactionPayload = TransactionPayload;","map":{"version":3,"mappings":";;;;;;;;AAAA;AAEA;;;AAAA,IAGaA,kBAAkB;EAG3B;;;EAGA,4BAAYC,IAAsB;IAAA;IAC9B,IAAI,CAACA,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACF,IAAI,IAAI,EAAE,CAAC;EACvC;EAEA;;;EAAA;IAAA;IAAA;IAYA;;;IAGA,mBAAO;MACH,OAAO,IAAI,CAACA,IAAI,CAACG,MAAM,IAAI,CAAC;IAChC;IAEA;;;EAAA;IAAA;IAAA,OAGA,mBAAO;MACH,OAAO,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,QAAQ,CAAC;IACvC;IAEA;;;EAAA;IAAA;IAAA,OAGA,mBAAO;MACH,OAAO,IAAI,CAACJ,IAAI;IACpB;EAAC;IAAA;IAAA,OAED,oBAAQ;MACJ,OAAO,IAAI,CAACA,IAAI,CAACI,QAAQ,EAAE;IAC/B;EAAC;IAAA;IAAA,OAED,+BAAmB;MACf,OAAO,IAAI,CAACA,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;IACrC;EAAC;IAAA;IAAA,OAED,2BAAe;MACX,OAAO,IAAI,CAACC,mBAAmB,EAAE,CAACC,GAAG,CAAC,kBAAQ;QAAA,OAAIN,MAAM,CAACC,IAAI,CAACM,QAAQ,EAAE,KAAK,CAAC;MAAA,EAAC;IACnF;IAEA;;;EAAA;IAAA;IAAA,OAGA,kBAAM;MACF,OAAOP,MAAM,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,MAAM;IACxC;IAEA;;;EAAA;IAAA;IAAA,OAjDA,qBAAmBM,OAAgB;MAC/B,IAAI,CAACA,OAAO,EAAE;QACV,OAAO,IAAIV,kBAAkB,CAAC,EAAE,CAAC;;MAGrC,IAAIW,OAAO,GAAGT,MAAM,CAACC,IAAI,CAACO,OAAO,EAAE,QAAQ,CAAC,CAACL,QAAQ,EAAE;MACvD,OAAO,IAAIL,kBAAkB,CAACW,OAAO,CAAC;IAC1C;EAAC;IAAA;IAAA,OA6CD,0BAAqB;MACjB,OAAO,IAAIC,yDAA4B,EAAE;IAC7C;IAEA;;;EAAA;IAAA;IAAA,OAGA,2BAAsB;MAClB,OAAO,IAAIA,0DAA6B,EAAE;IAC9C;IAEA;;;EAAA;IAAA;IAAA,OAGA,wBAAmB;MACf,OAAO,IAAIA,uDAA0B,EAAE;IAC3C;EAAC;EAAA;AAAA;AAjFLC","names":["TransactionPayload","data","Buffer","from","length","toString","split","getEncodedArguments","map","argument","encoded","decoded","transactionPayloadBuilders_1","exports"],"sourceRoot":"","sources":["../src/transactionPayload.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}