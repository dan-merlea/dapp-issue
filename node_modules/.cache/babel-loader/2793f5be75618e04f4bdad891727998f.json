{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringBinaryCodec = void 0;\nvar typesystem_1 = require(\"../typesystem\");\nvar bytes_1 = require(\"../typesystem/bytes\");\nvar bytes_2 = require(\"./bytes\");\nvar StringBinaryCodec = /*#__PURE__*/function () {\n  function StringBinaryCodec() {\n    _classCallCheck(this, StringBinaryCodec);\n    this.bytesBinaryCodec = new bytes_2.BytesBinaryCodec();\n  }\n  _createClass(StringBinaryCodec, [{\n    key: \"decodeNested\",\n    value: function decodeNested(buffer) {\n      var _this$bytesBinaryCode = this.bytesBinaryCodec.decodeNested(buffer),\n        _this$bytesBinaryCode2 = _slicedToArray(_this$bytesBinaryCode, 2),\n        decoded = _this$bytesBinaryCode2[0],\n        length = _this$bytesBinaryCode2[1];\n      var decodedAsString = new typesystem_1.StringValue(decoded.valueOf().toString());\n      return [decodedAsString, length];\n    }\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer) {\n      return new typesystem_1.StringValue(buffer.toString());\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(value) {\n      var valueAsBytes = bytes_1.BytesValue.fromUTF8(value.valueOf());\n      return this.bytesBinaryCodec.encodeNested(valueAsBytes);\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(value) {\n      return Buffer.from(value.valueOf());\n    }\n  }]);\n  return StringBinaryCodec;\n}();\nexports.StringBinaryCodec = StringBinaryCodec;","map":null,"metadata":{},"sourceType":"script"}