{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { Address, Code, ContractFunction, SmartContract, TransactionPayload } from '@elrondnetwork/erdjs/out';\nimport { quickDenominate } from './denominate';\nexport var NetworkConfig = /*#__PURE__*/_createClass(function NetworkConfig(chainId) {\n  _classCallCheck(this, NetworkConfig);\n  this.chainId = void 0;\n  this.chainId = chainId;\n});\nexport var AccountType = /*#__PURE__*/function () {\n  function AccountType(address) {\n    var balance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var nonce = arguments.length > 2 ? arguments[2] : undefined;\n    _classCallCheck(this, AccountType);\n    this.balance = void 0;\n    this.nonce = void 0;\n    this.address = void 0;\n    this.balance = balance;\n    this.nonce = nonce;\n    this.address = address;\n  }\n  _createClass(AccountType, [{\n    key: \"getNonceThenIncrement\",\n    value: function getNonceThenIncrement() {\n      var old = this.nonce;\n      this.nonce++;\n      return old;\n    }\n  }, {\n    key: \"reload\",\n    value: function () {\n      var _reload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(proxy) {\n        var account;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return proxy.getAccount(new Address(this.address));\n              case 2:\n                account = _context.sent;\n                this.nonce = account.nonce;\n                this.balance = quickDenominate(account.balance.toString(), 3);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function reload(_x) {\n        return _reload.apply(this, arguments);\n      }\n      return reload;\n    }()\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new AccountType('..', '0', 0);\n    }\n  }]);\n  return AccountType;\n}();\nexport var DelegationTransactionType = /*#__PURE__*/function () {\n  function DelegationTransactionType() {\n    var receiver = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 ? arguments[2] : undefined;\n    var args = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    var gasMultiplier = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    _classCallCheck(this, DelegationTransactionType);\n    this.value = void 0;\n    this.type = void 0;\n    this.chainId = void 0;\n    this.receiver = void 0;\n    this.args = void 0;\n    this.multiplier = void 0;\n    this.value = value;\n    this.type = type;\n    this.args = args;\n    this.chainId = '1';\n    this.receiver = receiver;\n    this.multiplier = gasMultiplier;\n  }\n  _createClass(DelegationTransactionType, [{\n    key: \"getData\",\n    value: function getData() {\n      var data = this.type;\n      if (this.args !== '') {\n        data = data + '@' + this.args;\n      }\n      return data;\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload() {\n      var funcName = this.type;\n      if (this.args !== '') {\n        funcName = funcName + '@' + this.args;\n      }\n      var func = new ContractFunction(funcName);\n      return TransactionPayload.contractCall().setFunction(func).build();\n    }\n  }]);\n  return DelegationTransactionType;\n}();\nexport var UpgradeTransactionType = /*#__PURE__*/function () {\n  /**\n   * @param receiver string address\n   * @param initialArgs TypedValue[]\n   * @param code use static loadCode\n   * @param codeMetadata new CodeMetadata(true, false, true, true)\n   */\n  function UpgradeTransactionType() {\n    var receiver = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var initialArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var code = arguments.length > 2 ? arguments[2] : undefined;\n    var codeMetadata = arguments.length > 3 ? arguments[3] : undefined;\n    _classCallCheck(this, UpgradeTransactionType);\n    this.chainId = void 0;\n    this.receiver = void 0;\n    this.codeMetadata = void 0;\n    this.initialArgs = void 0;\n    this.code = void 0;\n    this.initialArgs = initialArgs;\n    this.chainId = '1';\n    this.receiver = receiver;\n    this.code = code;\n    this.codeMetadata = codeMetadata;\n  }\n  _createClass(UpgradeTransactionType, [{\n    key: \"getPayload\",\n    value: function () {\n      var _getPayload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", TransactionPayload.contractUpgrade().setCode(this.code).setCodeMetadata(this.codeMetadata).setInitArgs(this.initialArgs).build());\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getPayload() {\n        return _getPayload.apply(this, arguments);\n      }\n      return getPayload;\n    }()\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction() {\n      var smartContract = new SmartContract({\n        address: new Address(this.receiver)\n      });\n      return smartContract.upgrade({\n        code: this.code,\n        codeMetadata: this.codeMetadata,\n        initArguments: this.initialArgs,\n        gasLimit: 100000000,\n        chainID: this.chainId\n      });\n    }\n  }], [{\n    key: \"loadCode\",\n    value: function () {\n      var _loadCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(path) {\n        var file, buffer;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(path);\n              case 2:\n                file = _context3.sent;\n                _context3.t0 = Buffer;\n                _context3.next = 6;\n                return file.arrayBuffer();\n              case 6:\n                _context3.t1 = _context3.sent;\n                buffer = _context3.t0.from.call(_context3.t0, _context3.t1);\n                return _context3.abrupt(\"return\", Code.fromBuffer(buffer));\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      function loadCode(_x2) {\n        return _loadCode.apply(this, arguments);\n      }\n      return loadCode;\n    }()\n  }]);\n  return UpgradeTransactionType;\n}();","map":{"version":3,"names":["Address","Code","ContractFunction","SmartContract","TransactionPayload","quickDenominate","NetworkConfig","chainId","AccountType","address","balance","nonce","old","proxy","getAccount","account","toString","DelegationTransactionType","receiver","value","type","args","gasMultiplier","multiplier","data","funcName","func","contractCall","setFunction","build","UpgradeTransactionType","initialArgs","code","codeMetadata","contractUpgrade","setCode","setCodeMetadata","setInitArgs","smartContract","upgrade","initArguments","gasLimit","chainID","path","fetch","file","Buffer","arrayBuffer","buffer","from","fromBuffer"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/core/helpers/types.ts"],"sourcesContent":["import {\n\tAddress, Code, CodeMetadata, ContractFunction, SmartContract,\n\tTransaction, TransactionPayload, TypedValue\n} from '@elrondnetwork/erdjs/out';\nimport { ProxyNetworkProvider } from '@elrondnetwork/erdjs-network-providers/out';\nimport { quickDenominate } from './denominate';\n\n\nexport interface IAccountType {\n\taddress: string;\n\tbalance: string;\n\tnonce: number;\n\tcode?: string;\n}\n\nexport interface DelegationContractType {\n\tname: string;\n\tgasLimit: number;\n\tdata: string;\n}\n\nexport class NetworkConfig {\n\tchainId: string;\n\tpublic constructor(\n\t\tchainId: string\n\t) {\n\t\tthis.chainId = chainId;\n\t}\n}\n\nexport class AccountType {\n\tbalance: string;\n\tnonce: number;\n\taddress: string;\n\tpublic constructor(address: string, balance = '', nonce: number) {\n\t\tthis.balance = balance;\n\t\tthis.nonce = nonce;\n\t\tthis.address = address;\n\t}\n\n\tgetNonceThenIncrement(): number {\n\t\tconst old = this.nonce\n\t\tthis.nonce++\n\t\treturn old;\n\t}\n\n\tasync reload(proxy: ProxyNetworkProvider) {\n\t\tconst account = await proxy.getAccount(new Address(this.address))\n\t\tthis.nonce = account.nonce\n\t\tthis.balance = quickDenominate(account.balance.toString(), 3)\n\t}\n\n\tstatic empty() {\n\t\treturn new AccountType('..', '0', 0)\n\t}\n}\n\nexport class DelegationTransactionType {\n\tvalue: string;\n\ttype: string;\n\tchainId: string;\n\treceiver: string;\n\targs: string;\n\tmultiplier: number;\n\n\tpublic constructor(\n\t\treceiver = '',\n\t\tvalue = '',\n\t\ttype: string,\n\t\targs = '',\n\t\tgasMultiplier = 1,\n\t) {\n\t\tthis.value = value;\n\t\tthis.type = type;\n\t\tthis.args = args;\n\t\tthis.chainId = '1';\n\t\tthis.receiver = receiver;\n\t\tthis.multiplier = gasMultiplier;\n\t}\n\n\tgetData(): string {\n\t\tlet data = this.type;\n\t\tif (this.args !== '') {\n\t\t\tdata = data + '@' + this.args\n\t\t}\n\t\treturn data\n\t}\n\n\tgetPayload() {\n\t\tlet funcName = this.type;\n\t\tif (this.args !== '') {\n\t\t\tfuncName = funcName + '@' + this.args\n\t\t}\n\t\tconst func = new ContractFunction(funcName);\n\t\treturn TransactionPayload.contractCall()\n\t\t\t.setFunction(func)\n\t\t\t.build();\n\t}\n}\n\nexport class UpgradeTransactionType {\n\tchainId: string;\n\treceiver: string;\n\tcodeMetadata: CodeMetadata;\n\tinitialArgs: TypedValue[];\n\tcode: Code;\n\n\t/**\n\t * @param receiver string address\n\t * @param initialArgs TypedValue[]\n\t * @param code use static loadCode\n\t * @param codeMetadata new CodeMetadata(true, false, true, true)\n\t */\n\tpublic constructor(\n\t\treceiver = '',\n\t\tinitialArgs = [] as TypedValue[],\n\t\tcode: Code,\n\t\tcodeMetadata: CodeMetadata,\n\t) {\n\t\tthis.initialArgs = initialArgs;\n\t\tthis.chainId = '1';\n\t\tthis.receiver = receiver;\n\t\tthis.code = code;\n\t\tthis.codeMetadata = codeMetadata;\n\t}\n\n\tstatic async loadCode(path: string): Promise<Code> {\n\t\tconst file = await fetch(path)\n\t\tconst buffer = Buffer.from(await file.arrayBuffer())\n\t\treturn Code.fromBuffer(buffer)\n\t}\n\n\tasync getPayload() {\n\t\treturn TransactionPayload.contractUpgrade()\n\t\t\t.setCode(this.code)\n\t\t\t.setCodeMetadata(this.codeMetadata)\n\t\t\t.setInitArgs(this.initialArgs)\n\t\t\t.build();\n\t}\n\n\tgetTransaction(): Transaction {\n\t\tconst smartContract = new SmartContract({\n\t\t\taddress: new Address(this.receiver)\n\t\t})\n\t\treturn smartContract.upgrade({\n\t\t\tcode: this.code,\n\t\t\tcodeMetadata: this.codeMetadata,\n\t\t\tinitArguments: this.initialArgs,\n\t\t\tgasLimit: 100000000,\n\t\t\tchainID: this.chainId\n\t\t})\n\t}\n}\n\nexport interface ESDTToken {\n\tidentifier: string,\n\tname: string,\n\tticker: string,\n\tnonce?: number,\n\towner: string,\n\tassets?: { pngUrl: string },\n\tdecimals: number,\n\tbalance: string,\n\tattributes?: string,\n\ttransactions: number,\n\taccounts: number,\n\tcirculatingSupply: string,\n}\n\n// USED FOR ELROND API CALLS\nexport interface APIESDT {\n\tattributes: string;\n\tnonce: string;\n\tsupply: string;\n\tcreator: string;\n\tname: string;\n\troyalties: string;\n\tidentifier: string;\n\tcollection: string;\n\ttype: string;\n\turl: string;\n\tassets?: {\n\t\tpngUrl?: string;\n\t}\n\turis: string[];\n\tmetaData: ESDTMetaData;\n\tmedia?: ESDTMedia[];\n\tdecimals: number;\n\tbalance?: string;\n}\n\nexport interface ESDTMedia {\n\turl: string;\n\tfileType: string;\n\toriginalUrl: string;\n\tthumbnailUrl: string;\n}\n\nexport interface ESDTAttribute {\n\ttrait_type: string;\n\tvalue: string;\n\trarity?: string;\n}\n\nexport interface ESDTMetaData {\n\tid?: string;\n\tgrade?: number;\n\tdescription: string;\n\tnative_attributes: ESDTAttribute[];\n\tattributes: ESDTAttribute[];\n\trarity_score?: number;\n\ttotal_minted?: number;\n\trank?: number;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}