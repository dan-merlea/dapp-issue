{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AnimatedSprite, Container, Graphics, Sprite } from 'pixi.js';\nimport { Constants, Geometry } from '@krogan/common';\nvar RectangleSprite = /*#__PURE__*/function (_Container) {\n  _inherits(RectangleSprite, _Container);\n  var _super = _createSuper(RectangleSprite);\n  function RectangleSprite(x, y, width, height) {\n    var _this;\n    var rotation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var texture = arguments.length > 5 ? arguments[5] : undefined;\n    _classCallCheck(this, RectangleSprite);\n    _this = _super.call(this);\n\n    // Body\n    _this._body = void 0;\n    _this._sprite = void 0;\n    _this._boundaries = void 0;\n    _this._body = new Geometry.RectangleBody(x, y, width, height);\n\n    // Sprite\n    if (texture.single) {\n      _this._sprite = new Sprite(texture.single);\n    } else {\n      _this._sprite = new AnimatedSprite(texture.array || [], true);\n      _this._sprite.animationSpeed = 0.12;\n      _this._sprite.play();\n    }\n\n    // Add the boundaries BEFORE scaling the sprite\n    if (Constants.DEBUG) {\n      _this._boundaries = new Graphics();\n      _this._boundaries.lineStyle(1, 0xff00ff);\n      var _x = _this._sprite.anchor.x == 0.5 ? -_this._sprite.width / 2 : 0;\n      _this._boundaries.drawRect(_x, 0, _this._sprite.width, _this._sprite.height);\n      _this._boundaries.endFill();\n      _this._sprite.addChild(_this._boundaries);\n    }\n    _this._sprite.width = width;\n    _this._sprite.height = height;\n    _this._sprite.rotation = rotation;\n    _this._sprite.position.set(x, y);\n    return _this;\n  }\n\n  // Setters\n  _createClass(RectangleSprite, [{\n    key: \"x\",\n    get: function get() {\n      return this._body.x;\n    },\n    set: function set(x) {\n      this._body.x = x;\n      this._sprite.x = x;\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._body.y;\n    },\n    set: function set(y) {\n      this._body.y = y;\n      this._sprite.y = y;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this._body.width;\n    },\n    set: function set(width) {\n      this._body.width = width;\n      this._sprite.width = width;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._body.height;\n    },\n    set: function set(height) {\n      this._body.height = height;\n      this._sprite.height = height;\n    }\n  }, {\n    key: \"rotation\",\n    get: function get() {\n      return this._sprite.rotation;\n    },\n    set: function set(rotation) {\n      this._sprite.rotation = rotation;\n    }\n\n    // Getters\n  }, {\n    key: \"body\",\n    get: function get() {\n      return this._body;\n    }\n  }]);\n  return RectangleSprite;\n}(Container);\nexport { RectangleSprite as default };","map":{"version":3,"names":["AnimatedSprite","Container","Graphics","Sprite","Constants","Geometry","RectangleSprite","x","y","width","height","rotation","texture","_body","_sprite","_boundaries","RectangleBody","single","array","animationSpeed","play","DEBUG","lineStyle","anchor","drawRect","endFill","addChild","position","set"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/util/RectangleSprite.ts"],"sourcesContent":["import { AnimatedSprite, Container, Graphics, Sprite, Texture } from 'pixi.js';\nimport { Constants, Geometry } from '@krogan/common';\n\nexport default class RectangleSprite extends Container {\n    \n    private _body: Geometry.RectangleBody;\n    private _sprite: Sprite | AnimatedSprite;\n    private _boundaries?: Graphics;\n\n    constructor(\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        rotation = 0,\n        texture: { single?: Texture; array?: Texture[] },\n    ) {\n        super()\n\n        // Body\n        this._body = new Geometry.RectangleBody(x, y, width, height);\n\n        // Sprite\n        if (texture.single) {\n            this._sprite = new Sprite(texture.single);\n        } else {\n            this._sprite = new AnimatedSprite(texture.array || [], true);\n            (this._sprite as AnimatedSprite).animationSpeed = 0.12;\n            (this._sprite as AnimatedSprite).play();\n        }\n\n        // Add the boundaries BEFORE scaling the sprite\n        if (Constants.DEBUG) {\n            this._boundaries = new Graphics();\n            this._boundaries.lineStyle(1, 0xff00ff);\n            const x = this._sprite.anchor.x == 0.5 ? -this._sprite.width/2 : 0\n            this._boundaries.drawRect(x, 0, this._sprite.width, this._sprite.height);\n            this._boundaries.endFill();\n            this._sprite.addChild(this._boundaries);\n        }\n\n        this._sprite.width = width;\n        this._sprite.height = height;\n        this._sprite.rotation = rotation;\n        this._sprite.position.set(x, y);\n    }\n\n    // Setters\n    set x(x: number) {\n        this._body.x = x;\n        this._sprite.x = x;\n    }\n\n    set y(y: number) {\n        this._body.y = y;\n        this._sprite.y = y;\n    }\n\n    set width(width: number) {\n        this._body.width = width;\n        this._sprite.width = width;\n    }\n\n    set height(height: number) {\n        this._body.height = height;\n        this._sprite.height = height;\n    }\n\n    set rotation(rotation: number) {\n        this._sprite.rotation = rotation;\n    }\n\n    // Getters\n    get body() {\n        return this._body;\n    }\n\n    get x() {\n        return this._body.x;\n    }\n\n    get y() {\n        return this._body.y;\n    }\n\n    get width() {\n        return this._body.width;\n    }\n\n    get height() {\n        return this._body.height;\n    }\n\n    get rotation() {\n        return this._sprite.rotation;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}