{"ast":null,"code":"import { a as r, c as d } from \"./chunk-NPGLEYL5.js\";\nimport { e as i, m as n } from \"./chunk-HBP5N4FR.js\";\nimport { createSlice as T } from \"@reduxjs/toolkit\";\nvar l,\n  u,\n  p,\n  g,\n  t,\n  c,\n  P,\n  b,\n  A,\n  F,\n  f = i(function () {\n    var _c$actions;\n    n();\n    d();\n    l = \"Transaction failed\", u = \"Transaction successful\", p = \"Processing transaction\", g = \"Transaction submitted\", t = {}, c = T({\n      name: \"transactionsInfo\",\n      initialState: t,\n      reducers: {\n        setTransactionsDisplayInfo: function setTransactionsDisplayInfo(s, a) {\n          var _a$payload = a.payload,\n            o = _a$payload.sessionId,\n            e = _a$payload.transactionsDisplayInfo;\n          o != null && (s[o] = {\n            errorMessage: (e == null ? void 0 : e.errorMessage) || l,\n            successMessage: (e == null ? void 0 : e.successMessage) || u,\n            processingMessage: (e == null ? void 0 : e.processingMessage) || p,\n            submittedMessage: (e == null ? void 0 : e.submittedMessage) || g,\n            transactionDuration: e == null ? void 0 : e.transactionDuration\n          });\n        },\n        clearTransactionsInfoForSessionId: function clearTransactionsInfoForSessionId(s, a) {\n          a.payload != null && delete s[a.payload];\n        },\n        clearTransactionsInfo: function clearTransactionsInfo() {\n          return t;\n        }\n      },\n      extraReducers: function extraReducers(s) {\n        s.addCase(r, function () {\n          return t;\n        });\n      }\n    }), (_c$actions = c.actions, P = _c$actions.clearTransactionsInfo, b = _c$actions.setTransactionsDisplayInfo, A = _c$actions.clearTransactionsInfoForSessionId), F = c.reducer;\n  });\nexport { l as a, u as b, p as c, g as d, c as e, P as f, b as g, A as h, F as i, f as j };","map":null,"metadata":{},"sourceType":"module"}