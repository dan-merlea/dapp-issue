{"ast":null,"code":"import { a as m } from \"./chunk-DJK4XMGE.js\";\nimport { a as c } from \"./chunk-MYQKOL46.js\";\nimport { a as i } from \"./chunk-3KAY5IWM.js\";\nimport { i as g } from \"./chunk-7QE2X3X4.js\";\nimport { k as d, m as l } from \"./chunk-HBP5N4FR.js\";\nl();\ng();\nvar b = function b(_ref) {\n  var e = _ref.input,\n    s = _ref.decodeMethod,\n    n = _ref.identifier;\n  var r = {\n    displayValue: \"\",\n    validationWarnings: []\n  };\n  if (!(e.includes(\"@\") || e.includes(\"\\n\"))) return r.displayValue = i(e, s), r;\n  if (e.includes(\"@\")) {\n    var t = e.split(\"@\");\n    r = m({\n      parts: t,\n      decodeMethod: s,\n      identifier: n\n    });\n  }\n  if (e.includes(\"\\n\")) {\n    var _t = e.split(\"\\n\"),\n      a = _t.map(function (o) {\n        var f = d.Buffer.from(String(o), \"base64\");\n        return s === \"raw\" ? o : i(f.toString(\"hex\"), s);\n      }),\n      u = s === \"smart\" ? c({\n        parts: _t,\n        decodedParts: a,\n        identifier: n\n      }) : a;\n    r.displayValue = u.join(\"\\n\");\n  }\n  return r;\n};\nexport { b as a };","map":null,"metadata":{},"sourceType":"module"}