{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar fxaa = require('./fxaa.js');\nvar fxaa$1 = require('./fxaa2.js');\nvar FXAAFilter = /*#__PURE__*/function (_core$Filter) {\n  _inherits(FXAAFilter, _core$Filter);\n  var _super = _createSuper(FXAAFilter);\n  function FXAAFilter() {\n    _classCallCheck(this, FXAAFilter);\n    return _super.call(this, fxaa[\"default\"], fxaa$1[\"default\"]);\n  }\n  return _createClass(FXAAFilter);\n}(core.Filter);\nexports.FXAAFilter = FXAAFilter;","map":{"version":3,"sources":["../src/FXAAFilter.ts"],"names":["Filter","vertex","fragment"],"mappings":";;;;;;;;;;;;IAUa,UAAA;EAAA;EAAA;EAET,sBACA;IAAA;IAAA,yBAEUC,IAAAA,CAAAA,SAAAA,CAAAA,EAAQC,MAAAA,CAAAA,SAAAA,CAAQ;EAAA;EAC1B;AAAA,EAN4BF,IAAAA,CAAAA,MAChC","sourcesContent":["import { Filter } from '@pixi/core';\nimport vertex from './fxaa.vert';\nimport fragment from './fxaa.frag';\n\n/**\n * Basic FXAA (Fast Approximate Anti-Aliasing) implementation based on the code on geeks3d.com\n * with the modification that the texture2DLod stuff was removed since it is unsupported by WebGL.\n * @see https://github.com/mitsuhiko/webgl-meincraft\n * @memberof PIXI.filters\n */\nexport class FXAAFilter extends Filter\n{\n    constructor()\n    {\n        // TODO - needs work\n        super(vertex, fragment);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}