{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrBadAddress = exports.ErrNotImplemented = exports.Err = void 0;\n/**\n * The base class for exceptions (errors).\n */\nvar Err = /*#__PURE__*/function (_Error) {\n  _inherits(Err, _Error);\n  var _super = _createSuper(Err);\n  function Err(message, inner) {\n    var _this;\n    _classCallCheck(this, Err);\n    _this = _super.call(this, message);\n    _this.inner = undefined;\n    _this.inner = inner;\n    return _this;\n  }\n  return _createClass(Err);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.Err = Err;\n/**\n * Signals that a method is not yet implemented\n */\nvar ErrNotImplemented = /*#__PURE__*/function (_Err) {\n  _inherits(ErrNotImplemented, _Err);\n  var _super2 = _createSuper(ErrNotImplemented);\n  function ErrNotImplemented() {\n    _classCallCheck(this, ErrNotImplemented);\n    return _super2.call(this, \"Method not yet implemented\");\n  }\n  return _createClass(ErrNotImplemented);\n}(Err);\nexports.ErrNotImplemented = ErrNotImplemented;\n/**\n * Signals a bad address.\n */\nvar ErrBadAddress = /*#__PURE__*/function (_Err2) {\n  _inherits(ErrBadAddress, _Err2);\n  var _super3 = _createSuper(ErrBadAddress);\n  function ErrBadAddress(value, inner) {\n    _classCallCheck(this, ErrBadAddress);\n    return _super3.call(this, \"Bad address: \".concat(value), inner);\n  }\n  return _createClass(ErrBadAddress);\n}(Err);\nexports.ErrBadAddress = ErrBadAddress;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AAEG;AAFH,IAGc,GAAI;EAAA;EAAA;EAGd,aAAmB,OAAe,EAAE,KAAa,EAAA;IAAA;IAAA;IAC7C,0BAAM,OAAO;IAHjB,MAAA,KAAK,GAAsB,SAAS;IAIhC,MAAK,KAAK,GAAG,KAAK;IAAC;EACvB;EAAC;AAAA,iCANqB,KAAK;AAA9B,OAAA,CAAA,GAAA,GAAA,GAAA;AASD;;AAEG;AAFH,IAGa,iBAAkB;EAAA;EAAA;EAC3B,6BAAA;IAAA;IAAA,0BACU,4BAA4B;EACtC;EAAC;AAAA,EAHkC,GAAG;AAA1C,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAMA;;AAEG;AAFH,IAGc,aAAc;EAAA;EAAA;EACxB,uBAAmB,KAAa,EAAE,KAAa,EAAA;IAAA;IAAA,iDACrB,KAAK,GAAI,KAAK;EACxC;EAAC;AAAA,EAH+B,GAAG;AAAtC,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrBadAddress = exports.ErrNotImplemented = exports.Err = void 0;\n/**\n * The base class for exceptions (errors).\n */\nclass Err extends Error {\n    constructor(message, inner) {\n        super(message);\n        this.inner = undefined;\n        this.inner = inner;\n    }\n}\nexports.Err = Err;\n/**\n * Signals that a method is not yet implemented\n */\nclass ErrNotImplemented extends Err {\n    constructor() {\n        super(\"Method not yet implemented\");\n    }\n}\nexports.ErrNotImplemented = ErrNotImplemented;\n/**\n * Signals a bad address.\n */\nclass ErrBadAddress extends Err {\n    constructor(value, inner) {\n        super(`Bad address: ${value}`, inner);\n    }\n}\nexports.ErrBadAddress = ErrBadAddress;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}