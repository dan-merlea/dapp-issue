{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Asset, getCacheAsset, HiddenTexture } from 'images/textures';\nimport { Circle, Container, MIPMAP_MODES, Point, Sprite, Texture } from 'pixi.js';\nimport { TextSprite } from '..';\nimport { IconCounterType } from 'sprites/ui/IconText';\nimport { Maths, Constants } from '@krogan/common';\nimport HexagonSprite from './HexagonSprite';\nimport StatsStack from 'sprites/ui/StatsStack';\nimport SolarSystem from './SolarSystem';\nimport { MapZINDEX } from 'managers/MapManager';\nimport { playerManager } from 'managers';\nvar TileContainer = /*#__PURE__*/function (_Container) {\n  _inherits(TileContainer, _Container);\n  var _super = _createSuper(TileContainer);\n  // Sprites\n\n  // Data\n\n  // Positioning\n\n  // Actions\n\n  // External callback\n\n  function TileContainer(x, y, radius, coordinate, onHover, onClick) {\n    var _this;\n    _classCallCheck(this, TileContainer);\n    _this = _super.call(this);\n    _this._hex = void 0;\n    _this._noGoZone = void 0;\n    _this._hidden = void 0;\n    _this._statsStack = void 0;\n    _this._solarSystem = void 0;\n    _this._hexagon = void 0;\n    _this._coordinate = void 0;\n    _this._touchPoint = new Point();\n    _this._drag = false;\n    _this.onSpaceshipAdd = void 0;\n    _this.onSpaceshipRemove = void 0;\n    _this.x = x;\n    _this.y = y;\n    if (coordinate.base != undefined) {\n      _this._hex = new HexagonSprite(0, 0, radius, Constants.TileColor.DEFAULT, Constants.TEAMS[coordinate.base].color, 0.2);\n    } else {\n      _this._hex = new HexagonSprite(0, 0, radius, Constants.TileColor.DEFAULT, 0x000000, 0.2);\n    }\n    _this._coordinate = coordinate;\n    _this.addChild(_this._hex);\n    _this.zIndex = MapZINDEX.HEX;\n    _this._hex.interactive = true;\n    _this._hex.cursor = 'pointer';\n    _this._hex.hitArea = new Circle(0, 0, radius);\n    _this._hex.on('pointerover', function () {\n      _this.zIndex = MapZINDEX.HEX_HOVER;\n      _this.setHover(true);\n      onHover(_assertThisInitialized(_this));\n    });\n    _this._hex.on('pointerout', function () {\n      _this.zIndex = MapZINDEX.HEX;\n      _this.setHover(false);\n    });\n    _this._hex.on('pointerdown', function (e) {\n      _this._touchPoint = e.data.getLocalPosition(_this.parent);\n      _this._drag = false;\n    });\n    _this._hex.on('pointermove', function (e) {\n      var point = e.data.getLocalPosition(_this.parent);\n      if (Maths.getDistance(_this._touchPoint.x, _this._touchPoint.y, point.x, point.y) > 5) {\n        _this._drag = true;\n      }\n    });\n    _this._hex.on('pointerup', function () {\n      if (!_this._drag) onClick(_assertThisInitialized(_this));\n    });\n\n    // Debug coordinates\n    if (Constants.DEBUG) {\n      var nameTextSprite = new TextSprite(_this.coordinate.toString(), 6, 0.5, 0.5);\n      nameTextSprite.y = 80;\n      nameTextSprite.zIndex = 3;\n      _this.addChild(nameTextSprite);\n    }\n    playerManager.onUpdate(function () {\n      _this.hexagonWasUpdated();\n    });\n    return _this;\n  }\n\n  // HELPERS\n  _createClass(TileContainer, [{\n    key: \"toggleNoGoZone\",\n    value: function toggleNoGoZone() {\n      if (this._noGoZone) {\n        this.removeChild(this._noGoZone);\n        this._noGoZone.destroy();\n        this._noGoZone = undefined;\n      } else {\n        var image = new Sprite(getCacheAsset(Asset.NoGoZone));\n        image.angle = 30;\n        image.anchor.x = 0.5;\n        image.anchor.y = 0.5;\n        image.zIndex = 1;\n        this._noGoZone = image;\n        this._hex.addChild(this._noGoZone);\n      }\n    }\n  }, {\n    key: \"updatePlanets\",\n    value: function updatePlanets() {\n      if (!this.hexagon) return;\n      if (this._solarSystem) {\n        this.removeChild(this._solarSystem);\n        this._solarSystem = undefined;\n      }\n      this._solarSystem = new SolarSystem(this._hex.radius);\n      this._solarSystem.addPlanets(this.hexagon.planets);\n      this._solarSystem.zIndex = 0;\n      this.addChild(this._solarSystem);\n    }\n  }, {\n    key: \"hexagonWasUpdated\",\n    value: function hexagonWasUpdated() {\n      if (!this._hexagon) return;\n\n      // Planets\n      this.updatePlanets();\n\n      // Stats\n      var user = 0;\n      var team = 0;\n      var stats = [];\n      this._hexagon.spaceships.forEach(function (value) {\n        if (value.address == playerManager.address()) {\n          user++;\n        } else {\n          team++;\n        }\n      });\n      if (user > 0) {\n        stats.push({\n          preIcon: IconCounterType.USER,\n          text: \"\".concat(user, \"x\"),\n          icon: IconCounterType.SPACESHIP\n        });\n      }\n      if (team > 0) {\n        stats.push({\n          preIcon: IconCounterType.TEAM,\n          text: \"\".concat(team, \"x\"),\n          icon: IconCounterType.SPACESHIP\n        });\n      }\n      if (this._hexagon.starbases.length > 0) {\n        stats.push({\n          preIcon: IconCounterType.TEAM,\n          text: \"\".concat(this._hexagon.starbases.length, \"x\"),\n          icon: IconCounterType.STARBASE\n        });\n      }\n      this.stats = stats;\n    }\n  }, {\n    key: \"setupListeners\",\n    value: function setupListeners() {\n      var _this2 = this;\n      if (!this._hexagon) return;\n      this._hexagon.spaceships.onAdd = function (spaceship, nonce) {\n        var _this2$onSpaceshipAdd;\n        console.log('Spaceship added');\n        _this2.hexagonWasUpdated();\n        (_this2$onSpaceshipAdd = _this2.onSpaceshipAdd) === null || _this2$onSpaceshipAdd === void 0 ? void 0 : _this2$onSpaceshipAdd.call(_this2, spaceship, nonce);\n      };\n      this._hexagon.spaceships.onRemove = function (spaceship, nonce) {\n        var _this2$onSpaceshipRem;\n        console.log('Spaceship removed');\n        _this2.hexagonWasUpdated();\n        (_this2$onSpaceshipRem = _this2.onSpaceshipRemove) === null || _this2$onSpaceshipRem === void 0 ? void 0 : _this2$onSpaceshipRem.call(_this2, spaceship, nonce);\n      };\n      this.hexagonWasUpdated();\n    }\n\n    // GETTERS & SETTERS\n  }, {\n    key: \"hexagon\",\n    get: function get() {\n      return this._hexagon;\n    },\n    set: function set(hexagon) {\n      this._hexagon = hexagon;\n      this.setupListeners();\n    }\n  }, {\n    key: \"stats\",\n    set: function set(stats) {\n      if (this._statsStack) {\n        this.removeChild(this._statsStack);\n        this._statsStack = undefined;\n      }\n      if (stats.length > 0) {\n        this._statsStack = new StatsStack(stats);\n        this._statsStack.y = -90;\n        this.addChild(this._statsStack);\n      }\n    }\n\n    // TODO: remove? doesn't make sense to hide the map\n  }, {\n    key: \"toggleHidden\",\n    value: function toggleHidden() {\n      if (this._hidden) {\n        this._hex.redraw(Constants.TileColor.DEFAULT);\n        this.removeChild(this._hidden);\n        this._hidden.destroy();\n        this._hidden = undefined;\n      } else {\n        this._hex.redraw(Constants.TileColor.DEFAULT, Constants.TileColor.HIDDEN, 0.75);\n        var texture = Texture.from(HiddenTexture);\n        texture.baseTexture.mipmap = MIPMAP_MODES.POW2;\n        var image = new Sprite(texture);\n        image.anchor.x = 0.5;\n        image.anchor.y = 0.5;\n        image.width = 24;\n        image.height = 24;\n        image.zIndex = 1;\n        this._hidden = image;\n        this._hex.addChild(this._hidden);\n      }\n    }\n  }, {\n    key: \"setHover\",\n    value: function setHover(hover) {\n      var color = hover ? Constants.TileColor.HIGHLIGHT : Constants.TileColor.DEFAULT;\n      if (this._hidden) {\n        this._hex.redraw(color, Constants.TileColor.HIDDEN, 0.75);\n      }\n      if (this._coordinate.base != undefined) {\n        this._hex.redraw(color, Constants.TEAMS[this._coordinate.base].color, 0.2);\n      } else {\n        this._hex.redraw(color, 0x000000, 0.2);\n      }\n    }\n  }, {\n    key: \"noGoZone\",\n    get: function get() {\n      return this._noGoZone ? true : false;\n    }\n  }, {\n    key: \"coordinate\",\n    get: function get() {\n      return this._coordinate;\n    }\n  }, {\n    key: \"teamColor\",\n    value: function teamColor(team) {\n      switch (team) {\n        case 'team_1':\n          return Constants.TeamColor.RED;\n        case 'team_2':\n          return Constants.TeamColor.BLUE;\n        case 'team_3':\n          return Constants.TeamColor.GREEN;\n      }\n    }\n  }]);\n  return TileContainer;\n}(Container);\nexport { TileContainer as default };","map":{"version":3,"names":["Asset","getCacheAsset","HiddenTexture","Circle","Container","MIPMAP_MODES","Point","Sprite","Texture","TextSprite","IconCounterType","Maths","Constants","HexagonSprite","StatsStack","SolarSystem","MapZINDEX","playerManager","TileContainer","x","y","radius","coordinate","onHover","onClick","_hex","_noGoZone","_hidden","_statsStack","_solarSystem","_hexagon","_coordinate","_touchPoint","_drag","onSpaceshipAdd","onSpaceshipRemove","base","undefined","TileColor","DEFAULT","TEAMS","color","addChild","zIndex","HEX","interactive","cursor","hitArea","on","HEX_HOVER","setHover","e","data","getLocalPosition","parent","point","getDistance","DEBUG","nameTextSprite","toString","onUpdate","hexagonWasUpdated","removeChild","destroy","image","NoGoZone","angle","anchor","hexagon","addPlanets","planets","updatePlanets","user","team","stats","spaceships","forEach","value","address","push","preIcon","USER","text","icon","SPACESHIP","TEAM","starbases","length","STARBASE","onAdd","spaceship","nonce","console","log","onRemove","setupListeners","redraw","HIDDEN","texture","from","baseTexture","mipmap","POW2","width","height","hover","HIGHLIGHT","TeamColor","RED","BLUE","GREEN"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/map/TileContainer.ts"],"sourcesContent":["import { Asset, getCacheAsset, HiddenTexture } from 'images/textures';\nimport { Circle, Container, InteractionEvent, MIPMAP_MODES, Point, Sprite, Texture } from 'pixi.js';\nimport { TextSprite } from '..';\nimport { IconCounterType, Stat } from 'sprites/ui/IconText';\nimport { Maths, Entities, Constants } from '@krogan/common';\nimport { Hexagon } from 'state/Hexagon';\nimport HexagonSprite from './HexagonSprite';\nimport StatsStack from 'sprites/ui/StatsStack';\nimport SolarSystem from './SolarSystem';\nimport { MapZINDEX } from 'managers/MapManager';\nimport { Spaceship } from 'state/Spaceship';\nimport { playerManager } from 'managers';\n\nexport default class TileContainer extends Container {\n\n    // Sprites\n    private _hex: HexagonSprite\n    private _noGoZone?: Sprite\n    private _hidden?: Sprite\n    private _statsStack?: StatsStack\n    private _solarSystem?: SolarSystem\n\n    // Data\n    private _hexagon?: Hexagon\n\n    // Positioning\n    private _coordinate: Entities.CoordinateModel\n\n    // Actions\n    private _touchPoint = new Point();\n    private _drag: boolean = false\n\n    // External callback\n    public onSpaceshipAdd?: (spaceship: Spaceship, nonce: string) => void\n    public onSpaceshipRemove?: (spaceship: Spaceship, nonce: string) => void\n\n    constructor(\n        x: number, y: number, \n        radius: number, \n        coordinate: Entities.CoordinateModel, \n        onHover: (tile: TileContainer) => void, \n        onClick: (tile: TileContainer) => void\n    ) {\n        super()\n\n        this.x = x\n        this.y = y\n\n        if (coordinate.base != undefined) {\n            this._hex = new HexagonSprite(0, 0, radius, Constants.TileColor.DEFAULT, Constants.TEAMS[coordinate.base].color, 0.2)\n        } else {\n            this._hex = new HexagonSprite(0, 0, radius, Constants.TileColor.DEFAULT, 0x000000, 0.2)\n        }\n\n        this._coordinate = coordinate\n\n        this.addChild(this._hex)\n        this.zIndex = MapZINDEX.HEX\n\n        this._hex.interactive = true\n        this._hex.cursor = 'pointer'\n        this._hex.hitArea = new Circle(0, 0, radius)\n\n        this._hex.on('pointerover', () => {\n            this.zIndex = MapZINDEX.HEX_HOVER\n            this.setHover(true)\n            onHover(this)\n        })\n\n        this._hex.on('pointerout', () => {\n            this.zIndex = MapZINDEX.HEX\n            this.setHover(false)\n        })\n\n        this._hex.on('pointerdown', (e: InteractionEvent) => {\n            this._touchPoint = e.data.getLocalPosition(this.parent)\n            this._drag = false\n        })\n\n        this._hex.on('pointermove', (e: InteractionEvent) => {\n            const point = e.data.getLocalPosition(this.parent)\n            if (Maths.getDistance(this._touchPoint.x, this._touchPoint.y, point.x, point.y) > 5) {\n                this._drag = true\n            }\n        })\n\n        this._hex.on('pointerup', () => {\n            if (!this._drag)\n                onClick(this)\n        })\n\n        // Debug coordinates\n        if (Constants.DEBUG) {\n            const nameTextSprite = new TextSprite(this.coordinate.toString(), 6, 0.5, 0.5)\n            nameTextSprite.y = 80\n            nameTextSprite.zIndex = 3\n            this.addChild(nameTextSprite)\n        }\n\n        playerManager.onUpdate(() => {\n            this.hexagonWasUpdated()\n        })\n    }\n\n    // HELPERS\n\n    toggleNoGoZone() {\n        if (this._noGoZone) {\n            this.removeChild(this._noGoZone)\n            this._noGoZone.destroy()\n            this._noGoZone = undefined\n        } else {\n            const image = new Sprite(getCacheAsset(Asset.NoGoZone))\n            image.angle = 30\n            image.anchor.x = 0.5\n            image.anchor.y = 0.5\n            image.zIndex = 1\n            this._noGoZone = image\n            this._hex.addChild(this._noGoZone)\n        }\n    }\n\n    updatePlanets() {\n        if (!this.hexagon) return\n        if (this._solarSystem) {\n            this.removeChild(this._solarSystem)\n            this._solarSystem = undefined\n        }\n\n        this._solarSystem = new SolarSystem(this._hex.radius)\n        this._solarSystem.addPlanets(this.hexagon.planets)\n        this._solarSystem.zIndex = 0\n        this.addChild(this._solarSystem)\n    }\n\n    hexagonWasUpdated() {\n        if (!this._hexagon) return\n\n        // Planets\n        this.updatePlanets()\n\n        // Stats\n        let user = 0\n        let team = 0\n        const stats: Stat[] = []\n        this._hexagon.spaceships.forEach(value => {\n            if (value.address == playerManager.address()) {\n                user++\n            } else {\n                team++\n            }\n        })\n        if (user > 0) {\n            stats.push({\n                preIcon: IconCounterType.USER,\n                text: `${user}x`,\n                icon: IconCounterType.SPACESHIP\n            })\n        }\n        if (team > 0) {\n            stats.push({\n                preIcon: IconCounterType.TEAM,\n                text: `${team}x`,\n                icon: IconCounterType.SPACESHIP\n            })\n        }\n        if (this._hexagon.starbases.length > 0) {\n            stats.push({\n                preIcon: IconCounterType.TEAM,\n                text: `${this._hexagon.starbases.length}x`,\n                icon: IconCounterType.STARBASE\n            })\n        }\n\n        this.stats = stats\n    }\n\n    setupListeners() {\n        if (!this._hexagon) return\n        this._hexagon.spaceships.onAdd = (spaceship, nonce) => { \n            console.log('Spaceship added')\n            this.hexagonWasUpdated()\n            this.onSpaceshipAdd?.(spaceship, nonce)\n        }\n        this._hexagon.spaceships.onRemove = (spaceship, nonce) => { \n            console.log('Spaceship removed')\n            this.hexagonWasUpdated()\n            this.onSpaceshipRemove?.(spaceship, nonce)\n        }\n\n        this.hexagonWasUpdated()\n    }\n\n    // GETTERS & SETTERS\n\n    set hexagon(hexagon: Hexagon | undefined) {\n        this._hexagon = hexagon\n        this.setupListeners()\n    }\n\n    get hexagon() {\n        return this._hexagon\n    }\n\n    set stats(stats: Stat[]) {\n        if (this._statsStack) {\n            this.removeChild(this._statsStack)\n            this._statsStack = undefined\n        }\n\n        if (stats.length > 0) {\n            this._statsStack = new StatsStack(stats)\n            this._statsStack.y = -90\n            this.addChild(this._statsStack)\n        }\n    }\n\n    // TODO: remove? doesn't make sense to hide the map\n    toggleHidden() {\n        if (this._hidden) {\n            this._hex.redraw(Constants.TileColor.DEFAULT)\n\n            this.removeChild(this._hidden)\n            this._hidden.destroy()\n            this._hidden = undefined\n        } else {\n            this._hex.redraw(Constants.TileColor.DEFAULT, Constants.TileColor.HIDDEN, 0.75)\n\n            const texture = Texture.from(HiddenTexture)\n            texture.baseTexture.mipmap = MIPMAP_MODES.POW2;\n\n            const image = new Sprite(texture)\n            image.anchor.x = 0.5\n            image.anchor.y = 0.5\n            image.width = 24\n            image.height = 24\n            image.zIndex = 1\n            this._hidden = image\n            this._hex.addChild(this._hidden)\n        }\n    }\n\n    setHover(hover: boolean) {\n        const color = hover ? Constants.TileColor.HIGHLIGHT : Constants.TileColor.DEFAULT\n        if (this._hidden) {\n            this._hex.redraw(color, Constants.TileColor.HIDDEN, 0.75)\n        } if (this._coordinate.base != undefined) {\n            this._hex.redraw(color, Constants.TEAMS[this._coordinate.base].color, 0.2)\n        } else {\n            this._hex.redraw(color, 0x000000, 0.2)\n        }\n    }\n\n    get noGoZone(): boolean {\n        return this._noGoZone ? true : false\n    }\n\n    get coordinate(): Entities.CoordinateModel {\n        return this._coordinate\n    }\n\n    teamColor(team: string) {\n        switch(team) {\n            case 'team_1':\n                return Constants.TeamColor.RED\n            case 'team_2':\n                return Constants.TeamColor.BLUE\n            case 'team_3':\n                return Constants.TeamColor.GREEN\n        }\n    }\n}\n"],"mappings":";;;;;AAAA,SAASA,KAAK,EAAEC,aAAa,EAAEC,aAAa,QAAQ,iBAAiB;AACrE,SAASC,MAAM,EAAEC,SAAS,EAAoBC,YAAY,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,SAAS;AACnG,SAASC,UAAU,QAAQ,IAAI;AAC/B,SAASC,eAAe,QAAc,qBAAqB;AAC3D,SAASC,KAAK,EAAYC,SAAS,QAAQ,gBAAgB;AAE3D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SAASC,aAAa,QAAQ,UAAU;AAAC,IAEpBC,aAAa;EAAA;EAAA;EAE9B;;EAOA;;EAGA;;EAGA;;EAIA;;EAIA,uBACIC,CAAS,EAAEC,CAAS,EACpBC,MAAc,EACdC,UAAoC,EACpCC,OAAsC,EACtCC,OAAsC,EACxC;IAAA;IAAA;IACE;IAAO,MA3BHC,IAAI;IAAA,MACJC,SAAS;IAAA,MACTC,OAAO;IAAA,MACPC,WAAW;IAAA,MACXC,YAAY;IAAA,MAGZC,QAAQ;IAAA,MAGRC,WAAW;IAAA,MAGXC,WAAW,GAAG,IAAI1B,KAAK,EAAE;IAAA,MACzB2B,KAAK,GAAY,KAAK;IAAA,MAGvBC,cAAc;IAAA,MACdC,iBAAiB;IAWpB,MAAKhB,CAAC,GAAGA,CAAC;IACV,MAAKC,CAAC,GAAGA,CAAC;IAEV,IAAIE,UAAU,CAACc,IAAI,IAAIC,SAAS,EAAE;MAC9B,MAAKZ,IAAI,GAAG,IAAIZ,aAAa,CAAC,CAAC,EAAE,CAAC,EAAEQ,MAAM,EAAET,SAAS,CAAC0B,SAAS,CAACC,OAAO,EAAE3B,SAAS,CAAC4B,KAAK,CAAClB,UAAU,CAACc,IAAI,CAAC,CAACK,KAAK,EAAE,GAAG,CAAC;IACzH,CAAC,MAAM;MACH,MAAKhB,IAAI,GAAG,IAAIZ,aAAa,CAAC,CAAC,EAAE,CAAC,EAAEQ,MAAM,EAAET,SAAS,CAAC0B,SAAS,CAACC,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC;IAC3F;IAEA,MAAKR,WAAW,GAAGT,UAAU;IAE7B,MAAKoB,QAAQ,CAAC,MAAKjB,IAAI,CAAC;IACxB,MAAKkB,MAAM,GAAG3B,SAAS,CAAC4B,GAAG;IAE3B,MAAKnB,IAAI,CAACoB,WAAW,GAAG,IAAI;IAC5B,MAAKpB,IAAI,CAACqB,MAAM,GAAG,SAAS;IAC5B,MAAKrB,IAAI,CAACsB,OAAO,GAAG,IAAI5C,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEkB,MAAM,CAAC;IAE5C,MAAKI,IAAI,CAACuB,EAAE,CAAC,aAAa,EAAE,YAAM;MAC9B,MAAKL,MAAM,GAAG3B,SAAS,CAACiC,SAAS;MACjC,MAAKC,QAAQ,CAAC,IAAI,CAAC;MACnB3B,OAAO,+BAAM;IACjB,CAAC,CAAC;IAEF,MAAKE,IAAI,CAACuB,EAAE,CAAC,YAAY,EAAE,YAAM;MAC7B,MAAKL,MAAM,GAAG3B,SAAS,CAAC4B,GAAG;MAC3B,MAAKM,QAAQ,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,MAAKzB,IAAI,CAACuB,EAAE,CAAC,aAAa,EAAE,UAACG,CAAmB,EAAK;MACjD,MAAKnB,WAAW,GAAGmB,CAAC,CAACC,IAAI,CAACC,gBAAgB,CAAC,MAAKC,MAAM,CAAC;MACvD,MAAKrB,KAAK,GAAG,KAAK;IACtB,CAAC,CAAC;IAEF,MAAKR,IAAI,CAACuB,EAAE,CAAC,aAAa,EAAE,UAACG,CAAmB,EAAK;MACjD,IAAMI,KAAK,GAAGJ,CAAC,CAACC,IAAI,CAACC,gBAAgB,CAAC,MAAKC,MAAM,CAAC;MAClD,IAAI3C,KAAK,CAAC6C,WAAW,CAAC,MAAKxB,WAAW,CAACb,CAAC,EAAE,MAAKa,WAAW,CAACZ,CAAC,EAAEmC,KAAK,CAACpC,CAAC,EAAEoC,KAAK,CAACnC,CAAC,CAAC,GAAG,CAAC,EAAE;QACjF,MAAKa,KAAK,GAAG,IAAI;MACrB;IACJ,CAAC,CAAC;IAEF,MAAKR,IAAI,CAACuB,EAAE,CAAC,WAAW,EAAE,YAAM;MAC5B,IAAI,CAAC,MAAKf,KAAK,EACXT,OAAO,+BAAM;IACrB,CAAC,CAAC;;IAEF;IACA,IAAIZ,SAAS,CAAC6C,KAAK,EAAE;MACjB,IAAMC,cAAc,GAAG,IAAIjD,UAAU,CAAC,MAAKa,UAAU,CAACqC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MAC9ED,cAAc,CAACtC,CAAC,GAAG,EAAE;MACrBsC,cAAc,CAACf,MAAM,GAAG,CAAC;MACzB,MAAKD,QAAQ,CAACgB,cAAc,CAAC;IACjC;IAEAzC,aAAa,CAAC2C,QAAQ,CAAC,YAAM;MACzB,MAAKC,iBAAiB,EAAE;IAC5B,CAAC,CAAC;IAAA;EACN;;EAEA;EAAA;IAAA;IAAA,OAEA,0BAAiB;MACb,IAAI,IAAI,CAACnC,SAAS,EAAE;QAChB,IAAI,CAACoC,WAAW,CAAC,IAAI,CAACpC,SAAS,CAAC;QAChC,IAAI,CAACA,SAAS,CAACqC,OAAO,EAAE;QACxB,IAAI,CAACrC,SAAS,GAAGW,SAAS;MAC9B,CAAC,MAAM;QACH,IAAM2B,KAAK,GAAG,IAAIzD,MAAM,CAACN,aAAa,CAACD,KAAK,CAACiE,QAAQ,CAAC,CAAC;QACvDD,KAAK,CAACE,KAAK,GAAG,EAAE;QAChBF,KAAK,CAACG,MAAM,CAAChD,CAAC,GAAG,GAAG;QACpB6C,KAAK,CAACG,MAAM,CAAC/C,CAAC,GAAG,GAAG;QACpB4C,KAAK,CAACrB,MAAM,GAAG,CAAC;QAChB,IAAI,CAACjB,SAAS,GAAGsC,KAAK;QACtB,IAAI,CAACvC,IAAI,CAACiB,QAAQ,CAAC,IAAI,CAAChB,SAAS,CAAC;MACtC;IACJ;EAAC;IAAA;IAAA,OAED,yBAAgB;MACZ,IAAI,CAAC,IAAI,CAAC0C,OAAO,EAAE;MACnB,IAAI,IAAI,CAACvC,YAAY,EAAE;QACnB,IAAI,CAACiC,WAAW,CAAC,IAAI,CAACjC,YAAY,CAAC;QACnC,IAAI,CAACA,YAAY,GAAGQ,SAAS;MACjC;MAEA,IAAI,CAACR,YAAY,GAAG,IAAId,WAAW,CAAC,IAAI,CAACU,IAAI,CAACJ,MAAM,CAAC;MACrD,IAAI,CAACQ,YAAY,CAACwC,UAAU,CAAC,IAAI,CAACD,OAAO,CAACE,OAAO,CAAC;MAClD,IAAI,CAACzC,YAAY,CAACc,MAAM,GAAG,CAAC;MAC5B,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACb,YAAY,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,6BAAoB;MAChB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;;MAEpB;MACA,IAAI,CAACyC,aAAa,EAAE;;MAEpB;MACA,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAMC,KAAa,GAAG,EAAE;MACxB,IAAI,CAAC5C,QAAQ,CAAC6C,UAAU,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;QACtC,IAAIA,KAAK,CAACC,OAAO,IAAI7D,aAAa,CAAC6D,OAAO,EAAE,EAAE;UAC1CN,IAAI,EAAE;QACV,CAAC,MAAM;UACHC,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACF,IAAID,IAAI,GAAG,CAAC,EAAE;QACVE,KAAK,CAACK,IAAI,CAAC;UACPC,OAAO,EAAEtE,eAAe,CAACuE,IAAI;UAC7BC,IAAI,YAAKV,IAAI,MAAG;UAChBW,IAAI,EAAEzE,eAAe,CAAC0E;QAC1B,CAAC,CAAC;MACN;MACA,IAAIX,IAAI,GAAG,CAAC,EAAE;QACVC,KAAK,CAACK,IAAI,CAAC;UACPC,OAAO,EAAEtE,eAAe,CAAC2E,IAAI;UAC7BH,IAAI,YAAKT,IAAI,MAAG;UAChBU,IAAI,EAAEzE,eAAe,CAAC0E;QAC1B,CAAC,CAAC;MACN;MACA,IAAI,IAAI,CAACtD,QAAQ,CAACwD,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACpCb,KAAK,CAACK,IAAI,CAAC;UACPC,OAAO,EAAEtE,eAAe,CAAC2E,IAAI;UAC7BH,IAAI,YAAK,IAAI,CAACpD,QAAQ,CAACwD,SAAS,CAACC,MAAM,MAAG;UAC1CJ,IAAI,EAAEzE,eAAe,CAAC8E;QAC1B,CAAC,CAAC;MACN;MAEA,IAAI,CAACd,KAAK,GAAGA,KAAK;IACtB;EAAC;IAAA;IAAA,OAED,0BAAiB;MAAA;MACb,IAAI,CAAC,IAAI,CAAC5C,QAAQ,EAAE;MACpB,IAAI,CAACA,QAAQ,CAAC6C,UAAU,CAACc,KAAK,GAAG,UAACC,SAAS,EAAEC,KAAK,EAAK;QAAA;QACnDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,MAAI,CAAChC,iBAAiB,EAAE;QACxB,+BAAI,CAAC3B,cAAc,0DAAnB,iCAAI,EAAkBwD,SAAS,EAAEC,KAAK,CAAC;MAC3C,CAAC;MACD,IAAI,CAAC7D,QAAQ,CAAC6C,UAAU,CAACmB,QAAQ,GAAG,UAACJ,SAAS,EAAEC,KAAK,EAAK;QAAA;QACtDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,MAAI,CAAChC,iBAAiB,EAAE;QACxB,+BAAI,CAAC1B,iBAAiB,0DAAtB,iCAAI,EAAqBuD,SAAS,EAAEC,KAAK,CAAC;MAC9C,CAAC;MAED,IAAI,CAAC9B,iBAAiB,EAAE;IAC5B;;IAEA;EAAA;IAAA;IAAA,KAOA,eAAc;MACV,OAAO,IAAI,CAAC/B,QAAQ;IACxB,CAAC;IAAA,KAPD,aAAYsC,OAA4B,EAAE;MACtC,IAAI,CAACtC,QAAQ,GAAGsC,OAAO;MACvB,IAAI,CAAC2B,cAAc,EAAE;IACzB;EAAC;IAAA;IAAA,KAMD,aAAUrB,KAAa,EAAE;MACrB,IAAI,IAAI,CAAC9C,WAAW,EAAE;QAClB,IAAI,CAACkC,WAAW,CAAC,IAAI,CAAClC,WAAW,CAAC;QAClC,IAAI,CAACA,WAAW,GAAGS,SAAS;MAChC;MAEA,IAAIqC,KAAK,CAACa,MAAM,GAAG,CAAC,EAAE;QAClB,IAAI,CAAC3D,WAAW,GAAG,IAAId,UAAU,CAAC4D,KAAK,CAAC;QACxC,IAAI,CAAC9C,WAAW,CAACR,CAAC,GAAG,CAAC,EAAE;QACxB,IAAI,CAACsB,QAAQ,CAAC,IAAI,CAACd,WAAW,CAAC;MACnC;IACJ;;IAEA;EAAA;IAAA;IAAA,OACA,wBAAe;MACX,IAAI,IAAI,CAACD,OAAO,EAAE;QACd,IAAI,CAACF,IAAI,CAACuE,MAAM,CAACpF,SAAS,CAAC0B,SAAS,CAACC,OAAO,CAAC;QAE7C,IAAI,CAACuB,WAAW,CAAC,IAAI,CAACnC,OAAO,CAAC;QAC9B,IAAI,CAACA,OAAO,CAACoC,OAAO,EAAE;QACtB,IAAI,CAACpC,OAAO,GAAGU,SAAS;MAC5B,CAAC,MAAM;QACH,IAAI,CAACZ,IAAI,CAACuE,MAAM,CAACpF,SAAS,CAAC0B,SAAS,CAACC,OAAO,EAAE3B,SAAS,CAAC0B,SAAS,CAAC2D,MAAM,EAAE,IAAI,CAAC;QAE/E,IAAMC,OAAO,GAAG1F,OAAO,CAAC2F,IAAI,CAACjG,aAAa,CAAC;QAC3CgG,OAAO,CAACE,WAAW,CAACC,MAAM,GAAGhG,YAAY,CAACiG,IAAI;QAE9C,IAAMtC,KAAK,GAAG,IAAIzD,MAAM,CAAC2F,OAAO,CAAC;QACjClC,KAAK,CAACG,MAAM,CAAChD,CAAC,GAAG,GAAG;QACpB6C,KAAK,CAACG,MAAM,CAAC/C,CAAC,GAAG,GAAG;QACpB4C,KAAK,CAACuC,KAAK,GAAG,EAAE;QAChBvC,KAAK,CAACwC,MAAM,GAAG,EAAE;QACjBxC,KAAK,CAACrB,MAAM,GAAG,CAAC;QAChB,IAAI,CAAChB,OAAO,GAAGqC,KAAK;QACpB,IAAI,CAACvC,IAAI,CAACiB,QAAQ,CAAC,IAAI,CAACf,OAAO,CAAC;MACpC;IACJ;EAAC;IAAA;IAAA,OAED,kBAAS8E,KAAc,EAAE;MACrB,IAAMhE,KAAK,GAAGgE,KAAK,GAAG7F,SAAS,CAAC0B,SAAS,CAACoE,SAAS,GAAG9F,SAAS,CAAC0B,SAAS,CAACC,OAAO;MACjF,IAAI,IAAI,CAACZ,OAAO,EAAE;QACd,IAAI,CAACF,IAAI,CAACuE,MAAM,CAACvD,KAAK,EAAE7B,SAAS,CAAC0B,SAAS,CAAC2D,MAAM,EAAE,IAAI,CAAC;MAC7D;MAAE,IAAI,IAAI,CAAClE,WAAW,CAACK,IAAI,IAAIC,SAAS,EAAE;QACtC,IAAI,CAACZ,IAAI,CAACuE,MAAM,CAACvD,KAAK,EAAE7B,SAAS,CAAC4B,KAAK,CAAC,IAAI,CAACT,WAAW,CAACK,IAAI,CAAC,CAACK,KAAK,EAAE,GAAG,CAAC;MAC9E,CAAC,MAAM;QACH,IAAI,CAAChB,IAAI,CAACuE,MAAM,CAACvD,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC;MAC1C;IACJ;EAAC;IAAA;IAAA,KAED,eAAwB;MACpB,OAAO,IAAI,CAACf,SAAS,GAAG,IAAI,GAAG,KAAK;IACxC;EAAC;IAAA;IAAA,KAED,eAA2C;MACvC,OAAO,IAAI,CAACK,WAAW;IAC3B;EAAC;IAAA;IAAA,OAED,mBAAU0C,IAAY,EAAE;MACpB,QAAOA,IAAI;QACP,KAAK,QAAQ;UACT,OAAO7D,SAAS,CAAC+F,SAAS,CAACC,GAAG;QAClC,KAAK,QAAQ;UACT,OAAOhG,SAAS,CAAC+F,SAAS,CAACE,IAAI;QACnC,KAAK,QAAQ;UACT,OAAOjG,SAAS,CAAC+F,SAAS,CAACG,KAAK;MAAA;IAE5C;EAAC;EAAA;AAAA,EAjQsC1G,SAAS;AAAA,SAA/Bc,aAAa"},"metadata":{},"sourceType":"module"}