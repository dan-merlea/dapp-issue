{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar convertToList = function convertToList(input, transform) {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  if (!transform) {\n    return input;\n  }\n  return input.map(function (item) {\n    if (typeof item === \"string\") {\n      return transform(item);\n    }\n    return item;\n  });\n};\nexports.convertToList = convertToList;","map":{"version":3,"sources":["../../src/utils/convertToList.ts"],"names":[],"mappings":";;;;;AAAa,IAAA,aAAA,GAAgB,SAAhB,aAAA,CAAoB,KAAA,EAAoC,SACrE,EAAA;EACI,IAAI,CAAC,KAAA,CAAM,OAAQ,CAAA,KAAK,CACxB,EAAA;IACI,KAAA,GAAQ,CAAC,KAAU,CAAA;EAAA;EAGvB,IAAI,CAAC,SACL,EAAA;IACW,OAAA,KAAA;EAAA;EAGH,OAAA,KAAA,CAAyB,GAAI,CAAA,UAAC,IACtC,EAAA;IACQ,IAAA,OAAO,IAAA,KAAS,QACpB,EAAA;MACI,OAAO,SAAA,CAAU,IAAc,CAAA;IAAA;IAG5B,OAAA,IAAA;EAAA,CACV,CAAA;AACL,CAAA","sourcesContent":["export const convertToList = <T>(input: string | T | (string | T)[], transform?: (input: string) => T): T[] =>\n{\n    if (!Array.isArray(input))\n    {\n        input = [input as T];\n    }\n\n    if (!transform)\n    {\n        return input as T[];\n    }\n\n    return (input as (string | T)[]).map((item): T =>\n    {\n        if (typeof item === 'string')\n        {\n            return transform(item as string);\n        }\n\n        return item as T;\n    });\n};\n"]},"metadata":{},"sourceType":"script"}