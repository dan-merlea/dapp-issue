{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanValue = exports.BooleanType = void 0;\nvar types_1 = require(\"./types\");\nvar BooleanType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(BooleanType, _types_1$PrimitiveTyp);\n  var _super = _createSuper(BooleanType);\n  function BooleanType() {\n    _classCallCheck(this, BooleanType);\n    return _super.call(this, \"bool\");\n  }\n  _createClass(BooleanType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BooleanType.ClassName;\n    }\n  }]);\n  return BooleanType;\n}(types_1.PrimitiveType);\nexports.BooleanType = BooleanType;\nBooleanType.ClassName = \"BooleanType\";\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nvar BooleanValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(BooleanValue, _types_1$PrimitiveVal);\n  var _super2 = _createSuper(BooleanValue);\n  function BooleanValue(value) {\n    var _this;\n    _classCallCheck(this, BooleanValue);\n    _this = _super2.call(this, new BooleanType());\n    _this.value = value;\n    return _this;\n  }\n  _createClass(BooleanValue, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BooleanValue.ClassName;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another BooleanValue\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.value === other.value;\n    }\n  }, {\n    key: \"isTrue\",\n    value: function isTrue() {\n      return this.value === true;\n    }\n  }, {\n    key: \"isFalse\",\n    value: function isFalse() {\n      return !this.isTrue();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }]);\n  return BooleanValue;\n}(types_1.PrimitiveValue);\nexports.BooleanValue = BooleanValue;\nBooleanValue.ClassName = \"BooleanValue\";","map":null,"metadata":{},"sourceType":"script"}