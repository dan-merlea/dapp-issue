{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _toConsumableArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _asyncToGenerator = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar imageFormats = [\"png\", \"jpg\", \"jpeg\"];\nvar detectDefaults = {\n  extension: {\n    type: core.ExtensionType.DetectionParser,\n    priority: -1\n  },\n  test: function test() {\n    return Promise.resolve(true);\n  },\n  add: function () {\n    var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(formats) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", [].concat(_toConsumableArray(formats), imageFormats));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function add(_x) {\n      return _add.apply(this, arguments);\n    }\n    return add;\n  }(),\n  remove: function () {\n    var _remove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(formats) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", formats.filter(function (f) {\n                return !imageFormats.includes(f);\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    function remove(_x2) {\n      return _remove.apply(this, arguments);\n    }\n    return remove;\n  }()\n};\ncore.extensions.add(detectDefaults);\nexports.detectDefaults = detectDefaults;","map":{"version":3,"sources":["../../../src/detections/parsers/detectDefaults.ts"],"names":["ExtensionType","extensions"],"mappings":";;;;;;;;;AAGA,IAAM,YAAe,GAAA,CAAC,KAAO,EAAA,KAAA,EAAO,MAAM,CAAA;AAEnC,IAAM,cAAiB,GAAA;EAC1B,SAAW,EAAA;IACP,IAAA,EAAMA,IAAAA,CAAAA,aAAc,CAAA,eAAA;IACpB,QAAU,EAAA,CAAA;EAAA,CACd;EACA,IAAM,EAAA;IAAA,OAAwB,OAAQ,CAAA,OAAA,CAAQ,IAAI,CAAA;EAAA;EAClD,GAAA;IAAA,sEAAK,iBAAO,OAAA;MAAA;QAAA;UAAA;YAAA;cAAA,8DAAgB,OAAA,GAAY,YAAY;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EACpD,MAAA;IAAA,yEAAQ,kBAAO,OAAA;MAAA;QAAA;UAAA;YAAA;cAAA,kCAAY,OAAQ,CAAA,MAAA,CAAO,UAAC,CAAA;gBAAA,OAAM,CAAC,YAAA,CAAa,QAAS,CAAA,CAAC,CAAC;cAAA,EAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;AAC9E,CAAA;AAEAC,IAAAA,CAAAA,UAAAA,CAAW,GAAA,CAAI,cAAc,CAAA","sourcesContent":["import { extensions, ExtensionType } from '@pixi/core';\nimport type { FormatDetectionParser } from '..';\n\nconst imageFormats = ['png', 'jpg', 'jpeg'];\n\nexport const detectDefaults = {\n    extension: {\n        type: ExtensionType.DetectionParser,\n        priority: -1,\n    },\n    test: (): Promise<boolean> => Promise.resolve(true),\n    add: async (formats) => [...formats, ...imageFormats],\n    remove: async (formats) => formats.filter((f) => !imageFormats.includes(f)),\n} as FormatDetectionParser;\n\nextensions.add(detectDefaults);\n"]},"metadata":{},"sourceType":"script"}