{"ast":null,"code":"/*!\n * @pixi/mixin-get-global-position - v6.5.8\n * Compiled Sun, 23 Oct 2022 23:01:45 UTC\n *\n * @pixi/mixin-get-global-position is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n'use strict';\n\nvar display = require('@pixi/display');\nvar math = require('@pixi/math');\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @returns {PIXI.Point} The updated point.\n */\ndisplay.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point, skipUpdate) {\n  if (point === void 0) {\n    point = new math.Point();\n  }\n  if (skipUpdate === void 0) {\n    skipUpdate = false;\n  }\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n  return point;\n};","map":{"version":3,"mappings":";;;;;;;;;;;;AAGA;;;;;;;;;AASG;AACHA,qBAAa,CAACC,SAAS,CAACC,iBAAiB,GAAG,SAASA,iBAAiB,CAACC,KAA0B,EAAEC,UAAkB;EAA9C;IAAAD,KAAmB,iBAAK,EAAE;EAAA;EAAE;IAAAC,UAAkB;EAAA;EAEjH,IAAI,IAAI,CAACC,MAAM,EACf;IACI,IAAI,CAACA,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACC,QAAQ,EAAEJ,KAAK,EAAEC,UAAU,CAAC;EACzD,OAED;IACID,KAAK,CAACK,CAAC,GAAG,IAAI,CAACD,QAAQ,CAACC,CAAC;IACzBL,KAAK,CAACM,CAAC,GAAG,IAAI,CAACF,QAAQ,CAACE,CAAC;EAC5B;EAED,OAAON,KAAK;AAChB,CAAC","names":["DisplayObject","prototype","getGlobalPosition","point","skipUpdate","parent","toGlobal","position","x","y"],"sources":["../../src/index.ts"],"sourcesContent":["import { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @returns {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"]},"metadata":{},"sourceType":"script"}