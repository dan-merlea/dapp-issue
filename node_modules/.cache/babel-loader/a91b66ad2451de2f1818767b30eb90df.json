{"ast":null,"code":"var assert = require('nanoassert');\nvar wasm = require('./blake2b')();\nvar head = 64;\nvar freeList = [];\nmodule.exports = Blake2b;\nvar BYTES_MIN = module.exports.BYTES_MIN = 16;\nvar BYTES_MAX = module.exports.BYTES_MAX = 64;\nvar BYTES = module.exports.BYTES = 32;\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16;\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64;\nvar KEYBYTES = module.exports.KEYBYTES = 32;\nvar SALTBYTES = module.exports.SALTBYTES = 16;\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16;\nfunction Blake2b(digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert);\n  if (!(wasm && wasm.exports)) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)');\n  if (!digestLength) digestLength = 32;\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength);\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength);\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length);\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length);\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length);\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length);\n  }\n  if (!freeList.length) {\n    freeList.push(head);\n    head += 216;\n  }\n  this.digestLength = digestLength;\n  this.finalized = false;\n  this.pointer = freeList.pop();\n  wasm.memory.fill(0, 0, 64);\n  wasm.memory[0] = this.digestLength;\n  wasm.memory[1] = key ? key.length : 0;\n  wasm.memory[2] = 1; // fanout\n  wasm.memory[3] = 1; // depth\n\n  if (salt) wasm.memory.set(salt, 32);\n  if (personal) wasm.memory.set(personal, 48);\n  if (this.pointer + 216 > wasm.memory.length) wasm.realloc(this.pointer + 216); // we need 216 bytes for the state\n  wasm.exports.blake2b_init(this.pointer, this.digestLength);\n  if (key) {\n    this.update(key);\n    wasm.memory.fill(0, head, head + key.length); // whiteout key\n    wasm.memory[this.pointer + 200] = 128;\n  }\n}\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized');\n  assert(input, 'input must be TypedArray or Buffer');\n  if (head + input.length > wasm.memory.length) wasm.realloc(head + input.length);\n  wasm.memory.set(input, head);\n  wasm.exports.blake2b_update(this.pointer, head, head + input.length);\n  return this;\n};\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized');\n  this.finalized = true;\n  freeList.push(this.pointer);\n  wasm.exports.blake2b_final(this.pointer);\n  if (!enc || enc === 'binary') {\n    return wasm.memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength);\n  }\n  if (enc === 'hex') {\n    return hexSlice(wasm.memory, this.pointer + 128, this.digestLength);\n  }\n  assert(enc.length >= this.digestLength, 'input must be TypedArray or Buffer');\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = wasm.memory[this.pointer + 128 + i];\n  }\n  return enc;\n};\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest;\nBlake2b.WASM = wasm && wasm.buffer;\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined';\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop;\n  if (!wasm) return cb(new Error('WebAssembly not supported'));\n\n  // backwards compat, can be removed in a new major\n  var p = new Promise(function (reject, resolve) {\n    wasm.onload(function (err) {\n      if (err) resolve();else reject();\n      cb(err);\n    });\n  });\n  return p;\n};\nBlake2b.prototype.ready = Blake2b.ready;\nfunction noop() {}\nfunction hexSlice(buf, start, len) {\n  var str = '';\n  for (var i = 0; i < len; i++) {\n    str += toHex(buf[start + i]);\n  }\n  return str;\n}\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}","map":{"version":3,"names":["assert","require","wasm","head","freeList","module","exports","Blake2b","BYTES_MIN","BYTES_MAX","BYTES","KEYBYTES_MIN","KEYBYTES_MAX","KEYBYTES","SALTBYTES","PERSONALBYTES","digestLength","key","salt","personal","noAssert","Error","length","push","finalized","pointer","pop","memory","fill","set","realloc","blake2b_init","update","prototype","input","blake2b_update","digest","enc","blake2b_final","slice","hexSlice","i","final","WASM","buffer","SUPPORTED","WebAssembly","ready","cb","noop","p","Promise","reject","resolve","onload","err","buf","start","len","str","toHex","n","toString"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/blake2b-wasm/index.js"],"sourcesContent":["var assert = require('nanoassert')\nvar wasm = require('./blake2b')()\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!(wasm && wasm.exports)) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n\n  wasm.memory.fill(0, 0, 64)\n  wasm.memory[0] = this.digestLength\n  wasm.memory[1] = key ? key.length : 0\n  wasm.memory[2] = 1 // fanout\n  wasm.memory[3] = 1 // depth\n\n  if (salt) wasm.memory.set(salt, 32)\n  if (personal) wasm.memory.set(personal, 48)\n\n  if (this.pointer + 216 > wasm.memory.length) wasm.realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.exports.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    wasm.memory.fill(0, head, head + key.length) // whiteout key\n    wasm.memory[this.pointer + 200] = 128\n  }\n}\n\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input, 'input must be TypedArray or Buffer')\n\n  if (head + input.length > wasm.memory.length) wasm.realloc(head + input.length)\n  wasm.memory.set(input, head)\n  wasm.exports.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.exports.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return wasm.memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (enc === 'hex') {\n    return hexSlice(wasm.memory, this.pointer + 128, this.digestLength)\n  }\n\n  assert(enc.length >= this.digestLength, 'input must be TypedArray or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = wasm.memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm && wasm.buffer\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n\n  // backwards compat, can be removed in a new major\n  var p = new Promise(function (reject, resolve) {\n    wasm.onload(function (err) {\n      if (err) resolve()\n      else reject()\n      cb(err)\n    })\n  })\n\n  return p\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nfunction noop () {}\n\nfunction hexSlice (buf, start, len) {\n  var str = ''\n  for (var i = 0; i < len; i++) str += toHex(buf[start + i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}