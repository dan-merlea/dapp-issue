{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar constants = require('@pixi/constants');\nfunction setPrecision(src, requestedPrecision, maxSupportedPrecision) {\n  if (src.substring(0, 9) !== \"precision\") {\n    var precision = requestedPrecision;\n    if (requestedPrecision === constants.PRECISION.HIGH && maxSupportedPrecision !== constants.PRECISION.HIGH) {\n      precision = constants.PRECISION.MEDIUM;\n    }\n    return \"precision \".concat(precision, \" float;\\n\").concat(src);\n  } else if (maxSupportedPrecision !== constants.PRECISION.HIGH && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\nexports.setPrecision = setPrecision;","map":{"version":3,"sources":["../../../src/shader/utils/setPrecision.ts"],"names":["PRECISION"],"mappings":";;;;;;AAW6B,SAAA,YAAA,CAAA,GAAA,EAAa,kBAAA,EAA+B,qBACzE,EAAA;EACI,IAAI,GAAI,CAAA,SAAA,CAAU,CAAG,EAAA,CAAC,CAAA,KAAM,WAC5B,EAAA;IAEI,IAAI,SAAY,GAAA,kBAAA;IAGhB,IAAI,kBAAuB,KAAA,SAAA,CAAA,SAAA,CAAU,IAAQ,IAAA,qBAAA,KAA0BA,SAAAA,CAAAA,SAAAA,CAAU,IACjF,EAAA;MACI,SAAA,GAAYA,SAAAA,CAAAA,SAAU,CAAA,MAAA;IAAA;IAG1B,2BAAoB,SAAA,sBAAqB,GAAA;EAAA,CAC7C,MAAA,IACS,qBAAA,KAA0BA,SAAAA,CAAAA,SAAU,CAAA,IAAA,IAAQ,GAAA,CAAI,SAAU,CAAA,CAAA,EAAG,EAAE,CAAA,KAAM,iBAC9E,EAAA;IAEW,OAAA,GAAA,CAAI,OAAQ,CAAA,iBAAA,EAAmB,mBAAmB,CAAA;EAAA;EAGtD,OAAA,GAAA;AACX","sourcesContent":["import { PRECISION } from '@pixi/constants';\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n * @private\n * @param {string} src - The shader source\n * @param {PIXI.PRECISION} requestedPrecision - The request float precision of the shader.\n * @param {PIXI.PRECISION} maxSupportedPrecision - The maximum precision the shader supports.\n * @returns {string} modified shader source\n */\nexport function setPrecision(src: string, requestedPrecision: PRECISION, maxSupportedPrecision: PRECISION): string\n{\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = requestedPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH)\n        {\n            precision = PRECISION.MEDIUM;\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n"]},"metadata":{},"sourceType":"script"}