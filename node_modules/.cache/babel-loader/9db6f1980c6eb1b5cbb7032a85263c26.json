{"ast":null,"code":"import { a as w } from \"./chunk-MDICBPXF.js\";\nimport { a as n } from \"./chunk-6ZGFYJ6T.js\";\nimport { a as o, b as r, e as c, m as a } from \"./chunk-HBP5N4FR.js\";\nimport { createSlice as p } from \"@reduxjs/toolkit\";\nimport y from \"lodash.omit\";\nvar k,\n  C,\n  i,\n  u,\n  D,\n  B,\n  f = c(function () {\n    var _i$actions;\n    a();\n    w();\n    k = {\n      id: \"not-configured\",\n      chainId: \"\",\n      name: \"NOT CONFIGURED\",\n      egldLabel: \"\",\n      decimals: \"18\",\n      digits: \"4\",\n      gasPerDataByte: \"1500\",\n      walletConnectDeepLink: \"\",\n      walletConnectBridgeAddress: \"\",\n      walletConnectV2RelayAddress: \"\",\n      walletConnectV2ProjectId: \"\",\n      walletAddress: \"\",\n      apiAddress: \"\",\n      explorerAddress: \"\",\n      apiTimeout: \"4000\"\n    }, C = {\n      network: k,\n      chainID: \"-1\"\n    }, i = p({\n      name: \"appConfig\",\n      initialState: C,\n      reducers: {\n        initializeNetworkConfig: function initializeNetworkConfig(t, e) {\n          var l = n(e.payload.walletConnectBridgeAddresses),\n            d = n(e.payload.walletConnectV2RelayAddresses),\n            s = y(e.payload, \"walletConnectBridgeAddresses\", \"walletConnectV2RelayAddresses\");\n          t.network = r(o(o({}, t.network), s), {\n            walletConnectBridgeAddress: l,\n            walletConnectV2RelayAddress: d\n          });\n        },\n        setChainID: function setChainID(t, e) {\n          t.chainID = e.payload;\n        }\n      }\n    }), (_i$actions = i.actions, u = _i$actions.initializeNetworkConfig, D = _i$actions.setChainID), B = i.reducer;\n  });\nexport { k as a, i as b, u as c, D as d, B as e, f };","map":null,"metadata":{},"sourceType":"module"}