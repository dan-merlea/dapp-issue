{"ast":null,"code":"import _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { i as a } from \"./chunk-V2DQWH6R.js\";\nimport { a as I } from \"./chunk-UV6VUF3Z.js\";\nimport { a as n } from \"./chunk-CU7LVRKG.js\";\nimport { a as i } from \"./chunk-HZKP5C5V.js\";\nimport { h as S, i as u, j as d, k as y, s as C } from \"./chunk-NO5ZX2I2.js\";\nimport { a as g, b as x, m as t } from \"./chunk-HBP5N4FR.js\";\nt();\nt();\nt();\nt();\nC();\nt();\nfunction w(r) {\n  var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : a(i.getState());\n  return \"\".concat(o, \"/address/\").concat(r);\n}\nvar T = function T(r) {\n    return r.transactions;\n  },\n  e = n(T, function (r) {\n    return r.signedTransactions;\n  }),\n  G = n(T, function (r) {\n    return r.signTransactionsError;\n  }),\n  H = n(T, function (r) {\n    return r.signTransactionsCancelMessage;\n  }),\n  f = function f(r) {\n    return function (o) {\n      return Object.entries(o).reduce(function (s, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          R = _ref2[0],\n          l = _ref2[1];\n        return r(l.status) && (s[R] = l), s;\n      }, {});\n    };\n  },\n  J = n(e, f(S)),\n  K = n(e, f(u)),\n  N = n(e, f(d)),\n  Q = n(e, f(y)),\n  U = n(T, function (r) {\n    var o;\n    return (r == null ? void 0 : r.transactionsToSign) == null ? null : x(g({}, r.transactionsToSign), {\n      transactions: ((o = r == null ? void 0 : r.transactionsToSign) == null ? void 0 : o.transactions.map(function (s) {\n        return I(s);\n      })) || []\n    });\n  }),\n  V = n(e, function (r, o) {\n    return o;\n  }, function (r, o) {\n    return o != null ? (r == null ? void 0 : r[o]) || {} : {};\n  });\nfunction ir(r) {\n  var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : a(i.getState());\n  return \"\".concat(o, \"/transactions/\").concat(r);\n}\nexport { ir as a, w as b, T as c, e as d, G as e, H as f, J as g, K as h, N as i, Q as j, U as k, V as l };","map":null,"metadata":{},"sourceType":"module"}