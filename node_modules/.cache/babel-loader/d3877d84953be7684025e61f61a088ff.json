{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { Keys, Entities } from \"@krogan/common\";\nimport { Client } from \"colyseus.js\";\nimport { useEffect } from \"react\";\nimport { useRoomDispatch } from \"context/room\";\nimport { serverUrl } from \"utils/server\";\nimport { playerManager } from \"managers\";\nimport { useContextRef } from \"hooks/useContextRef\";\nimport { useCoreContext } from \"core\";\nexport var useGameManager = function useGameManager(appManager, gameManager, eventHandler) {\n  _s();\n  var _useContextRef = useContextRef(),\n    _useContextRef2 = _slicedToArray(_useContextRef, 2),\n    _useContextRef2$ = _useContextRef2[0],\n    gameRoom = _useContextRef2$.gameRoom,\n    player = _useContextRef2$.player,\n    hud = _useContextRef2$.hud,\n    contextRef = _useContextRef2[1];\n  var _useCoreContext = useCoreContext(),\n    account = _useCoreContext.account,\n    address = _useCoreContext.address;\n  var dispatch = useRoomDispatch();\n  var client = new Client(serverUrl());\n\n  // LIFECYCLE\n  useEffect(function () {\n    // App & Game Events\n    eventHandler.on('spaceshipControl', joinRoom);\n    eventHandler.on('spaceshipSelfControl', activateSpaceshipSelfControl);\n    eventHandler.on('largeHexClick', largeHexClick);\n    eventHandler.on('closePopup', closePopup);\n    eventHandler.on('asteroidClick', asteroidClick);\n    eventHandler.on('mineAsteroid', mineAsteroid);\n    return function cleanup() {\n      deinit();\n    };\n  }, []);\n  var deinit = function deinit() {\n    // Colyseus\n    if (gameRoom) gameRoom.leave();\n\n    // App & Game Events\n    eventHandler.remove('spaceshipControl', joinRoom);\n    eventHandler.remove('spaceshipSelfControl', activateSpaceshipSelfControl);\n    eventHandler.remove('largeHexClick', largeHexClick);\n    eventHandler.remove('closePopup', closePopup);\n    eventHandler.remove('asteroidClick', asteroidClick);\n    eventHandler.remove('mineAsteroid', mineAsteroid);\n\n    // Inputs\n    window.document.removeEventListener('keydown', handleKeyDown);\n    window.document.removeEventListener('keyup', handleKeyUp);\n  };\n  var joinRoom = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(spaceship, previous) {\n      var _ref2, gameRoom, options, roomName, action;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // avoid connecting to the same spaceship\n              _ref2 = contextRef.current, gameRoom = _ref2.gameRoom;\n              if (!(previous && previous.nonce == spaceship.nonce)) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", console.error(\"Same spaceship\"));\n            case 3:\n              if (!(!player || !account)) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\", console.error(\"Something went wrong with the account!\"));\n            case 5:\n              options = {\n                address: address,\n                spaceship: spaceship.nonce\n              };\n              roomName = Entities.CoordinateModel.getRoomName(spaceship.coordinate.x, spaceship.coordinate.y, spaceship.coordinate.z);\n              if ((gameRoom === null || gameRoom === void 0 ? void 0 : gameRoom.name) != roomName) {\n                if (gameRoom) {\n                  console.log('Leaving previous game room');\n                  gameRoom.leave(true);\n                }\n\n                // join the hex room if not there already\n                client.joinOrCreate(roomName, options).then(function (room) {\n                  dispatch({\n                    type: 'setGameRoom',\n                    gameRoom: room\n                  });\n                }).catch(function (err) {\n                  console.error(err);\n                });\n              } else if (previous) {\n                console.log('Switching spaceship inside the same room');\n                action = {\n                  type: 'switch',\n                  ts: Date.now(),\n                  nonce: previous.nonce,\n                  value: {\n                    nonce: spaceship.nonce\n                  }\n                };\n                sendToServer(action);\n              }\n              gameManager.leaveGameRoom();\n              appManager.startSpaceshipControl();\n              dispatch({\n                type: 'setSelectedSpaceship',\n                spaceship: undefined\n              });\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function joinRoom(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (!gameRoom) return;\n    console.log(\"Connected to game room: \".concat(gameRoom.id, \" with playerId: \").concat(gameRoom.sessionId));\n    gameManager.sendToServer = sendToServer;\n    playerManager.playerId = gameRoom.sessionId;\n    gameManager.changeHudSpaceship = changeSpaceship;\n    setupGameRoomEventHandlers();\n    setupUserEventHandlers();\n  }, [gameRoom]);\n  useEffect(function () {\n    // Leave the game if spaceship control stopped\n    if (!hud.controlledSpaceship && gameRoom) {\n      console.log('Leaving previous game room');\n      gameRoom.leave(true);\n      dispatch({\n        type: 'setGameRoom',\n        gameRoom: undefined\n      });\n    }\n  }, [hud]);\n\n  // HANDLERS: EventManager\n\n  var closePopup = function closePopup() {\n    dispatch({\n      type: 'setAsteroid',\n      asteroid: undefined\n    });\n    dispatch({\n      type: 'setSelectedPoint',\n      point: undefined\n    });\n  };\n\n  // Asteroid\n\n  var asteroidClick = function asteroidClick(value) {\n    dispatch({\n      type: 'setAsteroid',\n      asteroid: value\n    });\n  };\n  var mineAsteroid = function mineAsteroid(value) {\n    dispatch({\n      type: 'setAsteroid',\n      asteroid: undefined\n    });\n    gameManager.createAndSendAction('mine', {\n      nonce: value.nonce\n    });\n  };\n\n  // Large HEX\n  var largeHexClick = function largeHexClick(value) {\n    dispatch({\n      type: 'setSelectedPoint',\n      point: value\n    });\n  };\n\n  // Spaceship\n  var activateSpaceshipSelfControl = function activateSpaceshipSelfControl(value) {\n    if (value.type == 'goto') gameManager.moveToDestination(value.point);\n    dispatch({\n      type: 'setSelectedPoint',\n      point: undefined\n    });\n  };\n\n  // HANDLERS: GameManager\n\n  var sendToServer = function sendToServer(action) {\n    var _ref3 = contextRef.current,\n      gameRoom = _ref3.gameRoom;\n    if (!gameRoom) return;\n    gameRoom.send(action.type, action);\n  };\n  var changeSpaceship = function changeSpaceship(spaceship) {\n    dispatch({\n      type: 'setControlledSpaceship',\n      spaceship: spaceship\n    });\n    // todo: send this to server also if not recently joined\n    // useful for quick change of control\n  };\n\n  var setupUserEventHandlers = function setupUserEventHandlers() {\n    // Listen to Game events\n    window.document.addEventListener('keydown', handleKeyDown);\n    window.document.addEventListener('keyup', handleKeyUp);\n  };\n  var setupGameRoomEventHandlers = function setupGameRoomEventHandlers() {\n    if (!gameRoom) return;\n    console.log(\"[Game][Connected] \".concat(gameRoom.sessionId));\n\n    // Listen for state changes\n    gameRoom.onMessage('broadcast', handleMessage);\n    gameManager.setState(gameRoom.state);\n  };\n\n  // HANDLERS: Game Events\n\n  // HANDLERS: Colyseus\n\n  var handleMessage = function handleMessage(message) {};\n\n  // HANDLERS: Inputs\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!gameManager) return;\n    var key = event.code;\n    if (Keys.LEFT.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.left = true;\n    }\n    if (Keys.UP.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.up = true;\n    }\n    if (Keys.RIGHT.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.right = true;\n    }\n    if (Keys.DOWN.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.down = true;\n    }\n  };\n  var handleKeyUp = function handleKeyUp(event) {\n    if (!gameManager) return;\n    var key = event.code;\n    if (Keys.LEFT.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.left = false;\n    }\n    if (Keys.UP.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.up = false;\n    }\n    if (Keys.RIGHT.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.right = false;\n    }\n    if (Keys.DOWN.includes(key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      gameManager.inputs.down = false;\n    }\n  };\n\n  // METHODS\n\n  var leave = function leave() {\n    gameRoom === null || gameRoom === void 0 ? void 0 : gameRoom.leave();\n  };\n  return {\n    gameManager: gameManager,\n    leave: leave\n  };\n};\n_s(useGameManager, \"ze4w/s1/lyiBUKcIhzc6yKZv2uo=\", false, function () {\n  return [useContextRef, useCoreContext, useRoomDispatch];\n});","map":{"version":3,"names":["Keys","Entities","Client","useEffect","useRoomDispatch","serverUrl","playerManager","useContextRef","useCoreContext","useGameManager","appManager","gameManager","eventHandler","gameRoom","player","hud","contextRef","account","address","dispatch","client","on","joinRoom","activateSpaceshipSelfControl","largeHexClick","closePopup","asteroidClick","mineAsteroid","cleanup","deinit","leave","remove","window","document","removeEventListener","handleKeyDown","handleKeyUp","spaceship","previous","current","nonce","console","error","options","roomName","CoordinateModel","getRoomName","coordinate","x","y","z","name","log","joinOrCreate","then","room","type","catch","err","action","ts","Date","now","value","sendToServer","leaveGameRoom","startSpaceshipControl","undefined","id","sessionId","playerId","changeHudSpaceship","changeSpaceship","setupGameRoomEventHandlers","setupUserEventHandlers","controlledSpaceship","asteroid","point","createAndSendAction","moveToDestination","send","addEventListener","onMessage","handleMessage","setState","state","message","event","key","code","LEFT","includes","preventDefault","stopPropagation","inputs","left","UP","up","RIGHT","right","DOWN","down"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/rooms/useGameManager.ts"],"sourcesContent":["import { EventHandler, Keys, Models, Types, Entities } from \"@krogan/common\"\nimport { Client, Room } from \"colyseus.js\"\nimport { useEffect } from \"react\"\nimport { useRoomDispatch } from \"context/room\"\nimport { serverUrl } from \"utils/server\"\nimport { MapSpaceshipSprite, SpaceshipSprite, TileContainer } from \"sprites\"\nimport { Spaceship } from \"state/Spaceship\"\nimport { GameManager, playerManager } from \"managers\"\nimport { IAppManager } from \"managers/AppManager\"\nimport { GameState } from \"state/GameState\"\nimport { IPoint } from \"pixi.js\"\nimport { Asteroid } from \"state/Asteroid\"\nimport { useContextRef } from \"hooks/useContextRef\"\nimport { StateType } from \"context/room/room.state\"\nimport { useCoreContext } from \"core\"\n\nexport interface HudType {\n    playerId: string,\n    messages: Models.MessageJSON[],\n    announce: string,\n    stats?: Models.StatsJSON,\n    selectedTile?: TileContainer,\n    selectedSpaceship?: MapSpaceshipSprite,\n}\n\nexport const useGameManager = (appManager: IAppManager, gameManager: GameManager, eventHandler: EventHandler) => {\n\n    const [{ gameRoom, player, hud }, contextRef] = useContextRef()\n    const { account, address } = useCoreContext()\n\tconst dispatch = useRoomDispatch()\n\tconst client = new Client(serverUrl())\n\n\t// LIFECYCLE\n    useEffect(() => {\n        \n        // App & Game Events\n\t\teventHandler.on('spaceshipControl', joinRoom)\n        eventHandler.on('spaceshipSelfControl', activateSpaceshipSelfControl)\n\n        eventHandler.on('largeHexClick', largeHexClick)\n        eventHandler.on('closePopup', closePopup)\n        \n        eventHandler.on('asteroidClick', asteroidClick)\n        eventHandler.on('mineAsteroid', mineAsteroid)\n\n        return function cleanup() {\n            deinit()\n        }\n    }, [])\n\n    const deinit = () => {\n        // Colyseus\n        if (gameRoom) gameRoom.leave()\n\n        // App & Game Events\n\t\teventHandler.remove('spaceshipControl', joinRoom)\n        eventHandler.remove('spaceshipSelfControl', activateSpaceshipSelfControl)\n\n        eventHandler.remove('largeHexClick', largeHexClick)\n        eventHandler.remove('closePopup', closePopup)\n\n        eventHandler.remove('asteroidClick', asteroidClick)\n        eventHandler.remove('mineAsteroid', mineAsteroid)\n\n        // Inputs\n        window.document.removeEventListener('keydown', handleKeyDown)\n        window.document.removeEventListener('keyup', handleKeyUp)\n    }\n\n    const joinRoom = async (spaceship: Spaceship, previous?: Spaceship) => {\n        // avoid connecting to the same spaceship\n        const { gameRoom } = contextRef.current as StateType\n        if (previous && previous.nonce == spaceship.nonce) return console.error(`Same spaceship`)\n\n        // TODO: return to /home\n        if (!player || !account) return console.error(`Something went wrong with the account!`)\n\n        const options: Types.IPlayerOptions = {\n            address: address,\n            spaceship: spaceship.nonce\n        }\n\n        const roomName = Entities.CoordinateModel.getRoomName(\n            spaceship.coordinate.x,\n            spaceship.coordinate.y,\n            spaceship.coordinate.z,\n        )\n        \n        if (gameRoom?.name != roomName) {\n            if (gameRoom) {\n                console.log('Leaving previous game room')\n                gameRoom.leave(true)\n            }\n\n            // join the hex room if not there already\n            client.joinOrCreate(\n                roomName,\n                options\n            ).then((room) => {\n                dispatch({ type: 'setGameRoom', gameRoom: room as Room<GameState> })\n            }).catch(err => {\n                console.error(err)\n            })\n        } else if (previous) {\n            console.log('Switching spaceship inside the same room')\n            const action: Models.ActionJSON = {\n                type: 'switch',\n                ts: Date.now(),\n                nonce: previous.nonce,\n                value: {\n                    nonce: spaceship.nonce\n                },\n            }\n            sendToServer(action)\n        }\n\n        gameManager.leaveGameRoom()\n        appManager.startSpaceshipControl()\n        dispatch({ type: 'setSelectedSpaceship', spaceship: undefined })\n    }\n\n    useEffect(() => {\n        if (!gameRoom) return\n        console.log(`Connected to game room: ${gameRoom.id} with playerId: ${gameRoom.sessionId}`)\n        \n        gameManager.sendToServer = sendToServer\n        playerManager.playerId = gameRoom.sessionId\n\n        gameManager.changeHudSpaceship = changeSpaceship\n\n        setupGameRoomEventHandlers()\n        setupUserEventHandlers()\n    }, [gameRoom])\n\n\n    useEffect(() => {\n        // Leave the game if spaceship control stopped\n        if (!hud.controlledSpaceship && gameRoom) {\n            console.log('Leaving previous game room')\n            gameRoom.leave(true)\n            dispatch({ type: 'setGameRoom', gameRoom: undefined })\n        }\n    }, [hud])\n\n    // HANDLERS: EventManager\n    \n    const closePopup = () => {\n        dispatch({ type: 'setAsteroid', asteroid: undefined })\n        dispatch({ type: 'setSelectedPoint', point: undefined })\n    }\n\n    // Asteroid\n\n    const asteroidClick = (value: Asteroid) => {\n        dispatch({ type: 'setAsteroid', asteroid: value })\n    }\n\n    const mineAsteroid = (value: Asteroid) => {\n        dispatch({ type: 'setAsteroid', asteroid: undefined })\n        gameManager.createAndSendAction('mine', {\n            nonce: value.nonce\n        })\n    }\n\n    // Large HEX\n    const largeHexClick = (value: IPoint) => {\n        dispatch({ type: 'setSelectedPoint', point: value })\n    }\n\n    // Spaceship\n    const activateSpaceshipSelfControl = (value: { type: string, point: IPoint }) => {\n        if (value.type == 'goto') gameManager.moveToDestination(value.point)\n        dispatch({ type: 'setSelectedPoint', point: undefined })\n    }\n\n\t// HANDLERS: GameManager\n    \n\tconst sendToServer = (action: Models.ActionJSON) => {\n        const { gameRoom } = contextRef.current as StateType\n        if (!gameRoom) return\n        gameRoom.send(action.type, action)\n    }\n\n    const changeSpaceship = (spaceship: SpaceshipSprite) => {\n        dispatch({ type: 'setControlledSpaceship', spaceship: spaceship })\n        // todo: send this to server also if not recently joined\n        // useful for quick change of control\n    }\n\n    const setupUserEventHandlers = () => {\n         // Listen to Game events\n        window.document.addEventListener('keydown', handleKeyDown)\n        window.document.addEventListener('keyup', handleKeyUp)\n    }\n\n    const setupGameRoomEventHandlers = () => {\n\t\tif (!gameRoom) return\n\n        console.log(`[Game][Connected] ${gameRoom.sessionId}`)\n\t\t\t\n\t\t// Listen for state changes\n\t\tgameRoom.onMessage('broadcast', handleMessage)\n        gameManager.setState(gameRoom.state)\n\t}\n\n    // HANDLERS: Game Events\n\n\n\t// HANDLERS: Colyseus\n\n    const handleMessage = (message: Models.MessageJSON) => {\n        \n    }\n\n    // HANDLERS: Inputs\n\n    const handleKeyDown = (event: any) => {\n        if (!gameManager) return\n        const key = event.code\n\n        if (Keys.LEFT.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.left = true\n        }\n\n        if (Keys.UP.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.up = true\n        }\n\n        if (Keys.RIGHT.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.right = true\n        }\n\n        if (Keys.DOWN.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.down = true\n        }\n    }\n\n    const handleKeyUp = (event: any) => {\n        if (!gameManager) return\n        const key = event.code\n\n        if (Keys.LEFT.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.left = false\n        }\n\n        if (Keys.UP.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.up = false\n        }\n\n        if (Keys.RIGHT.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.right = false\n        }\n\n        if (Keys.DOWN.includes(key)) {\n            event.preventDefault()\n            event.stopPropagation()\n            gameManager.inputs.down = false\n        }\n    }\n\n    // METHODS\n\n\tconst leave = () => {\n\t\tgameRoom?.leave()\n\t}\n\n\treturn { \n        gameManager,\n\t\tleave\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}