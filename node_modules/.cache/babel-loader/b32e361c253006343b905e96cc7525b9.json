{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fields = exports.Field = exports.FieldDefinition = void 0;\nvar errors = __importStar(require(\"../../errors\"));\nvar typeExpressionParser_1 = require(\"./typeExpressionParser\");\nvar FieldDefinition = /*#__PURE__*/function () {\n  function FieldDefinition(name, description, type) {\n    _classCallCheck(this, FieldDefinition);\n    this.name = name;\n    this.description = description;\n    this.type = type;\n  }\n  _createClass(FieldDefinition, null, [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var parsedType = new typeExpressionParser_1.TypeExpressionParser().parse(json.type);\n      return new FieldDefinition(json.name, json.description, parsedType);\n    }\n  }]);\n  return FieldDefinition;\n}();\nexports.FieldDefinition = FieldDefinition;\nvar Field = /*#__PURE__*/function () {\n  function Field(value) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    _classCallCheck(this, Field);\n    this.value = value;\n    this.name = name;\n  }\n  _createClass(Field, [{\n    key: \"checkTyping\",\n    value: function checkTyping(expectedDefinition) {\n      var actualType = this.value.getType();\n      if (!actualType.equals(expectedDefinition.type)) {\n        throw new errors.ErrTypingSystem(\"check type of field \\\"\".concat(expectedDefinition.name, \"; expected: \").concat(expectedDefinition.type, \", actual: \").concat(actualType, \"\\\"\"));\n      }\n      if (this.name != expectedDefinition.name) {\n        throw new errors.ErrTypingSystem(\"check name of field \\\"\".concat(expectedDefinition.name, \"\\\"\"));\n      }\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.name == other.name && this.value.equals(other.value);\n    }\n  }]);\n  return Field;\n}();\nexports.Field = Field;\nvar Fields = /*#__PURE__*/function () {\n  function Fields() {\n    _classCallCheck(this, Fields);\n  }\n  _createClass(Fields, null, [{\n    key: \"checkTyping\",\n    value: function checkTyping(fields, definitions) {\n      if (fields.length != definitions.length) {\n        throw new errors.ErrTypingSystem(\"fields length vs. field definitions length\");\n      }\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n        var definition = definitions[i];\n        field.checkTyping(definition);\n      }\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(actual, expected) {\n      if (actual.length != expected.length) {\n        return false;\n      }\n      for (var i = 0; i < actual.length; i++) {\n        var selfField = actual[i];\n        var otherField = expected[i];\n        if (!selfField.equals(otherField)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"getNamesOfTypeDependencies\",\n    value: function getNamesOfTypeDependencies(definitions) {\n      var dependencies = [];\n      var _iterator = _createForOfIteratorHelper(definitions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var definition = _step.value;\n          dependencies.push(definition.type.getName());\n          dependencies.push.apply(dependencies, _toConsumableArray(definition.type.getNamesOfDependencies()));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return _toConsumableArray(new Set(dependencies));\n    }\n  }]);\n  return Fields;\n}();\nexports.Fields = Fields;","map":null,"metadata":{},"sourceType":"script"}