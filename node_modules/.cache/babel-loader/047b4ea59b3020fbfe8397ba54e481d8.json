{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.H256BinaryCodec = void 0;\nvar h256_1 = require(\"../typesystem/h256\");\nvar H256BinaryCodec = /*#__PURE__*/function () {\n  function H256BinaryCodec() {\n    _classCallCheck(this, H256BinaryCodec);\n  }\n  _createClass(H256BinaryCodec, [{\n    key: \"decodeNested\",\n    value:\n    /**\n     * Reads and decodes a H256Value from a given buffer.\n     *\n     * @param buffer the input buffer\n     */\n    function decodeNested(buffer) {\n      // We don't check the size of the buffer, we just read 32 bytes.\n      var slice = buffer.slice(0, 32);\n      return [new h256_1.H256Value(slice), 32];\n    }\n    /**\n     * Reads and decodes a H256Value from a given buffer.\n     *\n     * @param buffer the input buffer\n     */\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer) {\n      var _this$decodeNested = this.decodeNested(buffer),\n        _this$decodeNested2 = _slicedToArray(_this$decodeNested, 2),\n        decoded = _this$decodeNested2[0],\n        length = _this$decodeNested2[1];\n      return decoded;\n    }\n    /**\n     * Encodes a H256Value to a buffer.\n     */\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(primitive) {\n      return primitive.valueOf();\n    }\n    /**\n     * Encodes a H256Value to a buffer.\n     */\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(primitive) {\n      return primitive.valueOf();\n    }\n  }]);\n  return H256BinaryCodec;\n}();\nexports.H256BinaryCodec = H256BinaryCodec;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/h256.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AAA+C,IAElC,eAAe;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACxB;;;;AAIG;IACH,sBAAa,MAAc,EAAA;MACvB;MACA,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAC/B,OAAO,CAAC,IAAI,MAAA,CAAA,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;IACrC;IAEA;;;;AAIG;EAJH;IAAA;IAAA,OAKA,wBAAe,MAAc,EAAA;MACzB,yBAAwB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QAAA;QAA5C,OAAO;QAAE,MAAM;MACpB,OAAO,OAAO;IAClB;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGA,sBAAa,SAAoB,EAAA;MAC7B,OAAO,SAAS,CAAC,OAAO,EAAE;IAC9B;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGA,wBAAe,SAAoB,EAAA;MAC/B,OAAO,SAAS,CAAC,OAAO,EAAE;IAC9B;EAAC;EAAA;AAAA;AAlCL,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.H256BinaryCodec = void 0;\nconst h256_1 = require(\"../typesystem/h256\");\nclass H256BinaryCodec {\n    /**\n     * Reads and decodes a H256Value from a given buffer.\n     *\n     * @param buffer the input buffer\n     */\n    decodeNested(buffer) {\n        // We don't check the size of the buffer, we just read 32 bytes.\n        let slice = buffer.slice(0, 32);\n        return [new h256_1.H256Value(slice), 32];\n    }\n    /**\n     * Reads and decodes a H256Value from a given buffer.\n     *\n     * @param buffer the input buffer\n     */\n    decodeTopLevel(buffer) {\n        let [decoded, length] = this.decodeNested(buffer);\n        return decoded;\n    }\n    /**\n     * Encodes a H256Value to a buffer.\n     */\n    encodeNested(primitive) {\n        return primitive.valueOf();\n    }\n    /**\n     * Encodes a H256Value to a buffer.\n     */\n    encodeTopLevel(primitive) {\n        return primitive.valueOf();\n    }\n}\nexports.H256BinaryCodec = H256BinaryCodec;\n//# sourceMappingURL=h256.js.map"]},"metadata":{},"sourceType":"script"}