{"ast":null,"code":"/*!\n * @pixi/utils - v6.5.8\n * Compiled Sun, 23 Oct 2022 23:01:45 UTC\n *\n * @pixi/utils is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { settings } from '@pixi/settings';\nexport { isMobile } from '@pixi/settings';\nexport { default as EventEmitter } from 'eventemitter3';\nexport { default as earcut } from 'earcut';\nimport { parse, format, resolve } from 'url';\nimport { BLEND_MODES } from '@pixi/constants';\n\n/**\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\nvar url = {\n  parse: parse,\n  format: format,\n  resolve: resolve\n};\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path));\n  }\n}\nfunction removeUrlParams(url) {\n  var re = url.split('?')[0];\n  return re.split('#')[0];\n}\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i);\n    } else if (code === 47) {\n      break;\n    } else {\n      code = 47;\n    }\n    if (code === 47) {\n      if (lastSlash === i - 1 || dots === 1) ;else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) {\n            res += '/..';\n          } else {\n            res = '..';\n          }\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += \"/\" + path.slice(lastSlash + 1, i);\n        } else {\n          res = path.slice(lastSlash + 1, i);\n        }\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nvar path = {\n  /**\n   * Converts a path to posix format.\n   * @param path - The path to convert to posix\n   */\n  toPosix: function toPosix(path) {\n    return replaceAll(path, '\\\\', '/');\n  },\n  /**\n   * Checks if the path is a URL\n   * @param path - The path to check\n   */\n  isUrl: function isUrl(path) {\n    return /^https?:/.test(this.toPosix(path));\n  },\n  /**\n   * Checks if the path is a data URL\n   * @param path - The path to check\n   */\n  isDataUrl: function isDataUrl(path) {\n    // eslint-disable-next-line max-len\n    return /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z0-9-.!#$%*+.{}|~`]+=[a-z0-9-.!#$%*+.{}()_|~`]+)*)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s<>]*?)$/i.test(path);\n  },\n  /**\n   * Checks if the path has a protocol e.g. http://\n   * This will return true for windows file paths\n   * @param path - The path to check\n   */\n  hasProtocol: function hasProtocol(path) {\n    return /^[^/:]+:\\//.test(this.toPosix(path));\n  },\n  /**\n   * Returns the protocol of the path e.g. http://, C:/, file:///\n   * @param path - The path to get the protocol from\n   */\n  getProtocol: function getProtocol(path) {\n    assertPath(path);\n    path = this.toPosix(path);\n    var protocol = '';\n    var isFile = /^file:\\/\\/\\//.exec(path);\n    var isHttp = /^[^/:]+:\\/\\//.exec(path);\n    var isWindows = /^[^/:]+:\\//.exec(path);\n    if (isFile || isHttp || isWindows) {\n      var arr = (isFile === null || isFile === void 0 ? void 0 : isFile[0]) || (isHttp === null || isHttp === void 0 ? void 0 : isHttp[0]) || (isWindows === null || isWindows === void 0 ? void 0 : isWindows[0]);\n      protocol = arr;\n      path = path.slice(arr.length);\n    }\n    return protocol;\n  },\n  /**\n   * Converts URL to an absolute path.\n   * When loading from a Web Worker, we must use absolute paths.\n   * If the URL is already absolute we return it as is\n   * If it's not, we convert it\n   * @param url - The URL to test\n   * @param customBaseUrl - The base URL to use\n   * @param customRootUrl - The root URL to use\n   */\n  toAbsolute: function toAbsolute(url, customBaseUrl, customRootUrl) {\n    if (this.isDataUrl(url)) {\n      return url;\n    }\n    var baseUrl = removeUrlParams(this.toPosix(customBaseUrl !== null && customBaseUrl !== void 0 ? customBaseUrl : settings.ADAPTER.getBaseUrl()));\n    var rootUrl = removeUrlParams(this.toPosix(customRootUrl !== null && customRootUrl !== void 0 ? customRootUrl : this.rootname(baseUrl)));\n    assertPath(url);\n    url = this.toPosix(url);\n    // root relative url\n    if (url.startsWith('/')) {\n      return path.join(rootUrl, url.slice(1));\n    }\n    var absolutePath = this.isAbsolute(url) ? url : this.join(baseUrl, url);\n    return absolutePath;\n  },\n  /**\n   * Normalizes the given path, resolving '..' and '.' segments\n   * @param path - The path to normalize\n   */\n  normalize: function normalize(path) {\n    path = this.toPosix(path);\n    assertPath(path);\n    if (path.length === 0) {\n      return '.';\n    }\n    var protocol = '';\n    var isAbsolute = path.startsWith('/');\n    if (this.hasProtocol(path)) {\n      protocol = this.rootname(path);\n      path = path.slice(protocol.length);\n    }\n    var trailingSeparator = path.endsWith('/');\n    // Normalize the path\n    path = normalizeStringPosix(path, false);\n    if (path.length > 0 && trailingSeparator) {\n      path += '/';\n    }\n    if (isAbsolute) {\n      return \"/\" + path;\n    }\n    return protocol + path;\n  },\n  /**\n   * Determines if path is an absolute path.\n   * Absolute paths can be urls, data urls, or paths on disk\n   * @param path - The path to test\n   */\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    path = this.toPosix(path);\n    if (this.hasProtocol(path)) {\n      return true;\n    }\n    return path.startsWith('/');\n  },\n  /**\n   * Joins all given path segments together using the platform-specific separator as a delimiter,\n   * then normalizes the resulting path\n   * @param segments - The segments of the path to join\n   */\n  join: function join() {\n    var arguments$1 = arguments;\n    var _a;\n    var segments = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      segments[_i] = arguments$1[_i];\n    }\n    if (segments.length === 0) {\n      return '.';\n    }\n    var joined;\n    for (var i = 0; i < segments.length; ++i) {\n      var arg = segments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = arg;\n        } else {\n          var prevArg = (_a = segments[i - 1]) !== null && _a !== void 0 ? _a : '';\n          if (this.extname(prevArg)) {\n            joined += \"/../\" + arg;\n          } else {\n            joined += \"/\" + arg;\n          }\n        }\n      }\n    }\n    if (joined === undefined) {\n      return '.';\n    }\n    return this.normalize(joined);\n  },\n  /**\n   * Returns the directory name of a path\n   * @param path - The path to parse\n   */\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) {\n      return '.';\n    }\n    path = this.toPosix(path);\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47;\n    var end = -1;\n    var matchedSlash = true;\n    var proto = this.getProtocol(path);\n    var origpath = path;\n    path = path.slice(proto.length);\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n    // if end is -1 and its a url then we need to add the path back\n    // eslint-disable-next-line no-nested-ternary\n    if (end === -1) {\n      return hasRoot ? '/' : this.isUrl(origpath) ? proto + path : proto;\n    }\n    if (hasRoot && end === 1) {\n      return '//';\n    }\n    return proto + path.slice(0, end);\n  },\n  /**\n   * Returns the root of the path e.g. /, C:/, file:///, http://domain.com/\n   * @param path - The path to parse\n   */\n  rootname: function rootname(path) {\n    assertPath(path);\n    path = this.toPosix(path);\n    var root = '';\n    if (path.startsWith('/')) {\n      root = '/';\n    } else {\n      root = this.getProtocol(path);\n    }\n    if (this.isUrl(path)) {\n      // need to find the first path separator\n      var index = path.indexOf('/', root.length);\n      if (index !== -1) {\n        root = path.slice(0, index);\n      } else {\n        root = path;\n      }\n      if (!root.endsWith('/')) {\n        root += '/';\n      }\n    }\n    return root;\n  },\n  /**\n   * Returns the last portion of a path\n   * @param path - The path to test\n   * @param ext - Optional extension to remove\n   */\n  basename: function basename(path, ext) {\n    assertPath(path);\n    if (ext) {\n      assertPath(ext);\n    }\n    path = this.toPosix(path);\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) {\n        return '';\n      }\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n      if (start === end) {\n        end = firstNonSlashEnd;\n      } else if (end === -1) {\n        end = path.length;\n      }\n      return path.slice(start, end);\n    }\n    for (i = path.length - 1; i >= 0; --i) {\n      if (path.charCodeAt(i) === 47) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n    if (end === -1) {\n      return '';\n    }\n    return path.slice(start, end);\n  },\n  /**\n   * Returns the extension of the path, from the last occurrence of the . (period) character to end of string in the last\n   * portion of the path. If there is no . in the last portion of the path, or if there are no . characters other than\n   * the first character of the basename of path, an empty string is returned.\n   * @param path - The path to parse\n   */\n  extname: function extname(path) {\n    assertPath(path);\n    path = this.toPosix(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1\n    // We saw a non-dot character immediately before the dot\n    || preDotState === 0\n    // The (right-most) trimmed path component is exactly '..'\n    // eslint-disable-next-line no-mixed-operators\n    || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n  /**\n   * Parses a path into an object containing the 'root', `dir`, `base`, `ext`, and `name` properties.\n   * @param path - The path to parse\n   */\n  parse: function parse(path) {\n    assertPath(path);\n    var ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) {\n      return ret;\n    }\n    path = this.toPosix(path);\n    var code = path.charCodeAt(0);\n    var isAbsolute = this.isAbsolute(path);\n    var start;\n    ret.root = this.rootname(path);\n    if (isAbsolute || this.hasProtocol(path)) {\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1\n    // We saw a non-dot character immediately before the dot\n    || preDotState === 0\n    // The (right-most) trimmed path component is exactly '..'\n    // eslint-disable-next-line no-mixed-operators\n    || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) {\n          ret.base = ret.name = path.slice(1, end);\n        } else {\n          ret.base = ret.name = path.slice(startPart, end);\n        }\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n    ret.dir = this.dirname(path);\n    return ret;\n  },\n  sep: '/',\n  delimiter: ':'\n};\n\n/**\n * The prefix that denotes a URL is for a retina asset.\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * If set to true, a WebGL renderer can fail to be created if the browser thinks there could be performance issues when\n * using WebGL.\n *\n * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many scenarios as possible.\n * However, some users may have a poor experience, for example, if a user has a gpu or driver version blacklisted by the\n * browser.\n *\n * If your application requires high performance rendering, you may wish to set this to false.\n * We recommend one of two options if you decide to set this flag to false:\n *\n * 1: Use the `pixi.js-legacy` package, which includes a Canvas renderer as a fallback in case high performance WebGL is\n *    not supported.\n *\n * 2: Call `isWebGLSupported` (which if found in the PIXI.utils package) in your code before attempting to create a PixiJS\n *    renderer, and show an error message to the user if the function returns false, explaining that their device & browser\n *    combination does not support high performance WebGL.\n *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default false\n */\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\nvar saidHello = false;\nvar VERSION = '6.5.8';\n/**\n * Skips the hello message of renderers that are created after this is run.\n * @function skipHello\n * @memberof PIXI.utils\n */\nfunction skipHello() {\n  saidHello = true;\n}\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nfunction sayHello(type) {\n  var _a;\n  if (saidHello) {\n    return;\n  }\n  if (settings.ADAPTER.getNavigator().userAgent.toLowerCase().indexOf('chrome') > -1) {\n    var args = [\"\\n %c %c %c PixiJS \" + VERSION + \" - \\u2730 \" + type + \" \\u2730  %c  %c  http://www.pixijs.com/  %c %c \\u2665%c\\u2665%c\\u2665 \\n\\n\", 'background: #ff66a5; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff66a5; background: #030307; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'background: #ffc3dc; padding:5px 0;', 'background: #ff66a5; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;', 'color: #ff2424; background: #fff; padding:5px 0;'];\n    (_a = globalThis.console).log.apply(_a, args);\n  } else if (globalThis.console) {\n    globalThis.console.log(\"PixiJS \" + VERSION + \" - \" + type + \" - http://www.pixijs.com/\");\n  }\n  saidHello = true;\n}\nvar supported;\n/**\n * Helper for checking for WebGL support.\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nfunction isWebGLSupported() {\n  if (typeof supported === 'undefined') {\n    supported = function supported() {\n      var contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n      try {\n        if (!settings.ADAPTER.getWebGLRenderingContext()) {\n          return false;\n        }\n        var canvas = settings.ADAPTER.createCanvas();\n        var gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n        var success = !!(gl && gl.getContextAttributes().stencil);\n        if (gl) {\n          var loseContext = gl.getExtension('WEBGL_lose_context');\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n  return supported;\n}\nvar aliceblue = \"#f0f8ff\";\nvar antiquewhite = \"#faebd7\";\nvar aqua = \"#00ffff\";\nvar aquamarine = \"#7fffd4\";\nvar azure = \"#f0ffff\";\nvar beige = \"#f5f5dc\";\nvar bisque = \"#ffe4c4\";\nvar black = \"#000000\";\nvar blanchedalmond = \"#ffebcd\";\nvar blue = \"#0000ff\";\nvar blueviolet = \"#8a2be2\";\nvar brown = \"#a52a2a\";\nvar burlywood = \"#deb887\";\nvar cadetblue = \"#5f9ea0\";\nvar chartreuse = \"#7fff00\";\nvar chocolate = \"#d2691e\";\nvar coral = \"#ff7f50\";\nvar cornflowerblue = \"#6495ed\";\nvar cornsilk = \"#fff8dc\";\nvar crimson = \"#dc143c\";\nvar cyan = \"#00ffff\";\nvar darkblue = \"#00008b\";\nvar darkcyan = \"#008b8b\";\nvar darkgoldenrod = \"#b8860b\";\nvar darkgray = \"#a9a9a9\";\nvar darkgreen = \"#006400\";\nvar darkgrey = \"#a9a9a9\";\nvar darkkhaki = \"#bdb76b\";\nvar darkmagenta = \"#8b008b\";\nvar darkolivegreen = \"#556b2f\";\nvar darkorange = \"#ff8c00\";\nvar darkorchid = \"#9932cc\";\nvar darkred = \"#8b0000\";\nvar darksalmon = \"#e9967a\";\nvar darkseagreen = \"#8fbc8f\";\nvar darkslateblue = \"#483d8b\";\nvar darkslategray = \"#2f4f4f\";\nvar darkslategrey = \"#2f4f4f\";\nvar darkturquoise = \"#00ced1\";\nvar darkviolet = \"#9400d3\";\nvar deeppink = \"#ff1493\";\nvar deepskyblue = \"#00bfff\";\nvar dimgray = \"#696969\";\nvar dimgrey = \"#696969\";\nvar dodgerblue = \"#1e90ff\";\nvar firebrick = \"#b22222\";\nvar floralwhite = \"#fffaf0\";\nvar forestgreen = \"#228b22\";\nvar fuchsia = \"#ff00ff\";\nvar gainsboro = \"#dcdcdc\";\nvar ghostwhite = \"#f8f8ff\";\nvar goldenrod = \"#daa520\";\nvar gold = \"#ffd700\";\nvar gray = \"#808080\";\nvar green = \"#008000\";\nvar greenyellow = \"#adff2f\";\nvar grey = \"#808080\";\nvar honeydew = \"#f0fff0\";\nvar hotpink = \"#ff69b4\";\nvar indianred = \"#cd5c5c\";\nvar indigo = \"#4b0082\";\nvar ivory = \"#fffff0\";\nvar khaki = \"#f0e68c\";\nvar lavenderblush = \"#fff0f5\";\nvar lavender = \"#e6e6fa\";\nvar lawngreen = \"#7cfc00\";\nvar lemonchiffon = \"#fffacd\";\nvar lightblue = \"#add8e6\";\nvar lightcoral = \"#f08080\";\nvar lightcyan = \"#e0ffff\";\nvar lightgoldenrodyellow = \"#fafad2\";\nvar lightgray = \"#d3d3d3\";\nvar lightgreen = \"#90ee90\";\nvar lightgrey = \"#d3d3d3\";\nvar lightpink = \"#ffb6c1\";\nvar lightsalmon = \"#ffa07a\";\nvar lightseagreen = \"#20b2aa\";\nvar lightskyblue = \"#87cefa\";\nvar lightslategray = \"#778899\";\nvar lightslategrey = \"#778899\";\nvar lightsteelblue = \"#b0c4de\";\nvar lightyellow = \"#ffffe0\";\nvar lime = \"#00ff00\";\nvar limegreen = \"#32cd32\";\nvar linen = \"#faf0e6\";\nvar magenta = \"#ff00ff\";\nvar maroon = \"#800000\";\nvar mediumaquamarine = \"#66cdaa\";\nvar mediumblue = \"#0000cd\";\nvar mediumorchid = \"#ba55d3\";\nvar mediumpurple = \"#9370db\";\nvar mediumseagreen = \"#3cb371\";\nvar mediumslateblue = \"#7b68ee\";\nvar mediumspringgreen = \"#00fa9a\";\nvar mediumturquoise = \"#48d1cc\";\nvar mediumvioletred = \"#c71585\";\nvar midnightblue = \"#191970\";\nvar mintcream = \"#f5fffa\";\nvar mistyrose = \"#ffe4e1\";\nvar moccasin = \"#ffe4b5\";\nvar navajowhite = \"#ffdead\";\nvar navy = \"#000080\";\nvar oldlace = \"#fdf5e6\";\nvar olive = \"#808000\";\nvar olivedrab = \"#6b8e23\";\nvar orange = \"#ffa500\";\nvar orangered = \"#ff4500\";\nvar orchid = \"#da70d6\";\nvar palegoldenrod = \"#eee8aa\";\nvar palegreen = \"#98fb98\";\nvar paleturquoise = \"#afeeee\";\nvar palevioletred = \"#db7093\";\nvar papayawhip = \"#ffefd5\";\nvar peachpuff = \"#ffdab9\";\nvar peru = \"#cd853f\";\nvar pink = \"#ffc0cb\";\nvar plum = \"#dda0dd\";\nvar powderblue = \"#b0e0e6\";\nvar purple = \"#800080\";\nvar rebeccapurple = \"#663399\";\nvar red = \"#ff0000\";\nvar rosybrown = \"#bc8f8f\";\nvar royalblue = \"#4169e1\";\nvar saddlebrown = \"#8b4513\";\nvar salmon = \"#fa8072\";\nvar sandybrown = \"#f4a460\";\nvar seagreen = \"#2e8b57\";\nvar seashell = \"#fff5ee\";\nvar sienna = \"#a0522d\";\nvar silver = \"#c0c0c0\";\nvar skyblue = \"#87ceeb\";\nvar slateblue = \"#6a5acd\";\nvar slategray = \"#708090\";\nvar slategrey = \"#708090\";\nvar snow = \"#fffafa\";\nvar springgreen = \"#00ff7f\";\nvar steelblue = \"#4682b4\";\nvar tan = \"#d2b48c\";\nvar teal = \"#008080\";\nvar thistle = \"#d8bfd8\";\nvar tomato = \"#ff6347\";\nvar turquoise = \"#40e0d0\";\nvar violet = \"#ee82ee\";\nvar wheat = \"#f5deb3\";\nvar white = \"#ffffff\";\nvar whitesmoke = \"#f5f5f5\";\nvar yellow = \"#ffff00\";\nvar yellowgreen = \"#9acd32\";\nvar cssColorNames = {\n  aliceblue: aliceblue,\n  antiquewhite: antiquewhite,\n  aqua: aqua,\n  aquamarine: aquamarine,\n  azure: azure,\n  beige: beige,\n  bisque: bisque,\n  black: black,\n  blanchedalmond: blanchedalmond,\n  blue: blue,\n  blueviolet: blueviolet,\n  brown: brown,\n  burlywood: burlywood,\n  cadetblue: cadetblue,\n  chartreuse: chartreuse,\n  chocolate: chocolate,\n  coral: coral,\n  cornflowerblue: cornflowerblue,\n  cornsilk: cornsilk,\n  crimson: crimson,\n  cyan: cyan,\n  darkblue: darkblue,\n  darkcyan: darkcyan,\n  darkgoldenrod: darkgoldenrod,\n  darkgray: darkgray,\n  darkgreen: darkgreen,\n  darkgrey: darkgrey,\n  darkkhaki: darkkhaki,\n  darkmagenta: darkmagenta,\n  darkolivegreen: darkolivegreen,\n  darkorange: darkorange,\n  darkorchid: darkorchid,\n  darkred: darkred,\n  darksalmon: darksalmon,\n  darkseagreen: darkseagreen,\n  darkslateblue: darkslateblue,\n  darkslategray: darkslategray,\n  darkslategrey: darkslategrey,\n  darkturquoise: darkturquoise,\n  darkviolet: darkviolet,\n  deeppink: deeppink,\n  deepskyblue: deepskyblue,\n  dimgray: dimgray,\n  dimgrey: dimgrey,\n  dodgerblue: dodgerblue,\n  firebrick: firebrick,\n  floralwhite: floralwhite,\n  forestgreen: forestgreen,\n  fuchsia: fuchsia,\n  gainsboro: gainsboro,\n  ghostwhite: ghostwhite,\n  goldenrod: goldenrod,\n  gold: gold,\n  gray: gray,\n  green: green,\n  greenyellow: greenyellow,\n  grey: grey,\n  honeydew: honeydew,\n  hotpink: hotpink,\n  indianred: indianred,\n  indigo: indigo,\n  ivory: ivory,\n  khaki: khaki,\n  lavenderblush: lavenderblush,\n  lavender: lavender,\n  lawngreen: lawngreen,\n  lemonchiffon: lemonchiffon,\n  lightblue: lightblue,\n  lightcoral: lightcoral,\n  lightcyan: lightcyan,\n  lightgoldenrodyellow: lightgoldenrodyellow,\n  lightgray: lightgray,\n  lightgreen: lightgreen,\n  lightgrey: lightgrey,\n  lightpink: lightpink,\n  lightsalmon: lightsalmon,\n  lightseagreen: lightseagreen,\n  lightskyblue: lightskyblue,\n  lightslategray: lightslategray,\n  lightslategrey: lightslategrey,\n  lightsteelblue: lightsteelblue,\n  lightyellow: lightyellow,\n  lime: lime,\n  limegreen: limegreen,\n  linen: linen,\n  magenta: magenta,\n  maroon: maroon,\n  mediumaquamarine: mediumaquamarine,\n  mediumblue: mediumblue,\n  mediumorchid: mediumorchid,\n  mediumpurple: mediumpurple,\n  mediumseagreen: mediumseagreen,\n  mediumslateblue: mediumslateblue,\n  mediumspringgreen: mediumspringgreen,\n  mediumturquoise: mediumturquoise,\n  mediumvioletred: mediumvioletred,\n  midnightblue: midnightblue,\n  mintcream: mintcream,\n  mistyrose: mistyrose,\n  moccasin: moccasin,\n  navajowhite: navajowhite,\n  navy: navy,\n  oldlace: oldlace,\n  olive: olive,\n  olivedrab: olivedrab,\n  orange: orange,\n  orangered: orangered,\n  orchid: orchid,\n  palegoldenrod: palegoldenrod,\n  palegreen: palegreen,\n  paleturquoise: paleturquoise,\n  palevioletred: palevioletred,\n  papayawhip: papayawhip,\n  peachpuff: peachpuff,\n  peru: peru,\n  pink: pink,\n  plum: plum,\n  powderblue: powderblue,\n  purple: purple,\n  rebeccapurple: rebeccapurple,\n  red: red,\n  rosybrown: rosybrown,\n  royalblue: royalblue,\n  saddlebrown: saddlebrown,\n  salmon: salmon,\n  sandybrown: sandybrown,\n  seagreen: seagreen,\n  seashell: seashell,\n  sienna: sienna,\n  silver: silver,\n  skyblue: skyblue,\n  slateblue: slateblue,\n  slategray: slategray,\n  slategrey: slategrey,\n  snow: snow,\n  springgreen: springgreen,\n  steelblue: steelblue,\n  tan: tan,\n  teal: teal,\n  thistle: thistle,\n  tomato: tomato,\n  turquoise: turquoise,\n  violet: violet,\n  wheat: wheat,\n  white: white,\n  whitesmoke: whitesmoke,\n  yellow: yellow,\n  yellowgreen: yellowgreen\n};\n\n/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @returns {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nfunction hex2rgb(hex, out) {\n  if (out === void 0) {\n    out = [];\n  }\n  out[0] = (hex >> 16 & 0xFF) / 255;\n  out[1] = (hex >> 8 & 0xFF) / 255;\n  out[2] = (hex & 0xFF) / 255;\n  return out;\n}\n/**\n * Converts a hexadecimal color number to a string.\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @returns {string} The string color (e.g., `\"#ffffff\"`).\n */\nfunction hex2string(hex) {\n  var hexString = hex.toString(16);\n  hexString = '000000'.substring(0, 6 - hexString.length) + hexString;\n  return \"#\" + hexString;\n}\n/**\n * Converts a string to a hexadecimal color number.\n * It can handle:\n *  hex strings starting with #: \"#ffffff\"\n *  hex strings starting with 0x: \"0xffffff\"\n *  hex strings without prefix: \"ffffff\"\n *  css colors: \"black\"\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff, which is 16777215 as an integer\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @returns {number} Number in hexadecimal.\n */\nfunction string2hex(string) {\n  if (typeof string === 'string') {\n    string = cssColorNames[string.toLowerCase()] || string;\n    if (string[0] === '#') {\n      string = string.slice(1);\n    }\n  }\n  return parseInt(string, 16);\n}\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff, which is 16777215 as an integer\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @returns {number} Number in hexadecimal.\n */\nfunction rgb2hex(rgb) {\n  return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + (rgb[2] * 255 | 0);\n}\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @returns {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes() {\n  var pm = [];\n  var npm = [];\n  for (var i = 0; i < 32; i++) {\n    pm[i] = i;\n    npm[i] = i;\n  }\n  pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n  pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n  pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n  npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n  npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n  npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n  var array = [];\n  array.push(npm);\n  array.push(pm);\n  return array;\n}\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @constant premultiplyBlendMode\n * @type {Array<number[]>}\n */\nvar premultiplyBlendMode = mapPremultipliedBlendModes();\n/**\n * changes blendMode according to texture format\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nfunction correctBlendMode(blendMode, premultiplied) {\n  return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n/**\n * combines rgb and alpha to out array\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nfunction premultiplyRgba(rgb, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n  if (premultiply || premultiply === undefined) {\n    out[0] = rgb[0] * alpha;\n    out[1] = rgb[1] * alpha;\n    out[2] = rgb[2] * alpha;\n  } else {\n    out[0] = rgb[0];\n    out[1] = rgb[1];\n    out[2] = rgb[2];\n  }\n  out[3] = alpha;\n  return out;\n}\n/**\n * premultiplies tint\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nfunction premultiplyTint(tint, alpha) {\n  if (alpha === 1.0) {\n    return (alpha * 255 << 24) + tint;\n  }\n  if (alpha === 0.0) {\n    return 0;\n  }\n  var R = tint >> 16 & 0xFF;\n  var G = tint >> 8 & 0xFF;\n  var B = tint & 0xFF;\n  R = R * alpha + 0.5 | 0;\n  G = G * alpha + 0.5 | 0;\n  B = B * alpha + 0.5 | 0;\n  return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nfunction premultiplyTintToRgba(tint, alpha, out, premultiply) {\n  out = out || new Float32Array(4);\n  out[0] = (tint >> 16 & 0xFF) / 255.0;\n  out[1] = (tint >> 8 & 0xFF) / 255.0;\n  out[2] = (tint & 0xFF) / 255.0;\n  if (premultiply || premultiply === undefined) {\n    out[0] *= alpha;\n    out[1] *= alpha;\n    out[2] *= alpha;\n  }\n  out[3] = alpha;\n  return out;\n}\n\n/**\n * Generic Mask Stack data structure\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @returns {Uint16Array|Uint32Array} - Resulting index buffer\n */\nfunction createIndicesForQuads(size, outBuffer) {\n  if (outBuffer === void 0) {\n    outBuffer = null;\n  }\n  // the total number of indices in our array, there are 6 points per quad.\n  var totalIndices = size * 6;\n  outBuffer = outBuffer || new Uint16Array(totalIndices);\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(\"Out buffer length is incorrect, got \" + outBuffer.length + \" and expected \" + totalIndices);\n  }\n  // fill the indices with the quads to draw\n  for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n  return outBuffer;\n}\nfunction getBufferType(array) {\n  if (array.BYTES_PER_ELEMENT === 4) {\n    if (array instanceof Float32Array) {\n      return 'Float32Array';\n    } else if (array instanceof Uint32Array) {\n      return 'Uint32Array';\n    }\n    return 'Int32Array';\n  } else if (array.BYTES_PER_ELEMENT === 2) {\n    if (array instanceof Uint16Array) {\n      return 'Uint16Array';\n    }\n  } else if (array.BYTES_PER_ELEMENT === 1) {\n    if (array instanceof Uint8Array) {\n      return 'Uint8Array';\n    }\n  }\n  // TODO map out the rest of the array elements!\n  return null;\n}\n\n/* eslint-disable object-shorthand */\nvar map = {\n  Float32Array: Float32Array,\n  Uint32Array: Uint32Array,\n  Int32Array: Int32Array,\n  Uint8Array: Uint8Array\n};\nfunction interleaveTypedArrays(arrays, sizes) {\n  var outSize = 0;\n  var stride = 0;\n  var views = {};\n  for (var i = 0; i < arrays.length; i++) {\n    stride += sizes[i];\n    outSize += arrays[i].length;\n  }\n  var buffer = new ArrayBuffer(outSize * 4);\n  var out = null;\n  var littleOffset = 0;\n  for (var i = 0; i < arrays.length; i++) {\n    var size = sizes[i];\n    var array = arrays[i];\n    /*\n    @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n          or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n     */\n    var type = getBufferType(array);\n    if (!views[type]) {\n      views[type] = new map[type](buffer);\n    }\n    out = views[type];\n    for (var j = 0; j < array.length; j++) {\n      var indexStart = (j / size | 0) * stride + littleOffset;\n      var index = j % size;\n      out[indexStart + index] = array[j];\n    }\n    littleOffset += size;\n  }\n  return new Float32Array(buffer);\n}\n\n// Taken from the bit-twiddle package\n/**\n * Rounds to next power of two.\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} - next rounded power of two\n */\nfunction nextPow2(v) {\n  v += v === 0 ? 1 : 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n/**\n * Checks if a number is a power of two.\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {boolean} `true` if value is power of two\n */\nfunction isPow2(v) {\n  return !(v & v - 1) && !!v;\n}\n/**\n * Computes ceil of log base 2\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} logarithm base 2\n */\nfunction log2(v) {\n  var r = (v > 0xFFFF ? 1 : 0) << 4;\n  v >>>= r;\n  var shift = (v > 0xFF ? 1 : 0) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0xF ? 1 : 0) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 0x3 ? 1 : 0) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}\n\n/**\n * Remove items from a javascript array without generating garbage\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nfunction removeItems(arr, startIdx, removeCount) {\n  var length = arr.length;\n  var i;\n  if (startIdx >= length || removeCount === 0) {\n    return;\n  }\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  var len = length - removeCount;\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount];\n  }\n  arr.length = len;\n}\n\n/**\n * Returns sign of number\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nfunction sign(n) {\n  if (n === 0) {\n    return 0;\n  }\n  return n < 0 ? -1 : 1;\n}\nvar nextUid = 0;\n/**\n * Gets the next unique identifier\n * @memberof PIXI.utils\n * @function uid\n * @returns {number} The next unique identifier to use.\n */\nfunction uid() {\n  return ++nextUid;\n}\n\n// A map of warning messages already fired\nvar warnings = {};\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nfunction deprecation(version, message, ignoreDepth) {\n  if (ignoreDepth === void 0) {\n    ignoreDepth = 3;\n  }\n  // Ignore duplicat\n  if (warnings[message]) {\n    return;\n  }\n  /* eslint-disable no-console */\n  var stack = new Error().stack;\n  // Handle IE < 10 and Safari < 6\n  if (typeof stack === 'undefined') {\n    console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n  } else {\n    // chop off the stack trace which includes PixiJS internal calls\n    stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n    if (console.groupCollapsed) {\n      console.groupCollapsed('%cPixiJS Deprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn('PixiJS Deprecation Warning: ', message + \"\\nDeprecated since v\" + version);\n      console.warn(stack);\n    }\n  }\n  /* eslint-enable no-console */\n  warnings[message] = true;\n}\n\n/**\n * @todo Describe property usage\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {object}\n */\nvar ProgramCache = {};\n/**\n * @todo Describe property usage\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nvar TextureCache = Object.create(null);\n/**\n * @todo Describe property usage\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nvar BaseTextureCache = Object.create(null);\n/**\n * Destroys all texture in the cache\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nfunction destroyTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    TextureCache[key].destroy();\n  }\n  for (key in BaseTextureCache) {\n    BaseTextureCache[key].destroy();\n  }\n}\n/**\n * Removes all textures from cache, but does not destroy them\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nfunction clearTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    delete TextureCache[key];\n  }\n  for (key in BaseTextureCache) {\n    delete BaseTextureCache[key];\n  }\n}\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n * @class\n * @memberof PIXI.utils\n */\nvar CanvasRenderTarget = /** @class */function () {\n  /**\n   * @param width - the width for the newly created canvas\n   * @param height - the height for the newly created canvas\n   * @param {number} [resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the canvas\n   */\n  function CanvasRenderTarget(width, height, resolution) {\n    this.canvas = settings.ADAPTER.createCanvas();\n    this.context = this.canvas.getContext('2d');\n    this.resolution = resolution || settings.RESOLUTION;\n    this.resize(width, height);\n  }\n  /**\n   * Clears the canvas that was created by the CanvasRenderTarget class.\n   * @private\n   */\n  CanvasRenderTarget.prototype.clear = function () {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n  /**\n   * Resizes the canvas to the specified width and height.\n   * @param desiredWidth - the desired width of the canvas\n   * @param desiredHeight - the desired height of the canvas\n   */\n  CanvasRenderTarget.prototype.resize = function (desiredWidth, desiredHeight) {\n    this.canvas.width = Math.round(desiredWidth * this.resolution);\n    this.canvas.height = Math.round(desiredHeight * this.resolution);\n  };\n  /** Destroys this canvas. */\n  CanvasRenderTarget.prototype.destroy = function () {\n    this.context = null;\n    this.canvas = null;\n  };\n  Object.defineProperty(CanvasRenderTarget.prototype, \"width\", {\n    /**\n     * The width of the canvas buffer in pixels.\n     * @member {number}\n     */\n    get: function get() {\n      return this.canvas.width;\n    },\n    set: function set(val) {\n      this.canvas.width = Math.round(val);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasRenderTarget.prototype, \"height\", {\n    /**\n     * The height of the canvas buffer in pixels.\n     * @member {number}\n     */\n    get: function get() {\n      return this.canvas.height;\n    },\n    set: function set(val) {\n      this.canvas.height = Math.round(val);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasRenderTarget;\n}();\n\n/**\n * Trim transparent borders from a canvas\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nfunction trimCanvas(canvas) {\n  // https://gist.github.com/remy/784508\n  var width = canvas.width;\n  var height = canvas.height;\n  var context = canvas.getContext('2d', {\n    willReadFrequently: true\n  });\n  var imageData = context.getImageData(0, 0, width, height);\n  var pixels = imageData.data;\n  var len = pixels.length;\n  var bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  };\n  var data = null;\n  var i;\n  var x;\n  var y;\n  for (i = 0; i < len; i += 4) {\n    if (pixels[i + 3] !== 0) {\n      x = i / 4 % width;\n      y = ~~(i / 4 / width);\n      if (bound.top === null) {\n        bound.top = y;\n      }\n      if (bound.left === null) {\n        bound.left = x;\n      } else if (x < bound.left) {\n        bound.left = x;\n      }\n      if (bound.right === null) {\n        bound.right = x + 1;\n      } else if (bound.right < x) {\n        bound.right = x + 1;\n      }\n      if (bound.bottom === null) {\n        bound.bottom = y;\n      } else if (bound.bottom < y) {\n        bound.bottom = y;\n      }\n    }\n  }\n  if (bound.top !== null) {\n    width = bound.right - bound.left;\n    height = bound.bottom - bound.top + 1;\n    data = context.getImageData(bound.left, bound.top, width, height);\n  }\n  return {\n    height: height,\n    width: width,\n    data: data\n  };\n}\n\n/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nvar DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @returns {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nfunction decomposeDataUri(dataUri) {\n  var dataUriMatch = DATA_URI.exec(dataUri);\n  if (dataUriMatch) {\n    return {\n      mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n      subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n      charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n      encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n      data: dataUriMatch[5]\n    };\n  }\n  return undefined;\n}\nvar tempAnchor;\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @returns {string} The crossOrigin value to use (or empty string for none).\n */\nfunction determineCrossOrigin(url$1, loc) {\n  if (loc === void 0) {\n    loc = globalThis.location;\n  }\n  // data: and javascript: urls are considered same-origin\n  if (url$1.indexOf('data:') === 0) {\n    return '';\n  }\n  // default is window.location\n  loc = loc || globalThis.location;\n  if (!tempAnchor) {\n    tempAnchor = document.createElement('a');\n  }\n  // let the browser determine the full href for the url of this resource and then\n  // parse with the node url lib, we can't use the properties of the anchor element\n  // because they don't work in IE9 :(\n  tempAnchor.href = url$1;\n  var parsedUrl = url.parse(tempAnchor.href);\n  var samePort = !parsedUrl.port && loc.port === '' || parsedUrl.port === loc.port;\n  // if cross origin\n  if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol) {\n    return 'anonymous';\n  }\n  return '';\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @returns {number} resolution / device pixel ratio of an asset\n */\nfunction getResolutionOfUrl(url, defaultValue) {\n  var resolution = settings.RETINA_PREFIX.exec(url);\n  if (resolution) {\n    return parseFloat(resolution[1]);\n  }\n  return defaultValue !== undefined ? defaultValue : 1;\n}\nexport { BaseTextureCache, CanvasRenderTarget, DATA_URI, ProgramCache, TextureCache, clearTextureCache, correctBlendMode, createIndicesForQuads, decomposeDataUri, deprecation, destroyTextureCache, determineCrossOrigin, getBufferType, getResolutionOfUrl, hex2rgb, hex2string, interleaveTypedArrays, isPow2, isWebGLSupported, log2, nextPow2, path, premultiplyBlendMode, premultiplyRgba, premultiplyTint, premultiplyTintToRgba, removeItems, rgb2hex, sayHello, sign, skipHello, string2hex, trimCanvas, uid, url };","map":{"version":3,"mappings":"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","names":["url","parse","_parse","format","_format","resolve","_resolve","assertPath","path","TypeError","stringify","removeUrlParams","re","split","escapeRegExp","string","replace","replaceAll","str","find","RegExp","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","toPosix","isUrl","test","isDataUrl","hasProtocol","getProtocol","protocol","isFile","exec","isHttp","isWindows","arr","toAbsolute","customBaseUrl","customRootUrl","baseUrl","settings","ADAPTER","getBaseUrl","rootUrl","rootname","startsWith","join","absolutePath","isAbsolute","normalize","trailingSeparator","endsWith","segments","_i","joined","arg","undefined","prevArg","extname","dirname","hasRoot","end","matchedSlash","proto","origpath","root","index","indexOf","basename","ext","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","dir","base","name","sep","delimiter","RETINA_PREFIX","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","saidHello","VERSION","skipHello","sayHello","type","getNavigator","userAgent","toLowerCase","args","console","log","apply","globalThis","supported","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","getWebGLRenderingContext","canvas","createCanvas","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","hex","out","hex2string","hexString","toString","substring","string2hex","cssColorNames","parseInt","rgb2hex","rgb","mapPremultipliedBlendModes","pm","npm","BLEND_MODES","NORMAL_NPM","NORMAL","ADD_NPM","ADD","SCREEN_NPM","SCREEN","array","push","blendMode","premultiplied","premultiplyBlendMode","premultiplyRgba","alpha","premultiply","Float32Array","tint","R","G","B","premultiplyTintToRgba","size","outBuffer","totalIndices","Uint16Array","Error","j","getBufferType","BYTES_PER_ELEMENT","Uint32Array","Uint8Array","map","Int32Array","arrays","sizes","outSize","stride","views","buffer","ArrayBuffer","littleOffset","indexStart","nextPow2","v","isPow2","log2","r","shift","removeItems","startIdx","removeCount","len","sign","n","nextUid","uid","warnings","deprecation","version","message","ignoreDepth","stack","warn","splice","groupCollapsed","groupEnd","TextureCache","Object","create","BaseTextureCache","destroyTextureCache","key","destroy","clearTextureCache","width","height","resolution","context","RESOLUTION","resize","CanvasRenderTarget","setTransform","clearRect","desiredWidth","desiredHeight","Math","round","get","set","val","trimCanvas","willReadFrequently","imageData","getImageData","pixels","data","bound","top","left","right","bottom","x","y","decomposeDataUri","dataUri","dataUriMatch","DATA_URI","mediaType","subType","charset","encoding","tempAnchor","loc","location","document","createElement","href","parsedUrl","_url","samePort","port","hostname","defaultValue","parseFloat"],"sources":["../../src/url.ts","../../src/path.ts","../../src/settings.ts","../../src/browser/hello.ts","../../src/browser/isWebGLSupported.ts","../../src/color/hex.ts","../../src/color/premultiply.ts","../../src/data/createIndicesForQuads.ts","../../src/data/getBufferType.ts","../../src/data/interleaveTypedArrays.ts","../../src/data/pow2.ts","../../src/data/removeItems.ts","../../src/data/sign.ts","../../src/data/uid.ts","../../src/logging/deprecation.ts","../../src/media/caches.ts","../../src/media/CanvasRenderTarget.ts","../../src/media/trimCanvas.ts","../../src/const.ts","../../src/network/decomposeDataUri.ts","../../src/network/determineCrossOrigin.ts","../../src/network/getResolutionOfUrl.ts"],"sourcesContent":["/**\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\n\nimport { parse as _parse, format as _format, resolve as _resolve } from 'url';\n\ninterface ParsedUrlQuery\n{\n    [key: string]: string | string[];\n}\n\ninterface ParsedUrlQueryInput\n{\n    [key: string]: unknown;\n}\n\ninterface UrlObjectCommon\n{\n    auth?: string;\n    hash?: string;\n    host?: string;\n    hostname?: string;\n    href?: string;\n    path?: string;\n    pathname?: string;\n    protocol?: string;\n    search?: string;\n    slashes?: boolean;\n}\n\n// Input to `url.format`\ninterface UrlObject extends UrlObjectCommon\n{\n    port?: string | number;\n    query?: string | null | ParsedUrlQueryInput;\n}\n\n// Output of `url.parse`\ninterface Url extends UrlObjectCommon\n{\n    port?: string;\n    query?: string | null | ParsedUrlQuery;\n}\n\ninterface UrlWithParsedQuery extends Url\n{\n    query: ParsedUrlQuery;\n}\n\ninterface UrlWithStringQuery extends Url\n{\n    query: string | null;\n}\n\ninterface URLFormatOptions\n{\n    auth?: boolean;\n    fragment?: boolean;\n    search?: boolean;\n    unicode?: boolean;\n}\n\ntype ParseFunction = {\n    (urlStr: string): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: false | undefined, slashesDenoteHost?: boolean): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: true, slashesDenoteHost?: boolean): UrlWithParsedQuery;\n    (urlStr: string, parseQueryString: boolean, slashesDenoteHost?: boolean): Url;\n};\n\ntype FormatFunction = {\n    (URL: URL, options?: URLFormatOptions): string;\n    (urlObject: UrlObject | string): string;\n};\n\ntype ResolveFunction = {\n    (from: string, to: string): string;\n};\n\nexport const url = {\n    parse: _parse as ParseFunction,\n    format: _format as FormatFunction,\n    resolve: _resolve as ResolveFunction,\n};\n","import { settings } from '@pixi/settings';\n\nfunction assertPath(path: string)\n{\n    if (typeof path !== 'string')\n    {\n        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);\n    }\n}\n\nfunction removeUrlParams(url: string): string\n{\n    const re = url.split('?')[0];\n\n    return re.split('#')[0];\n}\n\nfunction escapeRegExp(string: string)\n{\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction replaceAll(str: string, find: string, replace: string)\n{\n    return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path: string, allowAboveRoot: boolean)\n{\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code: number;\n\n    for (let i = 0; i <= path.length; ++i)\n    {\n        if (i < path.length)\n        {\n            code = path.charCodeAt(i);\n        }\n        else if (code === 47)\n        {\n            break;\n        }\n        else\n        {\n            code = 47;\n        }\n        if (code === 47)\n        {\n            if (lastSlash === i - 1 || dots === 1)\n            {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2)\n            {\n                if (\n                    res.length < 2\n                    || lastSegmentLength !== 2\n                    || res.charCodeAt(res.length - 1) !== 46\n                    || res.charCodeAt(res.length - 2) !== 46\n                )\n                {\n                    if (res.length > 2)\n                    {\n                        const lastSlashIndex = res.lastIndexOf('/');\n\n                        if (lastSlashIndex !== res.length - 1)\n                        {\n                            if (lastSlashIndex === -1)\n                            {\n                                res = '';\n                                lastSegmentLength = 0;\n                            }\n                            else\n                            {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    }\n                    else if (res.length === 2 || res.length === 1)\n                    {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot)\n                {\n                    if (res.length > 0)\n                    { res += '/..'; }\n                    else\n                    { res = '..'; }\n                    lastSegmentLength = 2;\n                }\n            }\n            else\n            {\n                if (res.length > 0)\n                {\n                    res += `/${path.slice(lastSlash + 1, i)}`;\n                }\n                else\n                {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === 46 && dots !== -1)\n        {\n            ++dots;\n        }\n        else\n        {\n            dots = -1;\n        }\n    }\n\n    return res;\n}\n\nexport interface Path\n{\n    toPosix: (path: string) => string;\n    toAbsolute: (url: string, baseUrl?: string, rootUrl?: string) => string;\n    isUrl: (path: string) => boolean;\n    isDataUrl: (path: string) => boolean;\n    hasProtocol: (path: string) => boolean;\n    getProtocol: (path: string) => string;\n    normalize: (path: string) => string;\n    join: (...paths: string[]) => string;\n    isAbsolute: (path: string) => boolean;\n    dirname: (path: string) => string;\n    rootname: (path: string) => string;\n    basename: (path: string, ext?: string) => string;\n    extname: (path: string) => string;\n    parse: (path: string) => { root?: string, dir?: string, base?: string, ext?: string, name?: string };\n    sep: string,\n    delimiter: string\n}\n\nexport const path: Path = {\n    /**\n     * Converts a path to posix format.\n     * @param path - The path to convert to posix\n     */\n    toPosix(path: string) { return replaceAll(path, '\\\\', '/'); },\n    /**\n     * Checks if the path is a URL\n     * @param path - The path to check\n     */\n    isUrl(path: string) { return (/^https?:/).test(this.toPosix(path)); },\n    /**\n     * Checks if the path is a data URL\n     * @param path - The path to check\n     */\n    isDataUrl(path: string)\n    {\n        // eslint-disable-next-line max-len\n        return (/^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z0-9-.!#$%*+.{}|~`]+=[a-z0-9-.!#$%*+.{}()_|~`]+)*)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s<>]*?)$/i)\n            .test(path);\n    },\n    /**\n     * Checks if the path has a protocol e.g. http://\n     * This will return true for windows file paths\n     * @param path - The path to check\n     */\n    hasProtocol(path: string) { return (/^[^/:]+:\\//).test(this.toPosix(path)); },\n    /**\n     * Returns the protocol of the path e.g. http://, C:/, file:///\n     * @param path - The path to get the protocol from\n     */\n    getProtocol(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        let protocol = '';\n\n        const isFile = (/^file:\\/\\/\\//).exec(path);\n        const isHttp = (/^[^/:]+:\\/\\//).exec(path);\n        const isWindows = (/^[^/:]+:\\//).exec(path);\n\n        if (isFile || isHttp || isWindows)\n        {\n            const arr = isFile?.[0] || isHttp?.[0] || isWindows?.[0];\n\n            protocol = arr;\n            path = path.slice(arr.length);\n        }\n\n        return protocol;\n    },\n\n    /**\n     * Converts URL to an absolute path.\n     * When loading from a Web Worker, we must use absolute paths.\n     * If the URL is already absolute we return it as is\n     * If it's not, we convert it\n     * @param url - The URL to test\n     * @param customBaseUrl - The base URL to use\n     * @param customRootUrl - The root URL to use\n     */\n    toAbsolute(url: string, customBaseUrl?: string, customRootUrl?: string)\n    {\n        if (this.isDataUrl(url)) return url;\n\n        const baseUrl = removeUrlParams(this.toPosix(customBaseUrl ?? settings.ADAPTER.getBaseUrl()));\n        const rootUrl = removeUrlParams(this.toPosix(customRootUrl ?? this.rootname(baseUrl)));\n\n        assertPath(url);\n        url = this.toPosix(url);\n\n        // root relative url\n        if (url.startsWith('/'))\n        {\n            return path.join(rootUrl, url.slice(1));\n        }\n\n        const absolutePath = this.isAbsolute(url) ? url : this.join(baseUrl, url);\n\n        return absolutePath;\n    },\n\n    /**\n     * Normalizes the given path, resolving '..' and '.' segments\n     * @param path - The path to normalize\n     */\n    normalize(path: string)\n    {\n        path = this.toPosix(path);\n        assertPath(path);\n\n        if (path.length === 0) return '.';\n\n        let protocol = '';\n        const isAbsolute = path.startsWith('/');\n\n        if (this.hasProtocol(path))\n        {\n            protocol = this.rootname(path);\n            path = path.slice(protocol.length);\n        }\n\n        const trailingSeparator = path.endsWith('/');\n\n        // Normalize the path\n        path = normalizeStringPosix(path, false);\n\n        if (path.length > 0 && trailingSeparator) path += '/';\n        if (isAbsolute) return `/${path}`;\n\n        return protocol + path;\n    },\n\n    /**\n     * Determines if path is an absolute path.\n     * Absolute paths can be urls, data urls, or paths on disk\n     * @param path - The path to test\n     */\n    isAbsolute(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        if (this.hasProtocol(path)) return true;\n\n        return path.startsWith('/');\n    },\n\n    /**\n     * Joins all given path segments together using the platform-specific separator as a delimiter,\n     * then normalizes the resulting path\n     * @param segments - The segments of the path to join\n     */\n    join(...segments: string[])\n    {\n        if (segments.length === 0)\n        { return '.'; }\n        let joined;\n\n        for (let i = 0; i < segments.length; ++i)\n        {\n            const arg = segments[i];\n\n            assertPath(arg);\n            if (arg.length > 0)\n            {\n                if (joined === undefined) joined = arg;\n                else\n                {\n                    const prevArg = segments[i - 1] ?? '';\n\n                    if (this.extname(prevArg))\n                    {\n                        joined += `/../${arg}`;\n                    }\n                    else\n                    {\n                        joined += `/${arg}`;\n                    }\n                }\n            }\n        }\n        if (joined === undefined) { return '.'; }\n\n        return this.normalize(joined);\n    },\n\n    /**\n     * Returns the directory name of a path\n     * @param path - The path to parse\n     */\n    dirname(path: string)\n    {\n        assertPath(path);\n        if (path.length === 0) return '.';\n        path = this.toPosix(path);\n        let code = path.charCodeAt(0);\n        const hasRoot = code === 47;\n        let end = -1;\n        let matchedSlash = true;\n\n        const proto = this.getProtocol(path);\n        const origpath = path;\n\n        path = path.slice(proto.length);\n\n        for (let i = path.length - 1; i >= 1; --i)\n        {\n            code = path.charCodeAt(i);\n            if (code === 47)\n            {\n                if (!matchedSlash)\n                {\n                    end = i;\n                    break;\n                }\n            }\n            else\n            {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n\n        // if end is -1 and its a url then we need to add the path back\n        // eslint-disable-next-line no-nested-ternary\n        if (end === -1) return hasRoot ? '/' : this.isUrl(origpath) ? proto + path : proto;\n        if (hasRoot && end === 1) return '//';\n\n        return proto + path.slice(0, end);\n    },\n\n    /**\n     * Returns the root of the path e.g. /, C:/, file:///, http://domain.com/\n     * @param path - The path to parse\n     */\n    rootname(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        let root = '';\n\n        if (path.startsWith('/')) root = '/';\n        else\n        {\n            root = this.getProtocol(path);\n        }\n\n        if (this.isUrl(path))\n        {\n            // need to find the first path separator\n            const index = path.indexOf('/', root.length);\n\n            if (index !== -1)\n            {\n                root = path.slice(0, index);\n            }\n            else root = path;\n\n            if (!root.endsWith('/')) root += '/';\n        }\n\n        return root;\n    },\n\n    /**\n     * Returns the last portion of a path\n     * @param path - The path to test\n     * @param ext - Optional extension to remove\n     */\n    basename(path: string, ext?: string)\n    {\n        assertPath(path);\n        if (ext) assertPath(ext);\n\n        path = this.toPosix(path);\n\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i: number;\n\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length)\n        {\n            if (ext.length === path.length && ext === path) return '';\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n\n            for (i = path.length - 1; i >= 0; --i)\n            {\n                const code = path.charCodeAt(i);\n\n                if (code === 47)\n                {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash)\n                    {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else\n                {\n                    if (firstNonSlashEnd === -1)\n                    {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0)\n                    {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx))\n                        {\n                            if (--extIdx === -1)\n                            {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else\n                        {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n\n            if (start === end) end = firstNonSlashEnd; else if (end === -1) end = path.length;\n\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i)\n        {\n            if (path.charCodeAt(i) === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n\n        if (end === -1) return '';\n\n        return path.slice(start, end);\n    },\n\n    /**\n     * Returns the extension of the path, from the last occurrence of the . (period) character to end of string in the last\n     * portion of the path. If there is no . in the last portion of the path, or if there are no . characters other than\n     * the first character of the basename of path, an empty string is returned.\n     * @param path - The path to parse\n     */\n    extname(path: string)\n    {\n        assertPath(path);\n        path = this.toPosix(path);\n\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n\n        for (let i = path.length - 1; i >= 0; --i)\n        {\n            const code = path.charCodeAt(i);\n\n            if (code === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46)\n            {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            }\n            else if (startDot !== -1)\n            {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n\n        if (\n            startDot === -1 || end === -1\n            // We saw a non-dot character immediately before the dot\n            || preDotState === 0\n            // The (right-most) trimmed path component is exactly '..'\n            // eslint-disable-next-line no-mixed-operators\n            || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n        )\n        {\n            return '';\n        }\n\n        return path.slice(startDot, end);\n    },\n\n    /**\n     * Parses a path into an object containing the 'root', `dir`, `base`, `ext`, and `name` properties.\n     * @param path - The path to parse\n     */\n    parse(path: string)\n    {\n        assertPath(path);\n\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\n        if (path.length === 0) return ret;\n        path = this.toPosix(path);\n\n        let code = path.charCodeAt(0);\n        const isAbsolute = this.isAbsolute(path);\n        let start: number;\n        const protocol = '';\n\n        ret.root = this.rootname(path);\n\n        if (isAbsolute || this.hasProtocol(path))\n        {\n            start = 1;\n        }\n        else\n        {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n\n        // Get non-dir info\n        for (; i >= start; --i)\n        {\n            code = path.charCodeAt(i);\n            if (code === 47)\n            {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash)\n                {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1)\n            {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46)\n            {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            }\n            else if (startDot !== -1)\n            {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n\n        if (\n            startDot === -1 || end === -1\n            // We saw a non-dot character immediately before the dot\n            || preDotState === 0\n            // The (right-most) trimmed path component is exactly '..'\n            // eslint-disable-next-line no-mixed-operators\n            || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1\n        )\n        {\n            if (end !== -1)\n            {\n                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);\n                else ret.base = ret.name = path.slice(startPart, end);\n            }\n        }\n        else\n        {\n            if (startPart === 0 && isAbsolute)\n            {\n                ret.name = path.slice(1, startDot);\n                ret.base = path.slice(1, end);\n            }\n            else\n            {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n            }\n            ret.ext = path.slice(startDot, end);\n        }\n\n        ret.dir = this.dirname(path);\n        if (protocol) ret.dir = protocol + ret.dir;\n\n        return ret;\n    },\n\n    sep: '/',\n    delimiter: ':'\n} as Path;\n","import { settings } from '@pixi/settings';\n\n/**\n * The prefix that denotes a URL is for a retina asset.\n * @static\n * @name RETINA_PREFIX\n * @memberof PIXI.settings\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nsettings.RETINA_PREFIX = /@([0-9\\.]+)x/;\n\n/**\n * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported` function.\n * If set to true, a WebGL renderer can fail to be created if the browser thinks there could be performance issues when\n * using WebGL.\n *\n * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many scenarios as possible.\n * However, some users may have a poor experience, for example, if a user has a gpu or driver version blacklisted by the\n * browser.\n *\n * If your application requires high performance rendering, you may wish to set this to false.\n * We recommend one of two options if you decide to set this flag to false:\n *\n * 1: Use the `pixi.js-legacy` package, which includes a Canvas renderer as a fallback in case high performance WebGL is\n *    not supported.\n *\n * 2: Call `isWebGLSupported` (which if found in the PIXI.utils package) in your code before attempting to create a PixiJS\n *    renderer, and show an error message to the user if the function returns false, explaining that their device & browser\n *    combination does not support high performance WebGL.\n *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n * @static\n * @name FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n * @memberof PIXI.settings\n * @type {boolean}\n * @default false\n */\nsettings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT = false;\n\nexport { settings };\n","import { settings } from '@pixi/settings';\n\nlet saidHello = false;\nconst VERSION = '$_VERSION';\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello(): void\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type: string): void\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (settings.ADAPTER.getNavigator().userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c PixiJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        globalThis.console.log(...args);\n    }\n    else if (globalThis.console)\n    {\n        globalThis.console.log(`PixiJS ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n","import { settings } from '../settings';\n\nlet supported: boolean | undefined;\n\n/**\n * Helper for checking for WebGL support.\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!settings.ADAPTER.getWebGLRenderingContext())\n                {\n                    return false;\n                }\n\n                const canvas = settings.ADAPTER.createCanvas();\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext;\n\n                const success = !!(gl && gl.getContextAttributes().stencil);\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n","import { default as cssColorNames } from 'css-color-names';\n\n/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @returns {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nexport function hex2rgb(hex: number, out: Array<number> | Float32Array = []): Array<number> | Float32Array\n{\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hexadecimal color number to a string.\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @returns {string} The string color (e.g., `\"#ffffff\"`).\n */\nexport function hex2string(hex: number): string\n{\n    let hexString = hex.toString(16);\n\n    hexString = '000000'.substring(0, 6 - hexString.length) + hexString;\n\n    return `#${hexString}`;\n}\n\n/**\n * Converts a string to a hexadecimal color number.\n * It can handle:\n *  hex strings starting with #: \"#ffffff\"\n *  hex strings starting with 0x: \"0xffffff\"\n *  hex strings without prefix: \"ffffff\"\n *  css colors: \"black\"\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff, which is 16777215 as an integer\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @returns {number} Number in hexadecimal.\n */\nexport function string2hex(string: string): number\n{\n    if (typeof string === 'string')\n    {\n        string = (cssColorNames as {[key: string]: string})[string.toLowerCase()] || string;\n\n        if (string[0] === '#')\n        {\n            string = string.slice(1);\n        }\n    }\n\n    return parseInt(string, 16);\n}\n\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff, which is 16777215 as an integer\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @returns {number} Number in hexadecimal.\n */\nexport function rgb2hex(rgb: number[] | Float32Array): number\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @returns {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes(): number[][]\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array: number[][] = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @constant premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode: number, premultiplied: boolean): number\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * combines rgb and alpha to out array\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(\n    rgb: Float32Array | number[],\n    alpha: number,\n    out?: Float32Array,\n    premultiply?: boolean\n): Float32Array\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * premultiplies tint\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint: number, alpha: number): number\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint: number, alpha: number, out: Float32Array, premultiply?: boolean): Float32Array\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n","/**\n * Generic Mask Stack data structure\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @returns {Uint16Array|Uint32Array} - Resulting index buffer\n */\nexport function createIndicesForQuads(size: number, outBuffer: Uint16Array | Uint32Array = null): Uint16Array | Uint32Array\n{\n    // the total number of indices in our array, there are 6 points per quad.\n    const totalIndices = size * 6;\n\n    outBuffer = outBuffer || new Uint16Array(totalIndices);\n\n    if (outBuffer.length !== totalIndices)\n    {\n        throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n    }\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        outBuffer[i + 0] = j + 0;\n        outBuffer[i + 1] = j + 1;\n        outBuffer[i + 2] = j + 2;\n        outBuffer[i + 3] = j + 0;\n        outBuffer[i + 4] = j + 2;\n        outBuffer[i + 5] = j + 3;\n    }\n\n    return outBuffer;\n}\n","import type { ITypedArray } from '@pixi/core';\n\nexport function getBufferType(\n    array: ITypedArray\n): 'Float32Array' | 'Uint32Array' | 'Int32Array' | 'Uint16Array' | 'Uint8Array' | null\n{\n    if (array.BYTES_PER_ELEMENT === 4)\n    {\n        if (array instanceof Float32Array)\n        {\n            return 'Float32Array';\n        }\n        else if (array instanceof Uint32Array)\n        {\n            return 'Uint32Array';\n        }\n\n        return 'Int32Array';\n    }\n    else if (array.BYTES_PER_ELEMENT === 2)\n    {\n        if (array instanceof Uint16Array)\n        {\n            return 'Uint16Array';\n        }\n    }\n    else if (array.BYTES_PER_ELEMENT === 1)\n    {\n        if (array instanceof Uint8Array)\n        {\n            return 'Uint8Array';\n        }\n    }\n\n    // TODO map out the rest of the array elements!\n    return null;\n}\n","import { getBufferType } from './getBufferType';\n\n/* eslint-disable object-shorthand */\nconst map = { Float32Array: Float32Array, Uint32Array: Uint32Array, Int32Array: Int32Array, Uint8Array: Uint8Array };\n\ntype PackedArray = Float32Array | Uint32Array | Int32Array | Uint8Array;\n\nexport function interleaveTypedArrays(arrays: PackedArray[], sizes: number[]): Float32Array\n{\n    let outSize = 0;\n    let stride = 0;\n    const views: {[key: string]: PackedArray} = {};\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        stride += sizes[i];\n        outSize += arrays[i].length;\n    }\n\n    const buffer = new ArrayBuffer(outSize * 4);\n\n    let out = null;\n    let littleOffset = 0;\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        const size = sizes[i];\n        const array = arrays[i];\n\n        /*\n        @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n              or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n         */\n        const type = getBufferType(array) as keyof typeof map;\n\n        if (!views[type])\n        {\n            views[type] = new map[type](buffer);\n        }\n\n        out = views[type];\n\n        for (let j = 0; j < array.length; j++)\n        {\n            const indexStart = ((j / size | 0) * stride) + littleOffset;\n            const index = j % size;\n\n            out[indexStart + index] = array[j];\n        }\n\n        littleOffset += size;\n    }\n\n    return new Float32Array(buffer);\n}\n","// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} - next rounded power of two\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {boolean} `true` if value is power of two\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @returns {number} logarithm base 2\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n","/**\n * Remove items from a javascript array without generating garbage\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n","/**\n * Returns sign of number\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n: number): -1 | 0 | 1\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n","let nextUid = 0;\n\n/**\n * Gets the next unique identifier\n * @memberof PIXI.utils\n * @function uid\n * @returns {number} The next unique identifier to use.\n */\nexport function uid(): number\n{\n    return ++nextUid;\n}\n","import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n","import type { Program, Texture, BaseTexture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n","import { settings } from '@pixi/settings';\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n * @class\n * @memberof PIXI.utils\n */\nexport class CanvasRenderTarget\n{\n    /** The Canvas object that belongs to this CanvasRenderTarget. */\n    public canvas: HTMLCanvasElement;\n\n    /** A CanvasRenderingContext2D object representing a two-dimensional rendering context. */\n    public context: CanvasRenderingContext2D;\n\n    /**\n     * The resolution / device pixel ratio of the canvas\n     * @default 1\n     */\n    public resolution: number;\n\n    /**\n     * @param width - the width for the newly created canvas\n     * @param height - the height for the newly created canvas\n     * @param {number} [resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the canvas\n     */\n    constructor(width: number, height: number, resolution?: number)\n    {\n        this.canvas = settings.ADAPTER.createCanvas();\n\n        this.context = this.canvas.getContext('2d');\n\n        this.resolution = resolution || settings.RESOLUTION;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     * @private\n     */\n    clear(): void\n    {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     * @param desiredWidth - the desired width of the canvas\n     * @param desiredHeight - the desired height of the canvas\n     */\n    resize(desiredWidth: number, desiredHeight: number): void\n    {\n        this.canvas.width = Math.round(desiredWidth * this.resolution);\n        this.canvas.height = Math.round(desiredHeight * this.resolution);\n    }\n\n    /** Destroys this canvas. */\n    destroy(): void\n    {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.canvas.width;\n    }\n\n    set width(val: number)\n    {\n        this.canvas.width = Math.round(val);\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.canvas.height;\n    }\n\n    set height(val: number)\n    {\n        this.canvas.height = Math.round(val);\n    }\n}\n","interface Inset\n{\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n}\n\n/**\n * Trim transparent borders from a canvas\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport function trimCanvas(canvas: HTMLCanvasElement): {width: number; height: number; data?: ImageData}\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d', {\n        willReadFrequently: true,\n    } as CanvasRenderingContext2DSettings);\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound: Inset = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n","/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n","import { DATA_URI } from '../const';\n\nexport interface DecomposedDataUri\n{\n    mediaType: string;\n    subType: string;\n    charset: string;\n    encoding: string;\n    data: string;\n}\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @returns {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri: string): DecomposedDataUri\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n","import { url as _url } from '../url';\n\nlet tempAnchor: HTMLAnchorElement | undefined;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @returns {string} The crossOrigin value to use (or empty string for none).\n */\nexport function determineCrossOrigin(url: string, loc: Location = globalThis.location): string\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || globalThis.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    const parsedUrl = _url.parse(tempAnchor.href);\n\n    const samePort = (!parsedUrl.port && loc.port === '') || (parsedUrl.port === loc.port);\n\n    // if cross origin\n    if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","import { settings } from '../settings';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @returns {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue?: number): number\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n"]},"metadata":{},"sourceType":"module"}