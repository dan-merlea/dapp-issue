{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('./settings.js');\nvar constants = require('@pixi/constants');\nvar extensions = require('@pixi/extensions');\nvar math = require('@pixi/math');\nvar runner = require('@pixi/runner');\nvar settings = require('@pixi/settings');\nvar ticker = require('@pixi/ticker');\nvar utils = require('@pixi/utils');\nrequire('./textures/resources/index.js');\nrequire('./systems.js');\nrequire('./IRenderer.js');\nvar autoDetectRenderer = require('./autoDetectRenderer.js');\nvar index = require('./fragments/index.js');\nrequire('./system/ISystem.js');\nvar PluginSystem = require('./plugin/PluginSystem.js');\nvar Renderer = require('./Renderer.js');\nvar Framebuffer = require('./framebuffer/Framebuffer.js');\nvar GLFramebuffer = require('./framebuffer/GLFramebuffer.js');\nvar Texture = require('./textures/Texture.js');\nvar BaseTexture = require('./textures/BaseTexture.js');\nvar GLTexture = require('./textures/GLTexture.js');\nvar TextureMatrix = require('./textures/TextureMatrix.js');\nvar RenderTexture = require('./renderTexture/RenderTexture.js');\nvar RenderTexturePool = require('./renderTexture/RenderTexturePool.js');\nvar BaseRenderTexture = require('./renderTexture/BaseRenderTexture.js');\nvar TextureUvs = require('./textures/TextureUvs.js');\nvar State = require('./state/State.js');\nvar ObjectRenderer = require('./batch/ObjectRenderer.js');\nvar BatchRenderer = require('./batch/BatchRenderer.js');\nvar BatchShaderGenerator = require('./batch/BatchShaderGenerator.js');\nvar BatchGeometry = require('./batch/BatchGeometry.js');\nvar BatchDrawCall = require('./batch/BatchDrawCall.js');\nvar BatchTextureArray = require('./batch/BatchTextureArray.js');\nvar Quad = require('./utils/Quad.js');\nvar QuadUv = require('./utils/QuadUv.js');\nvar checkMaxIfStatementsInShader = require('./shader/utils/checkMaxIfStatementsInShader.js');\nvar uniformParsers = require('./shader/utils/uniformParsers.js');\nvar generateUniformBufferSync = require('./shader/utils/generateUniformBufferSync.js');\nvar getTestContext = require('./shader/utils/getTestContext.js');\nvar generateProgram = require('./shader/utils/generateProgram.js');\nvar Shader = require('./shader/Shader.js');\nvar Program = require('./shader/Program.js');\nvar GLProgram = require('./shader/GLProgram.js');\nvar UniformGroup = require('./shader/UniformGroup.js');\nvar MaskData = require('./mask/MaskData.js');\nvar SpriteMaskFilter = require('./filters/spriteMask/SpriteMaskFilter.js');\nvar Filter = require('./filters/Filter.js');\nvar FilterState = require('./filters/FilterState.js');\nrequire('./filters/IFilterTarget.js');\nvar Attribute = require('./geometry/Attribute.js');\nvar Buffer = require('./geometry/Buffer.js');\nvar Geometry = require('./geometry/Geometry.js');\nvar ViewableBuffer = require('./geometry/ViewableBuffer.js');\nvar TransformFeedback = require('./transformFeedback/TransformFeedback.js');\nvar MaskSystem = require('./mask/MaskSystem.js');\nvar StencilSystem = require('./mask/StencilSystem.js');\nvar ScissorSystem = require('./mask/ScissorSystem.js');\nvar FilterSystem = require('./filters/FilterSystem.js');\nvar FramebufferSystem = require('./framebuffer/FramebufferSystem.js');\nvar RenderTextureSystem = require('./renderTexture/RenderTextureSystem.js');\nvar TextureSystem = require('./textures/TextureSystem.js');\nvar ProjectionSystem = require('./projection/ProjectionSystem.js');\nvar StateSystem = require('./state/StateSystem.js');\nvar GeometrySystem = require('./geometry/GeometrySystem.js');\nvar ShaderSystem = require('./shader/ShaderSystem.js');\nvar ContextSystem = require('./context/ContextSystem.js');\nvar BatchSystem = require('./batch/BatchSystem.js');\nvar TextureGCSystem = require('./textures/TextureGCSystem.js');\nvar BufferSystem = require('./geometry/BufferSystem.js');\nvar MultisampleSystem = require('./framebuffer/MultisampleSystem.js');\nvar GenerateTextureSystem = require('./renderTexture/GenerateTextureSystem.js');\nvar BackgroundSystem = require('./background/BackgroundSystem.js');\nvar ViewSystem = require('./view/ViewSystem.js');\nvar ObjectRendererSystem = require('./render/ObjectRendererSystem.js');\nvar StartupSystem = require('./startup/StartupSystem.js');\nvar TransformFeedbackSystem = require('./transformFeedback/TransformFeedbackSystem.js');\nvar Resource = require('./textures/resources/Resource.js');\nvar BaseImageResource = require('./textures/resources/BaseImageResource.js');\nvar autoDetectResource = require('./textures/resources/autoDetectResource.js');\nvar AbstractMultiResource = require('./textures/resources/AbstractMultiResource.js');\nvar ArrayResource = require('./textures/resources/ArrayResource.js');\nvar BufferResource = require('./textures/resources/BufferResource.js');\nvar CanvasResource = require('./textures/resources/CanvasResource.js');\nvar CubeResource = require('./textures/resources/CubeResource.js');\nvar ImageResource = require('./textures/resources/ImageResource.js');\nvar SVGResource = require('./textures/resources/SVGResource.js');\nvar VideoResource = require('./textures/resources/VideoResource.js');\nvar ImageBitmapResource = require('./textures/resources/ImageBitmapResource.js');\nvar SystemManager = require('./system/SystemManager.js');\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function get() {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return n;\n}\nvar utils__namespace = /*#__PURE__*/_interopNamespace(utils);\nvar VERSION = \"7.0.0\";\nexports.utils = utils__namespace;\nexports.autoDetectRenderer = autoDetectRenderer.autoDetectRenderer;\nexports.defaultFilterVertex = index.defaultFilterVertex;\nexports.defaultVertex = index.defaultVertex;\nexports.PluginSystem = PluginSystem.PluginSystem;\nexports.Renderer = Renderer.Renderer;\nexports.Framebuffer = Framebuffer.Framebuffer;\nexports.GLFramebuffer = GLFramebuffer.GLFramebuffer;\nexports.Texture = Texture.Texture;\nexports.BaseTexture = BaseTexture.BaseTexture;\nexports.GLTexture = GLTexture.GLTexture;\nexports.TextureMatrix = TextureMatrix.TextureMatrix;\nexports.RenderTexture = RenderTexture.RenderTexture;\nexports.RenderTexturePool = RenderTexturePool.RenderTexturePool;\nexports.BaseRenderTexture = BaseRenderTexture.BaseRenderTexture;\nexports.TextureUvs = TextureUvs.TextureUvs;\nexports.State = State.State;\nexports.ObjectRenderer = ObjectRenderer.ObjectRenderer;\nexports.BatchRenderer = BatchRenderer.BatchRenderer;\nexports.BatchShaderGenerator = BatchShaderGenerator.BatchShaderGenerator;\nexports.BatchGeometry = BatchGeometry.BatchGeometry;\nexports.BatchDrawCall = BatchDrawCall.BatchDrawCall;\nexports.BatchTextureArray = BatchTextureArray.BatchTextureArray;\nexports.Quad = Quad.Quad;\nexports.QuadUv = QuadUv.QuadUv;\nexports.checkMaxIfStatementsInShader = checkMaxIfStatementsInShader.checkMaxIfStatementsInShader;\nexports.uniformParsers = uniformParsers.uniformParsers;\nexports.createUBOElements = generateUniformBufferSync.createUBOElements;\nexports.generateUniformBufferSync = generateUniformBufferSync.generateUniformBufferSync;\nexports.getUBOData = generateUniformBufferSync.getUBOData;\nexports.getTestContext = getTestContext.getTestContext;\nexports.generateProgram = generateProgram.generateProgram;\nexports.Shader = Shader.Shader;\nexports.Program = Program.Program;\nexports.GLProgram = GLProgram.GLProgram;\nexports.IGLUniformData = GLProgram.IGLUniformData;\nexports.UniformGroup = UniformGroup.UniformGroup;\nexports.MaskData = MaskData.MaskData;\nexports.SpriteMaskFilter = SpriteMaskFilter.SpriteMaskFilter;\nexports.Filter = Filter.Filter;\nexports.FilterState = FilterState.FilterState;\nexports.Attribute = Attribute.Attribute;\nexports.Buffer = Buffer.Buffer;\nexports.Geometry = Geometry.Geometry;\nexports.ViewableBuffer = ViewableBuffer.ViewableBuffer;\nexports.TransformFeedback = TransformFeedback.TransformFeedback;\nexports.MaskSystem = MaskSystem.MaskSystem;\nexports.StencilSystem = StencilSystem.StencilSystem;\nexports.ScissorSystem = ScissorSystem.ScissorSystem;\nexports.FilterSystem = FilterSystem.FilterSystem;\nexports.FramebufferSystem = FramebufferSystem.FramebufferSystem;\nexports.RenderTextureSystem = RenderTextureSystem.RenderTextureSystem;\nexports.TextureSystem = TextureSystem.TextureSystem;\nexports.ProjectionSystem = ProjectionSystem.ProjectionSystem;\nexports.StateSystem = StateSystem.StateSystem;\nexports.GeometrySystem = GeometrySystem.GeometrySystem;\nexports.ShaderSystem = ShaderSystem.ShaderSystem;\nexports.ContextSystem = ContextSystem.ContextSystem;\nexports.BatchSystem = BatchSystem.BatchSystem;\nexports.TextureGCSystem = TextureGCSystem.TextureGCSystem;\nexports.BufferSystem = BufferSystem.BufferSystem;\nexports.MultisampleSystem = MultisampleSystem.MultisampleSystem;\nexports.GenerateTextureSystem = GenerateTextureSystem.GenerateTextureSystem;\nexports.BackgroundSystem = BackgroundSystem.BackgroundSystem;\nexports.ViewSystem = ViewSystem.ViewSystem;\nexports.ObjectRendererSystem = ObjectRendererSystem.ObjectRendererSystem;\nexports.StartupSystem = StartupSystem.StartupSystem;\nexports.TransformFeedbackSystem = TransformFeedbackSystem.TransformFeedbackSystem;\nexports.Resource = Resource.Resource;\nexports.BaseImageResource = BaseImageResource.BaseImageResource;\nexports.INSTALLED = autoDetectResource.INSTALLED;\nexports.autoDetectResource = autoDetectResource.autoDetectResource;\nexports.AbstractMultiResource = AbstractMultiResource.AbstractMultiResource;\nexports.ArrayResource = ArrayResource.ArrayResource;\nexports.BufferResource = BufferResource.BufferResource;\nexports.CanvasResource = CanvasResource.CanvasResource;\nexports.CubeResource = CubeResource.CubeResource;\nexports.ImageResource = ImageResource.ImageResource;\nexports.SVGResource = SVGResource.SVGResource;\nexports.VideoResource = VideoResource.VideoResource;\nexports.ImageBitmapResource = ImageBitmapResource.ImageBitmapResource;\nexports.SystemManager = SystemManager.SystemManager;\nexports.VERSION = VERSION;\nObject.keys(constants).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return constants[k];\n    }\n  });\n});\nObject.keys(extensions).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return extensions[k];\n    }\n  });\n});\nObject.keys(math).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return math[k];\n    }\n  });\n});\nObject.keys(runner).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return runner[k];\n    }\n  });\n});\nObject.keys(settings).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return settings[k];\n    }\n  });\n});\nObject.keys(ticker).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function get() {\n      return ticker[k];\n    }\n  });\n});","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWO,IAAM,OAAU,GAAA,OAAA","sourcesContent":["/// <reference path=\"../global.d.ts\" />\nimport './settings';\n\n/**\n * @namespace PIXI\n */\n\n/**\n * String of the current PIXI version.\n * @memberof PIXI\n */\nexport const VERSION = '$_VERSION';\n\n// Export dependencies\nexport * from '@pixi/constants';\nexport * from '@pixi/extensions';\nexport * from '@pixi/math';\nexport * from '@pixi/runner';\nexport * from '@pixi/settings';\nexport * from '@pixi/ticker';\nimport * as utils from '@pixi/utils';\nexport { utils };\n\nexport * from './textures/resources';\nexport * from './systems';\nexport * from './IRenderer';\nexport * from './autoDetectRenderer';\nexport * from './fragments';\nexport * from './system/ISystem';\nexport * from './IRenderer';\nexport * from './plugin/PluginSystem';\nexport * from './Renderer';\nexport * from './framebuffer/Framebuffer';\nexport * from './framebuffer/GLFramebuffer';\nexport * from './textures/Texture';\nexport * from './textures/BaseTexture';\nexport * from './textures/GLTexture';\nexport * from './textures/TextureMatrix';\nexport * from './renderTexture/RenderTexture';\nexport * from './renderTexture/RenderTexturePool';\nexport * from './renderTexture/BaseRenderTexture';\nexport * from './textures/TextureUvs';\nexport * from './state/State';\nexport * from './batch/ObjectRenderer';\nexport * from './batch/BatchRenderer';\nexport * from './batch/BatchShaderGenerator';\nexport * from './batch/BatchGeometry';\nexport * from './batch/BatchDrawCall';\nexport * from './batch/BatchTextureArray';\nexport * from './utils/Quad';\nexport * from './utils/QuadUv';\nexport * from './shader/utils/checkMaxIfStatementsInShader';\nexport * from './shader/utils/uniformParsers';\nexport * from './shader/utils/generateUniformBufferSync';\nexport * from './shader/utils/getTestContext';\nexport * from './shader/utils/generateProgram';\nexport * from './shader/Shader';\nexport * from './shader/Program';\nexport * from './shader/GLProgram';\nexport * from './shader/UniformGroup';\nexport * from './mask/MaskData';\nexport * from './filters/spriteMask/SpriteMaskFilter';\nexport * from './filters/Filter';\nexport * from './filters/FilterState';\nexport * from './filters/IFilterTarget';\nexport * from './geometry/Attribute';\nexport * from './geometry/Buffer';\nexport * from './geometry/Geometry';\nexport * from './geometry/ViewableBuffer';\nexport * from './transformFeedback/TransformFeedback';\n\nexport * from './mask/MaskSystem';\nexport * from './mask/StencilSystem';\nexport * from './mask/ScissorSystem';\nexport * from './filters/FilterSystem';\nexport * from './framebuffer/FramebufferSystem';\nexport * from './renderTexture/RenderTextureSystem';\nexport * from './textures/TextureSystem';\nexport * from './projection/ProjectionSystem';\nexport * from './state/StateSystem';\nexport * from './geometry/GeometrySystem';\nexport * from './shader/ShaderSystem';\nexport * from './context/ContextSystem';\nexport * from './batch/BatchSystem';\nexport * from './textures/TextureGCSystem';\nexport * from './geometry/BufferSystem';\nexport * from './plugin/PluginSystem';\nexport * from './framebuffer/MultisampleSystem';\nexport * from './renderTexture/GenerateTextureSystem';\nexport * from './renderTexture/GenerateTextureSystem';\nexport * from './background/BackgroundSystem';\nexport * from './view/ViewSystem';\nexport * from './render/ObjectRendererSystem';\nexport * from './startup/StartupSystem';\nexport * from './transformFeedback/TransformFeedbackSystem';\n"]},"metadata":{},"sourceType":"script"}