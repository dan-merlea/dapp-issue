{"ast":null,"code":"import _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport React from 'react';\nexport function useStateRef(initialValue) {\n  _s();\n  var _React$useState = React.useState(initialValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var ref = React.useRef(value);\n  React.useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return [value, setValue, ref];\n}\n_s(useStateRef, \"IZbTtmQWXooT4dB7e2VdAucjkxQ=\");","map":{"version":3,"names":["React","useStateRef","initialValue","useState","value","setValue","ref","useRef","useEffect","current"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/hooks/useStateRef.tsx"],"sourcesContent":["import React from 'react';\n\nexport function useStateRef(initialValue) {\n\tconst [value, setValue] = React.useState(initialValue)\n\tconst ref = React.useRef(value)\n  \n\tReact.useEffect(() => {\n\t\tref.current = value\n\t}, [value])\n  \n\treturn [value, setValue, ref]\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,WAAW,CAACC,YAAY,EAAE;EAAA;EACzC,sBAA0BF,KAAK,CAACG,QAAQ,CAACD,YAAY,CAAC;IAAA;IAA/CE,KAAK;IAAEC,QAAQ;EACtB,IAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAACH,KAAK,CAAC;EAE/BJ,KAAK,CAACQ,SAAS,CAAC,YAAM;IACrBF,GAAG,CAACG,OAAO,GAAGL,KAAK;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAO,CAACA,KAAK,EAAEC,QAAQ,EAAEC,GAAG,CAAC;AAC9B;AAAC,GATeL,WAAW"},"metadata":{},"sourceType":"module"}