{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nrequire('../../loader/index.js');\nvar loadTexture = require('../../loader/parsers/textures/loadTexture.js');\nvar resolveTextureUrl = {\n  extension: core.ExtensionType.ResolveParser,\n  test: loadTexture.loadTextures.test,\n  parse: function parse(value) {\n    var _core$settings$RETINA, _core$settings$RETINA2;\n    return {\n      resolution: parseFloat((_core$settings$RETINA = (_core$settings$RETINA2 = core.settings.RETINA_PREFIX.exec(value)) === null || _core$settings$RETINA2 === void 0 ? void 0 : _core$settings$RETINA2[1]) !== null && _core$settings$RETINA !== void 0 ? _core$settings$RETINA : \"1\"),\n      format: value.split(\".\").pop(),\n      src: value\n    };\n  }\n};\ncore.extensions.add(resolveTextureUrl);\nexports.resolveTextureUrl = resolveTextureUrl;","map":{"version":3,"sources":["../../../src/resolver/parsers/resolveTextureUrl.ts"],"names":["ExtensionType","loadTextures","settings","extensions"],"mappings":";;;;;;;;AAKO,IAAM,iBAAoB,GAAA;EAC7B,SAAA,EAAWA,IAAAA,CAAAA,aAAc,CAAA,aAAA;EACzB,IAAA,EAAMC,WAAAA,CAAAA,YAAa,CAAA,IAAA;EACnB,KAAA,EAAO,eAAC,KACH;IAAA;IAAA,OAAA;MACG,UAAA,EAAY,UAAA,oDAAWC,IAAAA,CAAAA,QAAS,CAAA,aAAA,CAAc,IAAA,CAAK,KAAK,CAAA,2DAAjCA,uBAAqC,CAAA,CAAA,yEAAM,GAAG,CAAA;MACrE,MAAQ,EAAA,KAAA,CAAM,KAAM,CAAA,GAAG,CAAA,CAAE,GAAI,EAAA;MAC7B,GAAK,EAAA;IAAA,CACT;EAAA;AACR,CAAA;AAEAC,IAAAA,CAAAA,UAAAA,CAAW,GAAA,CAAI,iBAAiB,CAAA","sourcesContent":["import { settings, extensions, ExtensionType } from '@pixi/core';\nimport { loadTextures } from '../../loader';\n\nimport type { ResolveAsset, ResolveURLParser } from '../types';\n\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): ResolveAsset =>\n        ({\n            resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n\nextensions.add(resolveTextureUrl);\n"]},"metadata":{},"sourceType":"script"}