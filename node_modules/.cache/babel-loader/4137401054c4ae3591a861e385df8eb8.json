{"ast":null,"code":"import _classCallCheck from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _get from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/get.js\";import _getPrototypeOf from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";import _inherits from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Container,MIPMAP_MODES,Point,Sprite,Texture}from'pixi.js';import PathSprite from'./PathSprite';import{TextLabel}from'..';import{Constants,Maths}from'@krogan/common';import{TargetTexture}from'images/textures';import timeLeftToShortString from'utils/time';import SpaceshipIcon from'./SpaceshipIcon';var PathDirection;(function(PathDirection){PathDirection[PathDirection[\"X\"]=0]=\"X\";PathDirection[PathDirection[\"Y\"]=1]=\"Y\";PathDirection[PathDirection[\"Z\"]=2]=\"Z\";})(PathDirection||(PathDirection={}));var MapPathContainer=/*#__PURE__*/function(_Container){_inherits(MapPathContainer,_Container);var _super=_createSuper(MapPathContainer);function MapPathContainer(tiles,travel){var _this;_classCallCheck(this,MapPathContainer);_this=_super.call(this);_this._segments=[];_this._spaceship=void 0;_this._time=void 0;_this.timer=void 0;var pathLength=tiles.length;_this.drawNextSegment(tiles);var destination=tiles.first();var texture=Texture.from(TargetTexture);texture.baseTexture.mipmap=MIPMAP_MODES.POW2;var target=new Sprite(texture);target.anchor.x=0.5;target.anchor.y=0.5;target.width=20;target.height=18;target.x=destination.x;target.y=destination.y;_this.addChild(target);_this._time=new TextLabel('Warp',8);_this._time.x=destination.x+9;_this._time.y=destination.y-18;_this.addChild(_this._time);var spaceship=new SpaceshipIcon(-100,-100);_this.addChild(spaceship);_this._spaceship=spaceship;if(travel){var progress=Maths.getTimeProgress(travel.start,travel.end);spaceship.alignOnPath(_this.getPathPosition(progress));_this.timer=setInterval(function(){_this.updateSpaceshipPosition(travel);},1000);}else{spaceship.alignOnPath(_this.getPathPosition(0));var timeLeft=Constants.PATH_TIME(pathLength);var timeLeftText=timeLeftToShortString(timeLeft/1000);_this._time.setText(timeLeftText);}_this.zIndex=100;// 0-99 it's the tile \n// TODO: change this to enum of layers\nreturn _this;}_createClass(MapPathContainer,[{key:\"destroy\",value:function destroy(){if(this.timer)clearInterval(this.timer);_get(_getPrototypeOf(MapPathContainer.prototype),\"destroy\",this).call(this);}},{key:\"updateSpaceshipPosition\",value:function updateSpaceshipPosition(travel){var progress=Maths.getTimeProgress(travel.start,travel.end);if(progress==1)this.destroy();this._spaceship.alignOnPath(this.getPathPosition(progress));var timeLeft=(travel.end-Date.now())/1000;console.log(\"[Travel][Update] Time left: \".concat(timeLeft));var timeLeftText=timeLeftToShortString(timeLeft);this._time.setText(timeLeftText);}},{key:\"drawNextSegment\",value:function drawNextSegment(tiles){if(tiles.length<2)return;var start=tiles.pop();var prev=start;var next=tiles.pop();// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nvar direction=this.getPathDirection(prev,next);var newDirection=direction;do{prev=next;next=tiles.pop();if(!next)break;newDirection=this.getPathDirection(prev,next);}while(direction==newDirection);if(start&&prev){this.drawPath(start,prev);if(next)tiles.push(next);tiles.push(prev);}this.drawNextSegment(tiles);}},{key:\"getPathDirection\",value:function getPathDirection(prev,next){if(prev.coordinate.x==next.coordinate.x){return PathDirection.X;}else if(prev.coordinate.y==next.coordinate.y){return PathDirection.Y;}else{return PathDirection.Z;}}},{key:\"drawPath\",value:function drawPath(start,end){var path=new PathSprite(start.position.x,start.position.y,end.position.x,end.position.y);this.addChild(path);this._segments.push(path);}/**\n\t * @param {number} progress A number from 0 to 1 to represent the progress.\n\t */},{key:\"getPathPosition\",value:function getPathPosition(progress){var totalDistance=this._segments.reduce(function(partialSum,seg){return partialSum+seg.distance;},0);var distanceReached=0;for(var i=0;i<this._segments.length;i++){var segment=this._segments[i];if(distanceReached+segment.distance>totalDistance*progress){// partial segment\nvar segmentProgress=totalDistance*progress-distanceReached;var segmentPercentage=segmentProgress/segment.distance;return{position:segment.pointAt(segmentPercentage),angle:segment.angle};}// completed segment\ndistanceReached+=segment.distance;}return{position:new Point(0,0),angle:0};}}]);return MapPathContainer;}(Container);export{MapPathContainer as default};","map":null,"metadata":{},"sourceType":"module"}