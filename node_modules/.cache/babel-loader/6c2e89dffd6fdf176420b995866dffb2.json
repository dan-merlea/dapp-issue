{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction applyOption(string, props, option) {\n  // conditional\n  if (typeof option === \"function\") {\n    return option(string, props);\n  }\n  // all\n  else {\n    return option;\n  }\n}\nfunction transform(input, options) {\n  var protocol = \"\";\n  var truncation = Infinity;\n  var attributes = {};\n  var truncateFromTheMiddle = false;\n  // special transformation\n  if (options && options.specialTransform) {\n    for (var index = 0; index < options.specialTransform.length; index++) {\n      var transformer = options.specialTransform[index];\n      if (transformer.test.test(input.string)) {\n        return transformer.transform(input.string, input);\n      }\n    }\n  }\n  // exclude\n  if (options && options.exclude) {\n    if (applyOption(input.string, input, options.exclude)) return input.string;\n  }\n  // protocol\n  if (options && options.protocol) {\n    protocol = applyOption(input.string, input, options.protocol);\n  }\n  if (input.protocol) {\n    protocol = \"\";\n  } else if (!protocol) {\n    protocol = input.isEmail ? \"mailto:\" : input.isFile ? \"file:///\" : \"http://\";\n  }\n  // truncation\n  if (options && options.truncate) {\n    truncation = applyOption(input.string, input, options.truncate);\n  }\n  if (options && options.middleTruncation) {\n    truncateFromTheMiddle = applyOption(input.string, input, options.middleTruncation);\n  }\n  // attributes\n  if (options && options.attributes) {\n    attributes = applyOption(input.string, input, options.attributes);\n  }\n  return \"<a \" + Object.keys(attributes).map(function (key) {\n    return attributes[key] === true ? key : key + \"=\\\"\" + attributes[key] + \"\\\" \";\n  }).join(\" \") + \"href=\\\"\" + protocol + input.string + \"\\\">\" + (input.string.length > truncation ? truncateFromTheMiddle ? input.string.substring(0, Math.floor(truncation / 2)) + \"…\" + input.string.substring(input.string.length - Math.ceil(truncation / 2), input.string.length) : input.string.substring(0, truncation) + \"…\" : input.string) + \"</a>\";\n}\nexports.transform = transform;","map":null,"metadata":{},"sourceType":"script"}