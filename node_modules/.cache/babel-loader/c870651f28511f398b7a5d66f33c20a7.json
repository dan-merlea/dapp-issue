{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Constants } from '@krogan/common';\nimport { Graphics, Sprite } from 'pixi.js';\nimport AsyncSprite from 'sprites/util/AsyncSprite';\nimport { clientUrl } from 'utils/server';\n\n/**\n * A sprite representing a random star\n */\nvar StarbaseSprite = /*#__PURE__*/function (_AsyncSprite) {\n  _inherits(StarbaseSprite, _AsyncSprite);\n  var _super = _createSuper(StarbaseSprite);\n  function StarbaseSprite(starbase) {\n    var _this;\n    _classCallCheck(this, StarbaseSprite);\n    _this = _super.call(this, clientUrl() + \"/sprites/starbase/\".concat(starbase.type, \"/base.png\"));\n    _this.starbase = void 0;\n    _this.starbase = starbase;\n    return _this;\n  }\n  _createClass(StarbaseSprite, [{\n    key: \"onTextureLoad\",\n    value: function onTextureLoad(texture) {\n      _get(_getPrototypeOf(StarbaseSprite.prototype), \"onTextureLoad\", this).call(this, texture);\n      var sprite = new Sprite(texture);\n      sprite.anchor.x = 0.5;\n      sprite.anchor.y = 0.5;\n      sprite.angle = this.starbase.position.angle;\n      sprite.width = this.starbase.radius * 2;\n      sprite.height = this.starbase.radius * 2;\n      this.spriteCreated(sprite);\n      this.addModules();\n      if (Constants.DEBUG) {\n        var bounds = new Graphics();\n        bounds.lineStyle(0.5, 0xff00ff);\n        bounds.drawCircle(0, 0, this.starbase.radius);\n        bounds.endFill();\n        this.addChild(bounds);\n      }\n      this.position.set(this.starbase.position.x, this.starbase.position.y);\n    }\n  }, {\n    key: \"addModules\",\n    value: function () {\n      var _addModules = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var i, module, texture, sprite;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n              case 1:\n                if (!(i < this.starbase.modules.length)) {\n                  _context.next = 16;\n                  break;\n                }\n                module = this.starbase.modules[i];\n                _context.next = 5;\n                return AsyncSprite.loadTexture(clientUrl() + \"/sprites/starbase/\".concat(this.starbase.type, \"/\").concat(module.level, \".png\"));\n              case 5:\n                texture = _context.sent;\n                sprite = new Sprite(texture);\n                sprite.anchor.x = 0.5;\n                sprite.anchor.y = 1;\n                sprite.pivot.y = this.starbase.radius;\n                sprite.angle = 90 * module.position;\n                this.addChild(sprite);\n                console.log(sprite);\n              case 13:\n                i++;\n                _context.next = 1;\n                break;\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function addModules() {\n        return _addModules.apply(this, arguments);\n      }\n      return addModules;\n    }()\n  }]);\n  return StarbaseSprite;\n}(AsyncSprite);\nexport { StarbaseSprite as default };","map":{"version":3,"names":["Constants","Graphics","Sprite","AsyncSprite","clientUrl","StarbaseSprite","starbase","type","texture","sprite","anchor","x","y","angle","position","width","radius","height","spriteCreated","addModules","DEBUG","bounds","lineStyle","drawCircle","endFill","addChild","set","i","modules","length","module","loadTexture","level","pivot","console","log"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/game/StarbaseSprite.ts"],"sourcesContent":["import { Constants } from '@krogan/common';\nimport { Graphics, Sprite, Texture } from 'pixi.js';\nimport AsyncSprite from 'sprites/util/AsyncSprite';\nimport { Starbase } from 'state/Starbase';\nimport { clientUrl } from 'utils/server';\n\n/**\n * A sprite representing a random star\n */\nexport default class StarbaseSprite extends AsyncSprite {\n\n\tprivate starbase: Starbase\n\n    constructor(starbase: Starbase) {\n\t\tsuper(clientUrl() + `/sprites/starbase/${starbase.type}/base.png`)\n\t\tthis.starbase = starbase\n    }\n\n\tonTextureLoad(texture: Texture) {\n\t\tsuper.onTextureLoad(texture)\n\n\t\tconst sprite = new Sprite(texture)\n\t\tsprite.anchor.x = 0.5\n\t\tsprite.anchor.y = 0.5\n\t\tsprite.angle = this.starbase.position.angle\n\t\tsprite.width = this.starbase.radius * 2\n\t\tsprite.height = this.starbase.radius * 2\n\t\tthis.spriteCreated(sprite)\n\t\tthis.addModules()\n\n\t\tif (Constants.DEBUG) {\n\t\t\tconst bounds = new Graphics()\n\t\t\tbounds.lineStyle(0.5, 0xff00ff)\n\t\t\tbounds.drawCircle(0, 0, this.starbase.radius)\n\t\t\tbounds.endFill()\n\t\t\tthis.addChild(bounds)\n\t\t}\n\n\t\tthis.position.set(this.starbase.position.x, this.starbase.position.y)\n\t}\n\n\tasync addModules() {\n\t\tfor (let i = 0; i < this.starbase.modules.length; i++) {\n\t\t\tconst module = this.starbase.modules[i];\n\t\t\t\n\t\t\tconst texture = await AsyncSprite.loadTexture(clientUrl() + `/sprites/starbase/${this.starbase.type}/${module.level}.png`)\n\t\t\tconst sprite = new Sprite(texture)\n\t\t\tsprite.anchor.x = 0.5\n\t\t\tsprite.anchor.y = 1\n\t\t\tsprite.pivot.y = this.starbase.radius\n\t\t\tsprite.angle = 90 * module.position\n\t\t\tthis.addChild(sprite)\n\n\t\t\tconsole.log(sprite)\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,QAAQ,EAAEC,MAAM,QAAiB,SAAS;AACnD,OAAOC,WAAW,MAAM,0BAA0B;AAElD,SAASC,SAAS,QAAQ,cAAc;;AAExC;AACA;AACA;AAFA,IAGqBC,cAAc;EAAA;EAAA;EAI/B,wBAAYC,QAAkB,EAAE;IAAA;IAAA;IAClC,0BAAMF,SAAS,EAAE,+BAAwBE,QAAQ,CAACC,IAAI,cAAW;IAAC,MAH3DD,QAAQ;IAIf,MAAKA,QAAQ,GAAGA,QAAQ;IAAA;EACtB;EAAC;IAAA;IAAA,OAEJ,uBAAcE,OAAgB,EAAE;MAC/B,kFAAoBA,OAAO;MAE3B,IAAMC,MAAM,GAAG,IAAIP,MAAM,CAACM,OAAO,CAAC;MAClCC,MAAM,CAACC,MAAM,CAACC,CAAC,GAAG,GAAG;MACrBF,MAAM,CAACC,MAAM,CAACE,CAAC,GAAG,GAAG;MACrBH,MAAM,CAACI,KAAK,GAAG,IAAI,CAACP,QAAQ,CAACQ,QAAQ,CAACD,KAAK;MAC3CJ,MAAM,CAACM,KAAK,GAAG,IAAI,CAACT,QAAQ,CAACU,MAAM,GAAG,CAAC;MACvCP,MAAM,CAACQ,MAAM,GAAG,IAAI,CAACX,QAAQ,CAACU,MAAM,GAAG,CAAC;MACxC,IAAI,CAACE,aAAa,CAACT,MAAM,CAAC;MAC1B,IAAI,CAACU,UAAU,EAAE;MAEjB,IAAInB,SAAS,CAACoB,KAAK,EAAE;QACpB,IAAMC,MAAM,GAAG,IAAIpB,QAAQ,EAAE;QAC7BoB,MAAM,CAACC,SAAS,CAAC,GAAG,EAAE,QAAQ,CAAC;QAC/BD,MAAM,CAACE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACjB,QAAQ,CAACU,MAAM,CAAC;QAC7CK,MAAM,CAACG,OAAO,EAAE;QAChB,IAAI,CAACC,QAAQ,CAACJ,MAAM,CAAC;MACtB;MAEA,IAAI,CAACP,QAAQ,CAACY,GAAG,CAAC,IAAI,CAACpB,QAAQ,CAACQ,QAAQ,CAACH,CAAC,EAAE,IAAI,CAACL,QAAQ,CAACQ,QAAQ,CAACF,CAAC,CAAC;IACtE;EAAC;IAAA;IAAA;MAAA,6EAED;QAAA;QAAA;UAAA;YAAA;cAAA;gBACUe,CAAC,GAAG,CAAC;cAAA;gBAAA,MAAEA,CAAC,GAAG,IAAI,CAACrB,QAAQ,CAACsB,OAAO,CAACC,MAAM;kBAAA;kBAAA;gBAAA;gBACzCC,MAAM,GAAG,IAAI,CAACxB,QAAQ,CAACsB,OAAO,CAACD,CAAC,CAAC;gBAAA;gBAAA,OAEjBxB,WAAW,CAAC4B,WAAW,CAAC3B,SAAS,EAAE,+BAAwB,IAAI,CAACE,QAAQ,CAACC,IAAI,cAAIuB,MAAM,CAACE,KAAK,SAAM,CAAC;cAAA;gBAApHxB,OAAO;gBACPC,MAAM,GAAG,IAAIP,MAAM,CAACM,OAAO,CAAC;gBAClCC,MAAM,CAACC,MAAM,CAACC,CAAC,GAAG,GAAG;gBACrBF,MAAM,CAACC,MAAM,CAACE,CAAC,GAAG,CAAC;gBACnBH,MAAM,CAACwB,KAAK,CAACrB,CAAC,GAAG,IAAI,CAACN,QAAQ,CAACU,MAAM;gBACrCP,MAAM,CAACI,KAAK,GAAG,EAAE,GAAGiB,MAAM,CAAChB,QAAQ;gBACnC,IAAI,CAACW,QAAQ,CAAChB,MAAM,CAAC;gBAErByB,OAAO,CAACC,GAAG,CAAC1B,MAAM,CAAC;cAAA;gBAX8BkB,CAAC,EAAE;gBAAA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAarD;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EA9C0CxB,WAAW;AAAA,SAAlCE,cAAc"},"metadata":{},"sourceType":"module"}