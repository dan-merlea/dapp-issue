{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionOnNetwork = void 0;\nvar transactionStatus_1 = require(\"./transactionStatus\");\nvar contractResults_1 = require(\"./contractResults\");\nvar primitives_1 = require(\"./primitives\");\nvar transactionCompletionStrategy_1 = require(\"./transactionCompletionStrategy\");\nvar transactionLogs_1 = require(\"./transactionLogs\");\nvar transactionReceipt_1 = require(\"./transactionReceipt\");\nvar TransactionOnNetwork = /*#__PURE__*/function () {\n  function TransactionOnNetwork(init) {\n    _classCallCheck(this, TransactionOnNetwork);\n    this.isCompleted = false;\n    this.hash = \"\";\n    this.type = \"\";\n    this.nonce = 0;\n    this.round = 0;\n    this.epoch = 0;\n    this.value = \"\";\n    this.receiver = new primitives_1.Address(\"\");\n    this.sender = new primitives_1.Address(\"\");\n    this.gasLimit = 0;\n    this.gasPrice = 0;\n    this.data = Buffer.from([]);\n    this.signature = \"\";\n    this.status = transactionStatus_1.TransactionStatus.createUnknown();\n    this.timestamp = 0;\n    this.blockNonce = 0;\n    this.hyperblockNonce = 0;\n    this.hyperblockHash = \"\";\n    this.receipt = new transactionReceipt_1.TransactionReceipt();\n    this.contractResults = new contractResults_1.ContractResults([]);\n    this.logs = new transactionLogs_1.TransactionLogs();\n    Object.assign(this, init);\n  }\n  _createClass(TransactionOnNetwork, [{\n    key: \"getDateTime\",\n    value: function getDateTime() {\n      return new Date(this.timestamp * 1000);\n    }\n  }], [{\n    key: \"fromProxyHttpResponse\",\n    value: function fromProxyHttpResponse(txHash, response) {\n      var result = TransactionOnNetwork.fromHttpResponse(txHash, response);\n      result.contractResults = contractResults_1.ContractResults.fromProxyHttpResponse(response.smartContractResults || []);\n      result.isCompleted = new transactionCompletionStrategy_1.TransactionCompletionStrategyOnProxy().isCompleted(result);\n      // TODO: uniformize transaction status.\n      return result;\n    }\n  }, {\n    key: \"fromApiHttpResponse\",\n    value: function fromApiHttpResponse(txHash, response) {\n      var result = TransactionOnNetwork.fromHttpResponse(txHash, response);\n      result.contractResults = contractResults_1.ContractResults.fromApiHttpResponse(response.results || []);\n      result.isCompleted = new transactionCompletionStrategy_1.TransactionCompletionStrategyOnAPI().isCompleted(result);\n      // TODO: uniformize transaction status.\n      return result;\n    }\n  }, {\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(txHash, response) {\n      var result = new TransactionOnNetwork();\n      result.hash = txHash;\n      result.type = response.type || \"\";\n      result.nonce = response.nonce || 0;\n      result.round = response.round;\n      result.epoch = response.epoch || 0;\n      result.value = (response.value || 0).toString();\n      result.sender = new primitives_1.Address(response.sender);\n      result.receiver = new primitives_1.Address(response.receiver);\n      result.gasPrice = response.gasPrice || 0;\n      result.gasLimit = response.gasLimit || 0;\n      result.data = Buffer.from(response.data || \"\", \"base64\");\n      result.status = new transactionStatus_1.TransactionStatus(response.status);\n      result.timestamp = response.timestamp || 0;\n      result.blockNonce = response.blockNonce || 0;\n      result.hyperblockNonce = response.hyperblockNonce || 0;\n      result.hyperblockHash = response.hyperblockHash || \"\";\n      result.receipt = transactionReceipt_1.TransactionReceipt.fromHttpResponse(response.receipt || {});\n      result.logs = transactionLogs_1.TransactionLogs.fromHttpResponse(response.logs || {});\n      return result;\n    }\n  }]);\n  return TransactionOnNetwork;\n}();\nexports.TransactionOnNetwork = TransactionOnNetwork;","map":{"version":3,"mappings":"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","names":["TransactionOnNetwork","init","primitives_1","Buffer","from","transactionStatus_1","createUnknown","transactionReceipt_1","contractResults_1","transactionLogs_1","Object","assign","Date","timestamp","txHash","response","result","fromHttpResponse","contractResults","fromProxyHttpResponse","smartContractResults","isCompleted","transactionCompletionStrategy_1","fromApiHttpResponse","results","hash","type","nonce","round","epoch","value","toString","sender","receiver","gasPrice","gasLimit","data","status","blockNonce","hyperblockNonce","hyperblockHash","receipt","logs","exports"],"sourceRoot":"","sources":["../src/transactions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}