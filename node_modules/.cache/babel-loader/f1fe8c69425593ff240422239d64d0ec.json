{"ast":null,"code":"import { a as c } from \"./chunk-TRQ4ZVWL.js\";\nimport { a as f } from \"./chunk-26UWHUD7.js\";\nimport { b as u } from \"./chunk-2NWUS3DO.js\";\nimport { b as e } from \"./chunk-OI3KYR6B.js\";\nimport { m as p } from \"./chunk-HBP5N4FR.js\";\np();\nimport t, { useEffect as h } from \"react\";\nimport { faChevronLeft as g, faChevronRight as B, faCircleNotch as C } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon as v } from \"@fortawesome/react-fontawesome\";\nimport r from \"classnames\";\nvar P = \"Waiting for device\",\n  S = 10,\n  I = function I(_ref) {\n    var n = _ref.loading,\n      o = _ref.accounts,\n      d = _ref.startIndex,\n      a = _ref.selectedAddress,\n      A = _ref.onGoToPrevPage,\n      N = _ref.onGoToNextPage,\n      x = _ref.onConfirmSelectedAddress,\n      l = _ref.onSelectAddress,\n      _ref$className = _ref.className,\n      y = _ref$className === void 0 ? \"dapp-ledger-address-table\" : _ref$className;\n    var s = {\n      wrapper: r(e.card, e.px4, y),\n      cardBody: r(e.cardBody, e.p4),\n      tableWrapper: e.tableResponsive,\n      tableContent: r(u.ledgerAddressTable, e.table, e.m0, e.borderBottom),\n      tableHeader: r(e.py2, e.textBlack50, e.borderBottom),\n      tableHeaderText: r(e.textLeft, e.border0),\n      buttonsWrapper: r(e.dFlex, e.justifyContentCenter, e.mt2),\n      arrowButton: r(e.btn, e.btnLink, e.mx2),\n      confirmButton: r(e.btn, e.btnPrimary, e.px4, e.mt4)\n    };\n    return h(function () {\n      if (o.length > 0 && !n && !a && d === 0) {\n        var T = o[0];\n        l({\n          address: T,\n          index: 0\n        });\n      }\n    }, [o, a, n, d]), n ? t.createElement(c, {\n      icon: C,\n      iconClass: \"fa-spin \".concat(e.textPrimary),\n      title: P\n    }) : t.createElement(t.Fragment, null, t.createElement(\"div\", {\n      className: e.mAuto\n    }, t.createElement(\"div\", {\n      className: s.wrapper\n    }, t.createElement(\"div\", {\n      className: s.cardBody\n    }, t.createElement(\"div\", {\n      className: s.tableWrapper,\n      \"data-testid\": \"ledgerAddresses\"\n    }, t.createElement(\"table\", {\n      className: s.tableContent\n    }, t.createElement(\"thead\", {\n      className: s.tableHeader\n    }, t.createElement(\"tr\", null, t.createElement(\"th\", {\n      className: s.tableHeaderText\n    }, \"Address\"), t.createElement(\"th\", {\n      className: s.tableHeaderText\n    }, \"Balance\"), t.createElement(\"th\", {\n      className: s.tableHeaderText\n    }, \"#\"))), t.createElement(\"tbody\", {\n      \"data-testid\": \"addressesTable\"\n    }, o.map(function (m, b) {\n      var i = b + d * S;\n      return t.createElement(f, {\n        key: i,\n        address: m,\n        index: i,\n        selectedAddress: a,\n        onSelectAddress: l\n      });\n    })))), t.createElement(\"div\", {\n      className: s.buttonsWrapper\n    }, t.createElement(\"button\", {\n      type: \"button\",\n      className: s.arrowButton,\n      onClick: A,\n      \"data-testid\": \"prevBtn\",\n      disabled: d === 0\n    }, t.createElement(v, {\n      size: \"sm\",\n      icon: g\n    }), \" Prev\"), t.createElement(\"button\", {\n      type: \"button\",\n      className: r(s.arrowButton, e.linkSecondStyle),\n      onClick: N,\n      \"data-testid\": \"nextBtn\"\n    }, \"Next \", t.createElement(v, {\n      size: \"sm\",\n      icon: B\n    }))), t.createElement(\"div\", {\n      className: e.centering\n    }, t.createElement(\"button\", {\n      className: s.confirmButton,\n      disabled: a === \"\",\n      onClick: x,\n      \"data-testid\": \"confirmBtn\"\n    }, \"Confirm\"))))));\n  };\nexport { I as a };","map":null,"metadata":{},"sourceType":"module"}