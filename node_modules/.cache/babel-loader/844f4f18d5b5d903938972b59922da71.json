{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiNetworkProvider = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar accounts_1 = require(\"./accounts\");\nvar networkStake_1 = require(\"./networkStake\");\nvar networkGeneralStatistics_1 = require(\"./networkGeneralStatistics\");\nvar proxyNetworkProvider_1 = require(\"./proxyNetworkProvider\");\nvar tokenDefinitions_1 = require(\"./tokenDefinitions\");\nvar tokens_1 = require(\"./tokens\");\nvar transactions_1 = require(\"./transactions\");\nvar transactionStatus_1 = require(\"./transactionStatus\");\nvar primitives_1 = require(\"./primitives\");\nvar errors_1 = require(\"./errors\");\nvar config_1 = require(\"./config\");\nvar contractQueryResponse_1 = require(\"./contractQueryResponse\");\nvar contractQueryRequest_1 = require(\"./contractQueryRequest\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nvar ApiNetworkProvider = /*#__PURE__*/function () {\n  function ApiNetworkProvider(url, config) {\n    _classCallCheck(this, ApiNetworkProvider);\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, config_1.defaultAxiosConfig), config);\n    this.backingProxyNetworkProvider = new proxyNetworkProvider_1.ProxyNetworkProvider(url, config);\n  }\n  _createClass(ApiNetworkProvider, [{\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkConfig();\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.backingProxyNetworkProvider.getNetworkStatus();\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStakeStatistics\",\n    value: function getNetworkStakeStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response, networkStake;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doGetGeneric(\"stake\");\n              case 2:\n                response = _context3.sent;\n                networkStake = networkStake_1.NetworkStake.fromHttpResponse(response);\n                return _context3.abrupt(\"return\", networkStake);\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkGeneralStatistics\",\n    value: function getNetworkGeneralStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, stats;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doGetGeneric(\"stats\");\n              case 2:\n                response = _context4.sent;\n                stats = networkGeneralStatistics_1.NetworkGeneralStatistics.fromHttpResponse(response);\n                return _context4.abrupt(\"return\", stats);\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, account;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32()));\n              case 2:\n                response = _context5.sent;\n                account = accounts_1.AccountOnNetwork.fromHttpResponse(response);\n                return _context5.abrupt(\"return\", account);\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokensOfAccount\",\n    value: function getFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var url, response, tokens;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                pagination = pagination || config_1.defaultPagination;\n                url = \"accounts/\".concat(address.bech32(), \"/tokens?\").concat(this.buildPaginationParams(pagination));\n                _context6.next = 4;\n                return this.doGetGeneric(url);\n              case 4:\n                response = _context6.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item);\n                }); // TODO: Fix sorting\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context6.abrupt(\"return\", tokens);\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokensOfAccount\",\n    value: function getNonFungibleTokensOfAccount(address, pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var url, response, tokens;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                pagination = pagination || config_1.defaultPagination;\n                url = \"accounts/\".concat(address.bech32(), \"/nfts?\").concat(this.buildPaginationParams(pagination));\n                _context7.next = 4;\n                return this.doGetGeneric(url);\n              case 4:\n                response = _context7.sent;\n                tokens = response.map(function (item) {\n                  return tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(item);\n                }); // TODO: Fix sorting\n                tokens.sort(function (a, b) {\n                  return a.identifier.localeCompare(b.identifier);\n                });\n                return _context7.abrupt(\"return\", tokens);\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokenOfAccount\",\n    value: function getFungibleTokenOfAccount(address, tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/tokens/\").concat(tokenIdentifier));\n              case 2:\n                response = _context8.sent;\n                tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response);\n                return _context8.abrupt(\"return\", tokenData);\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokenOfAccount\",\n    value: function getNonFungibleTokenOfAccount(address, collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var nonceAsHex, response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                nonceAsHex = new primitives_1.Nonce(nonce).hex();\n                _context9.next = 3;\n                return this.doGetGeneric(\"accounts/\".concat(address.bech32(), \"/nfts/\").concat(collection, \"-\").concat(nonceAsHex));\n              case 3:\n                response = _context9.sent;\n                tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context9.abrupt(\"return\", tokenData);\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var response, transaction;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash));\n              case 2:\n                response = _context10.sent;\n                transaction = transactions_1.TransactionOnNetwork.fromApiHttpResponse(txHash, response);\n                return _context10.abrupt(\"return\", transaction);\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var response, status;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.doGetGeneric(\"transactions/\".concat(txHash, \"?fields=status\"));\n              case 2:\n                response = _context11.sent;\n                status = new transactionStatus_1.TransactionStatus(response.status);\n                return _context11.abrupt(\"return\", status);\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doPostGeneric(\"transactions\", tx.toSendable());\n              case 2:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response.txHash);\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.backingProxyNetworkProvider.simulateTransaction(tx);\n              case 2:\n                return _context13.abrupt(\"return\", _context13.sent);\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var request, response;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                request = new contractQueryRequest_1.ContractQueryRequest(query).toHttpRequest();\n                _context14.next = 4;\n                return this.doPostGeneric(\"query\", request);\n              case 4:\n                response = _context14.sent;\n                return _context14.abrupt(\"return\", contractQueryResponse_1.ContractQueryResponse.fromHttpResponse(response));\n              case 8:\n                _context14.prev = 8;\n                _context14.t0 = _context14[\"catch\"](0);\n                throw new errors_1.ErrContractQuery(_context14.t0);\n              case 11:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[0, 8]]);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfFungibleToken\",\n    value: function getDefinitionOfFungibleToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var response, definition;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.doGetGeneric(\"tokens/\".concat(tokenIdentifier));\n              case 2:\n                response = _context15.sent;\n                definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromApiHttpResponse(response);\n                return _context15.abrupt(\"return\", definition);\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfTokenCollection\",\n    value: function getDefinitionOfTokenCollection(collection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var response, definition;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.doGetGeneric(\"collections/\".concat(collection));\n              case 2:\n                response = _context16.sent;\n                definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromApiHttpResponse(response);\n                return _context16.abrupt(\"return\", definition);\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleToken\",\n    value: function getNonFungibleToken(collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        var nonceAsHex, response, token;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                nonceAsHex = new primitives_1.Nonce(nonce).hex();\n                _context17.next = 3;\n                return this.doGetGeneric(\"nfts/\".concat(collection, \"-\").concat(nonceAsHex));\n              case 3:\n                response = _context17.sent;\n                token = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n                return _context17.abrupt(\"return\", token);\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.doGet(resourceUrl);\n              case 2:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.doPost(resourceUrl, payload);\n              case 2:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n    }\n  }, {\n    key: \"buildPaginationParams\",\n    value: function buildPaginationParams(pagination) {\n      return \"from=\".concat(pagination.from, \"&size=\").concat(pagination.size);\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var url, response;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context20.prev = 1;\n                _context20.next = 4;\n                return axios_1.default.get(url, this.config);\n              case 4:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response.data);\n              case 8:\n                _context20.prev = 8;\n                _context20.t0 = _context20[\"catch\"](1);\n                this.handleApiError(_context20.t0, resourceUrl);\n              case 11:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[1, 8]]);\n      }));\n    }\n  }, {\n    key: \"doPost\",\n    value: function doPost(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var url, response, responsePayload;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n                _context21.prev = 1;\n                _context21.next = 4;\n                return axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }));\n              case 4:\n                response = _context21.sent;\n                responsePayload = response.data;\n                return _context21.abrupt(\"return\", responsePayload);\n              case 9:\n                _context21.prev = 9;\n                _context21.t0 = _context21[\"catch\"](1);\n                this.handleApiError(_context21.t0, resourceUrl);\n              case 12:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[1, 9]]);\n      }));\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n      }\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n  return ApiNetworkProvider;\n}();\nexports.ApiNetworkProvider = ApiNetworkProvider;","map":{"version":3,"sources":["../src/apiNetworkProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiNetworkProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst accounts_1 = require(\"./accounts\");\nconst networkStake_1 = require(\"./networkStake\");\nconst networkGeneralStatistics_1 = require(\"./networkGeneralStatistics\");\nconst proxyNetworkProvider_1 = require(\"./proxyNetworkProvider\");\nconst tokenDefinitions_1 = require(\"./tokenDefinitions\");\nconst tokens_1 = require(\"./tokens\");\nconst transactions_1 = require(\"./transactions\");\nconst transactionStatus_1 = require(\"./transactionStatus\");\nconst primitives_1 = require(\"./primitives\");\nconst errors_1 = require(\"./errors\");\nconst config_1 = require(\"./config\");\nconst contractQueryResponse_1 = require(\"./contractQueryResponse\");\nconst contractQueryRequest_1 = require(\"./contractQueryRequest\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nclass ApiNetworkProvider {\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, config_1.defaultAxiosConfig), config);\n        this.backingProxyNetworkProvider = new proxyNetworkProvider_1.ProxyNetworkProvider(url, config);\n    }\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.getNetworkConfig();\n        });\n    }\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.getNetworkStatus();\n        });\n    }\n    getNetworkStakeStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"stake\");\n            let networkStake = networkStake_1.NetworkStake.fromHttpResponse(response);\n            return networkStake;\n        });\n    }\n    getNetworkGeneralStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"stats\");\n            let stats = networkGeneralStatistics_1.NetworkGeneralStatistics.fromHttpResponse(response);\n            return stats;\n        });\n    }\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}`);\n            let account = accounts_1.AccountOnNetwork.fromHttpResponse(response);\n            return account;\n        });\n    }\n    getFungibleTokensOfAccount(address, pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            pagination = pagination || config_1.defaultPagination;\n            let url = `accounts/${address.bech32()}/tokens?${this.buildPaginationParams(pagination)}`;\n            let response = yield this.doGetGeneric(url);\n            let tokens = response.map(item => tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getNonFungibleTokensOfAccount(address, pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            pagination = pagination || config_1.defaultPagination;\n            let url = `accounts/${address.bech32()}/nfts?${this.buildPaginationParams(pagination)}`;\n            let response = yield this.doGetGeneric(url);\n            let tokens = response.map(item => tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getFungibleTokenOfAccount(address, tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}/tokens/${tokenIdentifier}`);\n            let tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response);\n            return tokenData;\n        });\n    }\n    getNonFungibleTokenOfAccount(address, collection, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let nonceAsHex = new primitives_1.Nonce(nonce).hex();\n            let response = yield this.doGetGeneric(`accounts/${address.bech32()}/nfts/${collection}-${nonceAsHex}`);\n            let tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n            return tokenData;\n        });\n    }\n    getTransaction(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`transactions/${txHash}`);\n            let transaction = transactions_1.TransactionOnNetwork.fromApiHttpResponse(txHash, response);\n            return transaction;\n        });\n    }\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`transactions/${txHash}?fields=status`);\n            let status = new transactionStatus_1.TransactionStatus(response.status);\n            return status;\n        });\n    }\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPostGeneric(\"transactions\", tx.toSendable());\n            return response.txHash;\n        });\n    }\n    simulateTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.backingProxyNetworkProvider.simulateTransaction(tx);\n        });\n    }\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let request = new contractQueryRequest_1.ContractQueryRequest(query).toHttpRequest();\n                let response = yield this.doPostGeneric(\"query\", request);\n                return contractQueryResponse_1.ContractQueryResponse.fromHttpResponse(response);\n            }\n            catch (error) {\n                throw new errors_1.ErrContractQuery(error);\n            }\n        });\n    }\n    getDefinitionOfFungibleToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`tokens/${tokenIdentifier}`);\n            let definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromApiHttpResponse(response);\n            return definition;\n        });\n    }\n    getDefinitionOfTokenCollection(collection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`collections/${collection}`);\n            let definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromApiHttpResponse(response);\n            return definition;\n        });\n    }\n    getNonFungibleToken(collection, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let nonceAsHex = new primitives_1.Nonce(nonce).hex();\n            let response = yield this.doGetGeneric(`nfts/${collection}-${nonceAsHex}`);\n            let token = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromApiHttpResponse(response);\n            return token;\n        });\n    }\n    doGetGeneric(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return response;\n        });\n    }\n    doPostGeneric(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPost(resourceUrl, payload);\n            return response;\n        });\n    }\n    buildPaginationParams(pagination) {\n        return `from=${pagination.from}&size=${pagination.size}`;\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.url}/${resourceUrl}`;\n            try {\n                let response = yield axios_1.default.get(url, this.config);\n                return response.data;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    doPost(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.url}/${resourceUrl}`;\n            try {\n                let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), { headers: {\n                        \"Content-Type\": \"application/json\",\n                    } }));\n                let responsePayload = response.data;\n                return responsePayload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ApiNetworkProvider = ApiNetworkProvider;\n//# sourceMappingURL=apiNetworkProvider.js.map"]},"metadata":{},"sourceType":"script"}