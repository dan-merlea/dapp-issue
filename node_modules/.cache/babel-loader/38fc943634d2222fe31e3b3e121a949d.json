{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StructBinaryCodec = void 0;\nvar typesystem_1 = require(\"../typesystem\");\nvar fields_1 = require(\"./fields\");\nvar StructBinaryCodec = /*#__PURE__*/function () {\n  function StructBinaryCodec(binaryCodec) {\n    _classCallCheck(this, StructBinaryCodec);\n    this.fieldsCodec = new fields_1.FieldsBinaryCodec(binaryCodec);\n  }\n  _createClass(StructBinaryCodec, [{\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer, type) {\n      var _this$decodeNested = this.decodeNested(buffer, type),\n        _this$decodeNested2 = _slicedToArray(_this$decodeNested, 1),\n        decoded = _this$decodeNested2[0];\n      return decoded;\n    }\n  }, {\n    key: \"decodeNested\",\n    value: function decodeNested(buffer, type) {\n      var fieldDefinitions = type.getFieldsDefinitions();\n      var _this$fieldsCodec$dec = this.fieldsCodec.decodeNested(buffer, fieldDefinitions),\n        _this$fieldsCodec$dec2 = _slicedToArray(_this$fieldsCodec$dec, 2),\n        fields = _this$fieldsCodec$dec2[0],\n        offset = _this$fieldsCodec$dec2[1];\n      var struct = new typesystem_1.Struct(type, fields);\n      return [struct, offset];\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(struct) {\n      var fields = struct.getFields();\n      var buffer = this.fieldsCodec.encodeNested(fields);\n      return buffer;\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(struct) {\n      return this.encodeNested(struct);\n    }\n  }]);\n  return StructBinaryCodec;\n}();\nexports.StructBinaryCodec = StructBinaryCodec;","map":null,"metadata":{},"sourceType":"script"}