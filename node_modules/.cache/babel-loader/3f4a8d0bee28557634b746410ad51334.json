{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionLogs = void 0;\nvar errors_1 = require(\"./errors\");\nvar primitives_1 = require(\"./primitives\");\nvar transactionEvents_1 = require(\"./transactionEvents\");\nvar TransactionLogs = /*#__PURE__*/function () {\n  function TransactionLogs(init) {\n    _classCallCheck(this, TransactionLogs);\n    this.address = new primitives_1.Address(\"\");\n    this.events = [];\n    Object.assign(this, init);\n  }\n  _createClass(TransactionLogs, [{\n    key: \"findSingleOrNoneEvent\",\n    value: function findSingleOrNoneEvent(identifier, predicate) {\n      var events = this.findEvents(identifier, predicate);\n      if (events.length > 1) {\n        throw new errors_1.ErrUnexpectedCondition(\"more than one event of type \".concat(identifier));\n      }\n      return events[0];\n    }\n  }, {\n    key: \"findFirstOrNoneEvent\",\n    value: function findFirstOrNoneEvent(identifier, predicate) {\n      return this.findEvents(identifier, predicate)[0];\n    }\n  }, {\n    key: \"findEvents\",\n    value: function findEvents(identifier, predicate) {\n      var events = this.events.filter(function (event) {\n        return event.identifier == identifier;\n      });\n      if (predicate) {\n        events = events.filter(function (event) {\n          return predicate(event);\n        });\n      }\n      return events;\n    }\n  }], [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(logs) {\n      var result = new TransactionLogs();\n      result.address = new primitives_1.Address(logs.address);\n      result.events = (logs.events || []).map(function (event) {\n        return transactionEvents_1.TransactionEvent.fromHttpResponse(event);\n      });\n      return result;\n    }\n  }]);\n  return TransactionLogs;\n}();\nexports.TransactionLogs = TransactionLogs;","map":{"version":3,"mappings":";;;;;;;;AAAA;AAEA;AACA;AAAuD,IAE1CA,eAAe;EAIxB,yBAAYC,IAA+B;IAAA;IAH3C,YAAO,GAAa,IAAIC,oBAAO,CAAC,EAAE,CAAC;IACnC,WAAM,GAAuB,EAAE;IAG3BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,IAAI,CAAC;EAC7B;EAAC;IAAA;IAAA,OAUD,+BAAsBI,UAAkB,EAAEC,SAAgD;MACtF,IAAIC,MAAM,GAAG,IAAI,CAACC,UAAU,CAACH,UAAU,EAAEC,SAAS,CAAC;MAEnD,IAAIC,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,IAAIC,+BAAsB,uCAAgCL,UAAU,EAAG;;MAGjF,OAAOE,MAAM,CAAC,CAAC,CAAC;IACpB;EAAC;IAAA;IAAA,OAED,8BAAqBF,UAAkB,EAAEC,SAAgD;MACrF,OAAO,IAAI,CAACE,UAAU,CAACH,UAAU,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;IACpD;EAAC;IAAA;IAAA,OAED,oBAAWD,UAAkB,EAAEC,SAAgD;MAC3E,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACI,MAAM,CAAC,eAAK;QAAA,OAAIC,KAAK,CAACP,UAAU,IAAIA,UAAU;MAAA,EAAC;MAExE,IAAIC,SAAS,EAAE;QACXC,MAAM,GAAGA,MAAM,CAACI,MAAM,CAAC,eAAK;UAAA,OAAIL,SAAS,CAACM,KAAK,CAAC;QAAA,EAAC;;MAGrD,OAAOL,MAAM;IACjB;EAAC;IAAA;IAAA,OA9BD,0BAAwBM,IAAS;MAC7B,IAAIC,MAAM,GAAG,IAAId,eAAe,EAAE;MAClCc,MAAM,CAACC,OAAO,GAAG,IAAIb,oBAAO,CAACW,IAAI,CAACE,OAAO,CAAC;MAC1CD,MAAM,CAACP,MAAM,GAAG,CAACM,IAAI,CAACN,MAAM,IAAI,EAAE,EAAES,GAAG,CAAC,UAACJ,KAAU;QAAA,OAAKK,oCAAgB,CAACC,gBAAgB,CAACN,KAAK,CAAC;MAAA,EAAC;MAEjG,OAAOE,MAAM;IACjB;EAAC;EAAA;AAAA;AAdLK","names":["TransactionLogs","init","primitives_1","Object","assign","identifier","predicate","events","findEvents","length","errors_1","filter","event","logs","result","address","map","transactionEvents_1","fromHttpResponse","exports"],"sourceRoot":"","sources":["../src/transactionLogs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}