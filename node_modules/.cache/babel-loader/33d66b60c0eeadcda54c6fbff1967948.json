{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserRandomSource = void 0;\nvar QUOTA = 65536;\nvar BrowserRandomSource = /*#__PURE__*/function () {\n  function BrowserRandomSource() {\n    _classCallCheck(this, BrowserRandomSource);\n    this.isAvailable = false;\n    this.isInstantiated = false;\n    var browserCrypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto // IE11 has msCrypto\n    : null;\n    if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n      this._crypto = browserCrypto;\n      this.isAvailable = true;\n      this.isInstantiated = true;\n    }\n  }\n  _createClass(BrowserRandomSource, [{\n    key: \"randomBytes\",\n    value: function randomBytes(length) {\n      if (!this.isAvailable || !this._crypto) {\n        throw new Error(\"Browser random byte generator is not available.\");\n      }\n      var out = new Uint8Array(length);\n      for (var i = 0; i < out.length; i += QUOTA) {\n        this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n      }\n      return out;\n    }\n  }]);\n  return BrowserRandomSource;\n}();\nexports.BrowserRandomSource = BrowserRandomSource;","map":null,"metadata":{},"sourceType":"script"}