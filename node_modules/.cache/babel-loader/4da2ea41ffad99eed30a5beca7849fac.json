{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onPrimitiveTypeSelect = exports.onPrimitiveValueSelect = exports.onTypedValueSelect = exports.onTypeSelect = void 0;\nvar errors = __importStar(require(\"../../errors\"));\nvar address_1 = require(\"./address\");\nvar boolean_1 = require(\"./boolean\");\nvar bytes_1 = require(\"./bytes\");\nvar enum_1 = require(\"./enum\");\nvar generic_1 = require(\"./generic\");\nvar h256_1 = require(\"./h256\");\nvar numerical_1 = require(\"./numerical\");\nvar nothing_1 = require(\"./nothing\");\nvar struct_1 = require(\"./struct\");\nvar tokenIdentifier_1 = require(\"./tokenIdentifier\");\nvar tuple_1 = require(\"./tuple\");\nvar types_1 = require(\"./types\");\nvar genericArray_1 = require(\"./genericArray\");\nvar string_1 = require(\"./string\");\n// TODO: Extend functionality or rename wrt. restricted / reduced functionality (not all types are handled: composite, variadic).\nfunction onTypeSelect(type, selectors) {\n  if (type.hasExactClass(generic_1.OptionType.ClassName)) {\n    return selectors.onOption();\n  }\n  if (type.hasExactClass(generic_1.ListType.ClassName)) {\n    return selectors.onList();\n  }\n  if (type.hasExactClass(genericArray_1.ArrayVecType.ClassName)) {\n    return selectors.onArray();\n  }\n  if (type.hasClassOrSuperclass(types_1.PrimitiveType.ClassName)) {\n    return selectors.onPrimitive();\n  }\n  if (type.hasExactClass(struct_1.StructType.ClassName)) {\n    return selectors.onStruct();\n  }\n  if (type.hasExactClass(tuple_1.TupleType.ClassName)) {\n    return selectors.onTuple();\n  }\n  if (type.hasExactClass(enum_1.EnumType.ClassName)) {\n    return selectors.onEnum();\n  }\n  if (selectors.onOther) {\n    return selectors.onOther();\n  }\n  throw new errors.ErrTypingSystem(\"type isn't known: \".concat(type));\n}\nexports.onTypeSelect = onTypeSelect;\nfunction onTypedValueSelect(value, selectors) {\n  if (value.hasClassOrSuperclass(types_1.PrimitiveValue.ClassName)) {\n    return selectors.onPrimitive();\n  }\n  if (value.hasExactClass(generic_1.OptionValue.ClassName)) {\n    return selectors.onOption();\n  }\n  if (value.hasExactClass(generic_1.List.ClassName)) {\n    return selectors.onList();\n  }\n  if (value.hasExactClass(genericArray_1.ArrayVec.ClassName)) {\n    return selectors.onArray();\n  }\n  if (value.hasExactClass(struct_1.Struct.ClassName)) {\n    return selectors.onStruct();\n  }\n  if (value.hasExactClass(tuple_1.Tuple.ClassName)) {\n    return selectors.onTuple();\n  }\n  if (value.hasExactClass(enum_1.EnumValue.ClassName)) {\n    return selectors.onEnum();\n  }\n  if (selectors.onOther) {\n    return selectors.onOther();\n  }\n  throw new errors.ErrTypingSystem(\"value isn't typed: \".concat(value));\n}\nexports.onTypedValueSelect = onTypedValueSelect;\nfunction onPrimitiveValueSelect(value, selectors) {\n  if (value.hasExactClass(boolean_1.BooleanValue.ClassName)) {\n    return selectors.onBoolean();\n  }\n  if (value.hasClassOrSuperclass(numerical_1.NumericalValue.ClassName)) {\n    return selectors.onNumerical();\n  }\n  if (value.hasExactClass(address_1.AddressValue.ClassName)) {\n    return selectors.onAddress();\n  }\n  if (value.hasExactClass(bytes_1.BytesValue.ClassName)) {\n    return selectors.onBytes();\n  }\n  if (value.hasExactClass(string_1.StringValue.ClassName)) {\n    return selectors.onString();\n  }\n  if (value.hasExactClass(h256_1.H256Value.ClassName)) {\n    return selectors.onH256();\n  }\n  if (value.hasExactClass(tokenIdentifier_1.TokenIdentifierValue.ClassName)) {\n    return selectors.onTypeIdentifier();\n  }\n  if (value.hasExactClass(nothing_1.NothingValue.ClassName)) {\n    return selectors.onNothing();\n  }\n  if (selectors.onOther) {\n    return selectors.onOther();\n  }\n  throw new errors.ErrTypingSystem(\"value isn't a primitive: \".concat(value.getType()));\n}\nexports.onPrimitiveValueSelect = onPrimitiveValueSelect;\nfunction onPrimitiveTypeSelect(type, selectors) {\n  if (type.hasExactClass(boolean_1.BooleanType.ClassName)) {\n    return selectors.onBoolean();\n  }\n  if (type.hasClassOrSuperclass(numerical_1.NumericalType.ClassName)) {\n    return selectors.onNumerical();\n  }\n  if (type.hasExactClass(address_1.AddressType.ClassName)) {\n    return selectors.onAddress();\n  }\n  if (type.hasExactClass(bytes_1.BytesType.ClassName)) {\n    return selectors.onBytes();\n  }\n  if (type.hasExactClass(string_1.StringType.ClassName)) {\n    return selectors.onString();\n  }\n  if (type.hasExactClass(h256_1.H256Type.ClassName)) {\n    return selectors.onH256();\n  }\n  if (type.hasExactClass(tokenIdentifier_1.TokenIdentifierType.ClassName)) {\n    return selectors.onTokenIndetifier();\n  }\n  if (type.hasExactClass(nothing_1.NothingType.ClassName)) {\n    return selectors.onNothing();\n  }\n  if (selectors.onOther) {\n    return selectors.onOther();\n  }\n  throw new errors.ErrTypingSystem(\"type isn't a known primitive: \".concat(type));\n}\nexports.onPrimitiveTypeSelect = onPrimitiveTypeSelect;","map":{"version":3,"mappings":"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","names":["onTypeSelect","type","selectors","hasExactClass","generic_1","ClassName","onOption","onList","genericArray_1","onArray","hasClassOrSuperclass","types_1","onPrimitive","struct_1","onStruct","tuple_1","onTuple","enum_1","onEnum","onOther","errors","ErrTypingSystem","exports","onTypedValueSelect","value","onPrimitiveValueSelect","boolean_1","onBoolean","numerical_1","onNumerical","address_1","onAddress","bytes_1","onBytes","string_1","onString","h256_1","onH256","tokenIdentifier_1","onTypeIdentifier","nothing_1","onNothing","getType","onPrimitiveTypeSelect","onTokenIndetifier"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/matchers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}