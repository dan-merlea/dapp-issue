{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeRandomSource = void 0;\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar NodeRandomSource = /*#__PURE__*/function () {\n  function NodeRandomSource() {\n    _classCallCheck(this, NodeRandomSource);\n    this.isAvailable = false;\n    this.isInstantiated = false;\n    if (typeof require !== \"undefined\") {\n      var nodeCrypto = require(\"crypto\");\n      if (nodeCrypto && nodeCrypto.randomBytes) {\n        this._crypto = nodeCrypto;\n        this.isAvailable = true;\n        this.isInstantiated = true;\n      }\n    }\n  }\n  _createClass(NodeRandomSource, [{\n    key: \"randomBytes\",\n    value: function randomBytes(length) {\n      if (!this.isAvailable || !this._crypto) {\n        throw new Error(\"Node.js random byte generator is not available.\");\n      }\n      // Get random bytes (result is Buffer).\n      var buffer = this._crypto.randomBytes(length);\n      // Make sure we got the length that we requested.\n      if (buffer.length !== length) {\n        throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n      }\n      // Allocate output array.\n      var out = new Uint8Array(length);\n      // Copy bytes from buffer to output.\n      for (var i = 0; i < out.length; i++) {\n        out[i] = buffer[i];\n      }\n      // Cleanup.\n      (0, wipe_1.wipe)(buffer);\n      return out;\n    }\n  }]);\n  return NodeRandomSource;\n}();\nexports.NodeRandomSource = NodeRandomSource;","map":null,"metadata":{},"sourceType":"script"}