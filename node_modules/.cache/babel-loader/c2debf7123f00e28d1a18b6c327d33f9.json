{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletProvider = void 0;\nvar qs_1 = __importDefault(require(\"qs\"));\nvar constants_1 = require(\"./constants\");\nvar errors_1 = require(\"./errors\");\nvar plainSignedTransaction_1 = require(\"./plainSignedTransaction\");\nvar WalletProvider = /*#__PURE__*/function () {\n  /**\n   * Creates a new WalletProvider\n   * @param walletURL\n   */\n  function WalletProvider(walletURL) {\n    _classCallCheck(this, WalletProvider);\n    this.walletUrl = walletURL;\n  }\n  /**\n   * Fetches the login hook url and redirects the client to the wallet login.\n   */\n  _createClass(WalletProvider, [{\n    key: \"login\",\n    value: function login(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var redirectUrl;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                redirectUrl = this.buildWalletUrl({\n                  endpoint: constants_1.WALLET_PROVIDER_CONNECT_URL,\n                  callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl,\n                  params: {\n                    token: options === null || options === void 0 ? void 0 : options.token\n                  }\n                });\n                _context.next = 3;\n                return this.redirect(redirectUrl, options === null || options === void 0 ? void 0 : options.redirectDelayMilliseconds);\n              case 3:\n                return _context.abrupt(\"return\", redirectUrl);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(url, delayMilliseconds) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!delayMilliseconds) {\n                  _context2.next = 5;\n                  break;\n                }\n                _context2.next = 3;\n                return this.redirectLater(url, delayMilliseconds);\n              case 3:\n                _context2.next = 6;\n                break;\n              case 5:\n                this.redirectImmediately(url);\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"redirectImmediately\",\n    value: function redirectImmediately(url) {\n      window.location.href = url;\n    }\n  }, {\n    key: \"redirectLater\",\n    value: function redirectLater(url, delayMilliseconds) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return new Promise(function (resolve) {\n                  setTimeout(function () {\n                    window.location.href = url;\n                    resolve(true);\n                  }, delayMilliseconds);\n                });\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n    /**\n    * Fetches the logout hook url and redirects the client to the wallet logout.\n    */\n  }, {\n    key: \"logout\",\n    value: function logout(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var redirectUrl;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                redirectUrl = this.buildWalletUrl({\n                  endpoint: constants_1.WALLET_PROVIDER_DISCONNECT_URL,\n                  callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl\n                });\n                _context4.next = 3;\n                return this.redirect(redirectUrl, options === null || options === void 0 ? void 0 : options.redirectDelayMilliseconds);\n              case 3:\n                return _context4.abrupt(\"return\", true);\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n    /**\n     * Packs an array of {$link Transaction} and redirects to the correct transaction sigining hook\n     *\n     * @param transactions\n     * @param options\n     */\n  }, {\n    key: \"signTransactions\",\n    value: function signTransactions(transactions, options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var jsonToSend, redirectUrl;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                jsonToSend = {};\n                transactions.map(function (tx) {\n                  var plainTx = WalletProvider.prepareWalletTransaction(tx);\n                  for (var txProp in plainTx) {\n                    if (plainTx.hasOwnProperty(txProp) && !jsonToSend.hasOwnProperty(txProp)) {\n                      jsonToSend[txProp] = [];\n                    }\n                    jsonToSend[txProp].push(plainTx[txProp]);\n                  }\n                });\n                redirectUrl = this.buildWalletUrl({\n                  endpoint: constants_1.WALLET_PROVIDER_SIGN_TRANSACTION_URL,\n                  callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl,\n                  params: jsonToSend\n                });\n                window.location.href = redirectUrl;\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n    /**\n     * Packs a {@link Transaction} and fetches correct redirect URL from the wallet API. Then redirects\n     *   the client to the sign transaction hook\n     * @param transaction\n     * @param options\n     */\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.signTransactions([transaction], options);\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionsFromWalletUrl\",\n    value: function getTransactionsFromWalletUrl() {\n      var urlParams = qs_1.default.parse(window.location.search.slice(1));\n      if (!WalletProvider.isTxSignReturnSuccess(urlParams)) {\n        return [];\n      }\n      return this.getTxSignReturnValue(urlParams);\n    }\n  }, {\n    key: \"getTxSignReturnValue\",\n    value: function getTxSignReturnValue(urlParams) {\n      // \"options\" property is optional (it isn't always received from the Web Wallet)\n      var expectedProps = [\"nonce\", \"value\", \"receiver\", \"sender\", \"gasPrice\", \"gasLimit\", \"data\", \"chainID\", \"version\", \"signature\"];\n      for (var _i = 0, _expectedProps = expectedProps; _i < _expectedProps.length; _i++) {\n        var txProp = _expectedProps[_i];\n        if (!urlParams[txProp] || !Array.isArray(urlParams[txProp])) {\n          throw new errors_1.ErrInvalidTxSignReturnValue();\n        }\n      }\n      var expectedLength = urlParams[\"nonce\"].length;\n      for (var _i2 = 0, _expectedProps2 = expectedProps; _i2 < _expectedProps2.length; _i2++) {\n        var _txProp = _expectedProps2[_i2];\n        if (urlParams[_txProp].length !== expectedLength) {\n          throw new errors_1.ErrInvalidTxSignReturnValue();\n        }\n      }\n      var transactions = [];\n      for (var i = 0; i < expectedLength; i++) {\n        var plainSignedTransaction = new plainSignedTransaction_1.PlainSignedTransaction(Object.assign(Object.assign({\n          nonce: parseInt(urlParams[\"nonce\"][i]),\n          value: urlParams[\"value\"][i],\n          receiver: urlParams[\"receiver\"][i],\n          sender: urlParams[\"sender\"][i],\n          gasPrice: parseInt(urlParams[\"gasPrice\"][i]),\n          gasLimit: parseInt(urlParams[\"gasLimit\"][i]),\n          data: urlParams[\"data\"][i],\n          chainID: urlParams[\"chainID\"][i],\n          version: parseInt(urlParams[\"version\"][i])\n        }, urlParams[\"options\"] && urlParams[\"options\"][i] ? {\n          options: parseInt(urlParams[\"options\"][i])\n        } : {}), {\n          signature: urlParams[\"signature\"][i]\n        }));\n        transactions.push(plainSignedTransaction);\n      }\n      return transactions;\n    }\n  }, {\n    key: \"buildWalletUrl\",\n    value: function buildWalletUrl(options) {\n      var callbackUrl = (options === null || options === void 0 ? void 0 : options.callbackUrl) || window.location.href;\n      var partialQueryString = qs_1.default.stringify(options.params || {});\n      var fullQueryString = partialQueryString ? \"\".concat(partialQueryString, \"&callbackUrl=\").concat(callbackUrl) : \"callbackUrl=\".concat(callbackUrl);\n      var url = \"\".concat(this.baseWalletUrl(), \"/\").concat(options.endpoint, \"?\").concat(fullQueryString);\n      return url;\n    }\n  }, {\n    key: \"baseWalletUrl\",\n    value: function baseWalletUrl() {\n      var pathArray = this.walletUrl.split('/');\n      var protocol = pathArray[0];\n      var host = pathArray[2];\n      return protocol + '//' + host;\n    }\n  }], [{\n    key: \"isTxSignReturnSuccess\",\n    value: function isTxSignReturnSuccess(urlParams) {\n      return urlParams.hasOwnProperty(constants_1.WALLET_PROVIDER_CALLBACK_PARAM) && urlParams[constants_1.WALLET_PROVIDER_CALLBACK_PARAM] === constants_1.WALLET_PROVIDER_CALLBACK_PARAM_TX_SIGNED;\n    }\n  }, {\n    key: \"prepareWalletTransaction\",\n    value: function prepareWalletTransaction(transaction) {\n      var plainTransaction = transaction.toPlainObject();\n      // We adjust the data field, in order to make it compatible with what the web wallet expects.\n      if (plainTransaction.data) {\n        plainTransaction.data = Buffer.from(plainTransaction.data, \"base64\").toString();\n      }\n      return plainTransaction;\n    }\n  }]);\n  return WalletProvider;\n}();\nexports.WalletProvider = WalletProvider;","map":{"version":3,"mappings":"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","names":["WalletProvider","walletURL","walletUrl","options","redirectUrl","buildWalletUrl","endpoint","constants_1","callbackUrl","params","token","redirect","redirectDelayMilliseconds","url","delayMilliseconds","redirectLater","redirectImmediately","window","location","href","Promise","resolve","setTimeout","transactions","jsonToSend","map","plainTx","prepareWalletTransaction","tx","txProp","hasOwnProperty","push","transaction","signTransactions","urlParams","qs_1","parse","search","slice","isTxSignReturnSuccess","getTxSignReturnValue","expectedProps","Array","isArray","errors_1","expectedLength","length","i","plainSignedTransaction","plainSignedTransaction_1","nonce","parseInt","value","receiver","sender","gasPrice","gasLimit","data","chainID","version","signature","partialQueryString","stringify","fullQueryString","baseWalletUrl","pathArray","split","protocol","host","plainTransaction","toPlainObject","Buffer","from","toString","exports"],"sourceRoot":"","sources":["../src/walletProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}