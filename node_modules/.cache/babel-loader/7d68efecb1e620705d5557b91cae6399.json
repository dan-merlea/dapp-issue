{"ast":null,"code":"import _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { a as c } from \"./chunk-6CIM3M2N.js\";\nimport { a as m } from \"./chunk-6OZDAYJV.js\";\nimport { h as o, m as a } from \"./chunk-FC3CZOOQ.js\";\nimport { m as i } from \"./chunk-HBP5N4FR.js\";\ni();\nimport A from \"axios\";\nimport D from \"swr\";\nvar O = function O(s) {\n  return A.get(s).then(function (n) {\n    return n.data;\n  });\n};\nfunction P(_ref) {\n  var s = _ref.tokenId;\n  var e;\n  var _c = c(),\n    n = _c.network,\n    _m = m(s),\n    g = _m.isEsdt,\n    f = _m.isNft,\n    p = g ? o : a,\n    r = s;\n  if (f) {\n    var _s$split = s.split(\"-\"),\n      _s$split2 = _slicedToArray(_s$split, 2),\n      T = _s$split2[0],\n      b = _s$split2[1];\n    r = \"\".concat(T, \"-\").concat(b);\n  }\n  var _D = D(Boolean(r) ? \"\".concat(n.apiAddress, \"/\").concat(p, \"/\").concat(r) : null, O),\n    t = _D.data,\n    k = _D.error;\n  if (!r) return {\n    tokenDecimals: Number(n.decimals),\n    tokenLabel: \"\",\n    tokenAvatar: \"\"\n  };\n  var l = t ? t == null ? void 0 : t.decimals : Number(n.decimals),\n    u = t ? t == null ? void 0 : t.name : \"\",\n    N = t ? \"\".concat((e = t == null ? void 0 : t.assets) == null ? void 0 : e.svgUrl) : \"\",\n    d = t == null ? void 0 : t.assets;\n  return {\n    tokenDecimals: l,\n    tokenLabel: u,\n    tokenAvatar: N,\n    assets: d,\n    error: k\n  };\n}\nexport { P as a };","map":null,"metadata":{},"sourceType":"module"}