{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.zeroPadStringIfOddLength = exports.isPaddedHex = exports.numberToPaddedHex = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nfunction numberToPaddedHex(value) {\n  var hex = new bignumber_js_1.default(value).toString(16);\n  return zeroPadStringIfOddLength(hex);\n}\nexports.numberToPaddedHex = numberToPaddedHex;\nfunction isPaddedHex(input) {\n  input = input || \"\";\n  var decodedThenEncoded = Buffer.from(input, \"hex\").toString(\"hex\");\n  return input.toUpperCase() == decodedThenEncoded.toUpperCase();\n}\nexports.isPaddedHex = isPaddedHex;\nfunction zeroPadStringIfOddLength(input) {\n  input = input || \"\";\n  if (input.length % 2 == 1) {\n    return \"0\" + input;\n  }\n  return input;\n}\nexports.zeroPadStringIfOddLength = zeroPadStringIfOddLength;","map":{"version":3,"sources":["../src/utils.codec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;AAEA,SAAgB,iBAAiB,CAAC,KAAsB,EAAA;EACpD,IAAI,GAAG,GAAG,IAAI,cAAA,CAAA,OAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;EAC3C,OAAO,wBAAwB,CAAC,GAAG,CAAC;AACxC;AAHA,OAAA,CAAA,iBAAA,GAAA,iBAAA;AAKA,SAAgB,WAAW,CAAC,KAAa,EAAA;EACrC,KAAK,GAAG,KAAK,IAAI,EAAE;EACnB,IAAI,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;EAClE,OAAO,KAAK,CAAC,WAAW,EAAE,IAAI,kBAAkB,CAAC,WAAW,EAAE;AAClE;AAJA,OAAA,CAAA,WAAA,GAAA,WAAA;AAMA,SAAgB,wBAAwB,CAAC,KAAa,EAAA;EAClD,KAAK,GAAG,KAAK,IAAI,EAAE;EAEnB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;IACvB,OAAO,GAAG,GAAG,KAAK;EACrB;EAED,OAAO,KAAK;AAChB;AARA,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroPadStringIfOddLength = exports.isPaddedHex = exports.numberToPaddedHex = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nfunction numberToPaddedHex(value) {\n    let hex = new bignumber_js_1.default(value).toString(16);\n    return zeroPadStringIfOddLength(hex);\n}\nexports.numberToPaddedHex = numberToPaddedHex;\nfunction isPaddedHex(input) {\n    input = input || \"\";\n    let decodedThenEncoded = Buffer.from(input, \"hex\").toString(\"hex\");\n    return input.toUpperCase() == decodedThenEncoded.toUpperCase();\n}\nexports.isPaddedHex = isPaddedHex;\nfunction zeroPadStringIfOddLength(input) {\n    input = input || \"\";\n    if (input.length % 2 == 1) {\n        return \"0\" + input;\n    }\n    return input;\n}\nexports.zeroPadStringIfOddLength = zeroPadStringIfOddLength;\n//# sourceMappingURL=utils.codec.js.map"]},"metadata":{},"sourceType":"script"}