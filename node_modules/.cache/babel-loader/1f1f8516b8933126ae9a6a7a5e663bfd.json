{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar mapSize = require('./mapSize.js');\nvar mapType = require('./mapType.js');\nfunction getAttributeData(program, gl) {\n  var attributes = {};\n  var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (var i = 0; i < totalAttributes; i++) {\n    var attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    var type = mapType.mapType(gl, attribData.type);\n    var data = {\n      type: type,\n      name: attribData.name,\n      size: mapSize.mapSize(type),\n      location: gl.getAttribLocation(program, attribData.name)\n    };\n    attributes[attribData.name] = data;\n  }\n  return attributes;\n}\nexports.getAttributeData = getAttributeData;","map":{"version":3,"sources":["../../../src/shader/utils/getAttributeData.ts"],"names":["mapSize"],"mappings":";;;;;;;AAWO,SAAA,gBAAA,CAA0B,OAAA,EAAuB,EACxD,EAAA;EACI,IAAM,UAAA,GAA8C,CAAA,CAAC;EAErD,IAAM,eAAkB,GAAA,EAAA,CAAG,mBAAoB,CAAA,OAAA,EAAS,EAAA,CAAG,iBAAiB,CAAA;EAE5E,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,eAAA,EAAiB,CACrC,EAAA,EAAA;IACI,IAAM,UAAa,GAAA,EAAA,CAAG,eAAgB,CAAA,OAAA,EAAS,CAAC,CAAA;IAEhD,IAAI,UAAW,CAAA,IAAA,CAAK,UAAW,CAAA,KAAK,CACpC,EAAA;MACI;IAAA;IAGJ,IAAM,IAAO,GAAA,OAAA,CAAA,OAAA,CAAQ,EAAI,EAAA,UAAA,CAAW,IAAI,CAAA;IACxC,IAAM,IAAO,GAAA;MACT,IAAA,EAAA,IAAA;MACA,IAAA,EAAM,UAAW,CAAA,IAAA;MACjB,IAAA,EAAMA,OAAAA,CAAAA,OAAAA,CAAQ,IAAI,CAAA;MAClB,QAAU,EAAA,EAAA,CAAG,iBAAkB,CAAA,OAAA,EAAS,UAAA,CAAW,IAAI;IAAA,CAC3D;IAEA,UAAA,CAAW,UAAA,CAAW,IAAQ,CAAA,GAAA,IAAA;EAAA;EAG3B,OAAA,UAAA;AACX","sourcesContent":["import type { IAttributeData } from '../Program';\nimport { mapSize } from './mapSize';\nimport { mapType } from './mapType';\n\n/**\n * returns the attribute data from the program\n * @private\n * @param {WebGLProgram} [program] - the WebGL program\n * @param {WebGLRenderingContext} [gl] - the WebGL context\n * @returns {object} the attribute data for this program\n */\nexport function getAttributeData(program: WebGLProgram, gl: WebGLRenderingContextBase): {[key: string]: IAttributeData}\n{\n    const attributes: {[key: string]: IAttributeData} = {};\n\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++)\n    {\n        const attribData = gl.getActiveAttrib(program, i);\n\n        if (attribData.name.startsWith('gl_'))\n        {\n            continue;\n        }\n\n        const type = mapType(gl, attribData.type);\n        const data = {\n            type,\n            name: attribData.name,\n            size: mapSize(type),\n            location: gl.getAttribLocation(program, attribData.name),\n        };\n\n        attributes[attribData.name] = data;\n    }\n\n    return attributes;\n}\n"]},"metadata":{},"sourceType":"script"}