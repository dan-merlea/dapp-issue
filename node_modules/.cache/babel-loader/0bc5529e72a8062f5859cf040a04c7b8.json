{"ast":null,"code":"import { api } from 'config';\nimport { serverApiUrl } from 'utils/server';\nexport var accountService = {\n  fetchAccountTokens: function fetchAccountTokens(address, query) {\n    return fetch(\"\".concat(api, \"/accounts/\").concat(address, \"/tokens?search=\").concat(query)).then(function (res) {\n      return res.json();\n    }).catch(function (err) {\n      console.error(err);\n    });\n  },\n  fetchAccountMetaTokens: function fetchAccountMetaTokens(address, query) {\n    return fetch(\"\".concat(api, \"/accounts/\").concat(address, \"/nfts?search=\").concat(query, \"&type=MetaESDT\")).then(function (res) {\n      return res.json();\n    }).catch(function (err) {\n      console.error(err);\n    });\n  },\n  fetchAccountNfts: function fetchAccountNfts(address, collection) {\n    return fetch(\"\".concat(api, \"/accounts/\").concat(address, \"/nfts?search=\").concat(collection)).then(function (res) {\n      return res.json();\n    }).catch(function (err) {\n      console.error(err);\n    });\n  },\n  fetchAllSpaceships: function fetchAllSpaceships() {\n    return fetch(\"\".concat(serverApiUrl(), \"/main/getSpaceshipsStats\")).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.status) return res.objects;\n      return [];\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }\n};","map":{"version":3,"names":["api","serverApiUrl","accountService","fetchAccountTokens","address","query","fetch","then","res","json","catch","err","console","error","fetchAccountMetaTokens","fetchAccountNfts","collection","fetchAllSpaceships","status","objects"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/services/account.service.ts"],"sourcesContent":["import { Models, Types } from '@krogan/common';\nimport { api } from 'config';\nimport { serverApiUrl } from 'utils/server';\n\nexport const accountService = {\n\tfetchAccountTokens: (address: string, query: string): Promise<Types.ESDTToken[]> => {\n\t\treturn fetch(`${api}/accounts/${address}/tokens?search=${query}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => { console.error(err) })\n\t},\n\tfetchAccountMetaTokens: (address: string, query: string): Promise<Types.ESDTToken[]> => {\n\t\treturn fetch(`${api}/accounts/${address}/nfts?search=${query}&type=MetaESDT`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => { console.error(err) })\n\t},\n\tfetchAccountNfts: (address: string, collection: string): Promise<Types.ESDTToken[]> => {\n\t\treturn fetch(`${api}/accounts/${address}/nfts?search=${collection}`)\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => { console.error(err) })\n\t},\n\tfetchAllSpaceships: (): Promise<Models.ISpaceship[]> => {\n\t\treturn fetch(`${serverApiUrl()}/main/getSpaceshipsStats`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status) return res.objects\n\t\t\t\treturn []\n\t\t\t})\n\t\t\t.catch(err => { console.error(err) })\n\t}\n}"],"mappings":"AACA,SAASA,GAAG,QAAQ,QAAQ;AAC5B,SAASC,YAAY,QAAQ,cAAc;AAE3C,OAAO,IAAMC,cAAc,GAAG;EAC7BC,kBAAkB,EAAE,4BAACC,OAAe,EAAEC,KAAa,EAAiC;IACnF,OAAOC,KAAK,WAAIN,GAAG,uBAAaI,OAAO,4BAAkBC,KAAK,EAAG,CAC/DE,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACvBC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAC,CAAC,CAAC;EACvC,CAAC;EACDG,sBAAsB,EAAE,gCAACV,OAAe,EAAEC,KAAa,EAAiC;IACvF,OAAOC,KAAK,WAAIN,GAAG,uBAAaI,OAAO,0BAAgBC,KAAK,oBAAiB,CAC3EE,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACvBC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAC,CAAC,CAAC;EACvC,CAAC;EACDI,gBAAgB,EAAE,0BAACX,OAAe,EAAEY,UAAkB,EAAiC;IACtF,OAAOV,KAAK,WAAIN,GAAG,uBAAaI,OAAO,0BAAgBY,UAAU,EAAG,CAClET,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACvBC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAC,CAAC,CAAC;EACvC,CAAC;EACDM,kBAAkB,EAAE,8BAAoC;IACvD,OAAOX,KAAK,WAAIL,YAAY,EAAE,8BAA2B,CACvDM,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACvBF,IAAI,CAAC,UAAAC,GAAG,EAAI;MACZ,IAAIA,GAAG,CAACU,MAAM,EAAE,OAAOV,GAAG,CAACW,OAAO;MAClC,OAAO,EAAE;IACV,CAAC,CAAC,CACDT,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAAC,CAAC,CAAC;EACvC;AACD,CAAC"},"metadata":{},"sourceType":"module"}