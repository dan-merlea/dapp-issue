{"ast":null,"code":"import { utils } from '@pixi/core';\nfunction checkExtension(url, extension) {\n  var tempURL = url.split(\"?\")[0];\n  var ext = utils.path.extname(tempURL).toLowerCase();\n  if (Array.isArray(extension)) {\n    return extension.includes(ext.toLowerCase());\n  }\n  return ext.toLowerCase() === extension;\n}\nexport { checkExtension };","map":{"version":3,"sources":["../../../../../src/loader/parsers/textures/utils/checkExtension.ts"],"names":[],"mappings":";AAEO,SAAA,cAAA,CAAwB,GAAA,EAAa,SAC5C,EAAA;EACI,IAAM,OAAU,GAAA,GAAA,CAAI,KAAM,CAAA,GAAG,CAAE,CAAA,CAAA,CAAA;EAC/B,IAAM,GAAA,GAAM,KAAM,CAAA,IAAA,CAAK,OAAQ,CAAA,OAAO,CAAA,CAAE,WAAY,EAAA;EAEhD,IAAA,KAAA,CAAM,OAAQ,CAAA,SAAS,CAC3B,EAAA;IACI,OAAO,SAAU,CAAA,QAAA,CAAS,GAAI,CAAA,WAAA,EAAa,CAAA;EAAA;EAGxC,OAAA,GAAA,CAAI,WAAA,EAAkB,KAAA,SAAA;AACjC","sourcesContent":["import { utils } from '@pixi/core';\n\nexport function checkExtension(url: string, extension: string | string[]): boolean\n{\n    const tempURL = url.split('?')[0];\n    const ext = utils.path.extname(tempURL).toLowerCase();\n\n    if (Array.isArray(extension))\n    {\n        return extension.includes(ext.toLowerCase());\n    }\n\n    return ext.toLowerCase() === extension;\n}\n"]},"metadata":{},"sourceType":"module"}