{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Code = void 0;\n/**\n * Bytecode of a Smart Contract, as an abstraction.\n */\nvar Code = /*#__PURE__*/function () {\n  function Code(hex) {\n    _classCallCheck(this, Code);\n    this.hex = hex;\n  }\n  /**\n   * Creates a Code object from a buffer (sequence of bytes).\n   */\n  _createClass(Code, [{\n    key: \"toString\",\n    value:\n    /**\n     * Returns the bytecode as a hex-encoded string.\n     */\n    function toString() {\n      return this.hex;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return Buffer.from(this.hex, \"hex\");\n    }\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(code) {\n      return new Code(code.toString(\"hex\"));\n    }\n  }]);\n  return Code;\n}();\nexports.Code = Code;","map":null,"metadata":{},"sourceType":"script"}