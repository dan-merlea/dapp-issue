{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionPayload = void 0;\nvar transactionPayloadBuilders_1 = require(\"./smartcontracts/transactionPayloadBuilders\");\n/**\n * The \"data\" field of a {@link Transaction}, as an immutable object.\n */\nvar TransactionPayload = /*#__PURE__*/function () {\n  /**\n   * Creates a TransactionPayload from a utf-8 string or from a buffer.\n   */\n  function TransactionPayload(data) {\n    _classCallCheck(this, TransactionPayload);\n    this.data = Buffer.from(data || []);\n  }\n  /**\n   * Creates a TransactionPayload from a base-64 encoded string.\n   */\n  _createClass(TransactionPayload, [{\n    key: \"isEmpty\",\n    value:\n    /**\n     * Returns whether the \"data\" is void.\n     */\n    function isEmpty() {\n      return this.data.length == 0;\n    }\n    /**\n     * Returns the base-64 representation of the data.\n     */\n  }, {\n    key: \"encoded\",\n    value: function encoded() {\n      return this.data.toString(\"base64\");\n    }\n    /**\n     * Returns the data as a buffer.\n     */\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.data;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.data.toString();\n    }\n  }, {\n    key: \"getEncodedArguments\",\n    value: function getEncodedArguments() {\n      return this.toString().split(\"@\");\n    }\n  }, {\n    key: \"getRawArguments\",\n    value: function getRawArguments() {\n      return this.getEncodedArguments().map(function (argument) {\n        return Buffer.from(argument, \"hex\");\n      });\n    }\n    /**\n     * Returns the length of the data.\n     */\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Buffer.from(this.data).length;\n    }\n    /**\n     * Returns a new builder, to be used for contract deploy transactions.\n     */\n  }], [{\n    key: \"fromEncoded\",\n    value: function fromEncoded(encoded) {\n      if (!encoded) {\n        return new TransactionPayload(\"\");\n      }\n      var decoded = Buffer.from(encoded, \"base64\").toString();\n      return new TransactionPayload(decoded);\n    }\n  }, {\n    key: \"contractDeploy\",\n    value: function contractDeploy() {\n      return new transactionPayloadBuilders_1.ContractDeployPayloadBuilder();\n    }\n    /**\n     * Returns a new builder, to be used for contract upgrade transactions.\n     */\n  }, {\n    key: \"contractUpgrade\",\n    value: function contractUpgrade() {\n      return new transactionPayloadBuilders_1.ContractUpgradePayloadBuilder();\n    }\n    /**\n     * Returns a new builder, to be used for contract call transactions.\n     */\n  }, {\n    key: \"contractCall\",\n    value: function contractCall() {\n      return new transactionPayloadBuilders_1.ContractCallPayloadBuilder();\n    }\n  }]);\n  return TransactionPayload;\n}();\nexports.TransactionPayload = TransactionPayload;","map":null,"metadata":{},"sourceType":"script"}