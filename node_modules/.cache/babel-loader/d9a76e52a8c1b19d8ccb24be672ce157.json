{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { a as e } from \"./chunk-V2DQWH6R.js\";\nimport { a as m } from \"./chunk-HZKP5C5V.js\";\nimport { d as r } from \"./chunk-FC3CZOOQ.js\";\nimport { j as t, m as o } from \"./chunk-HBP5N4FR.js\";\no();\nimport c from \"axios\";\nfunction I(a) {\n  return t(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _e, _e$network, i, n, _yield$c$get, s;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _e = e(m.getState());\n            _e$network = _e.network;\n            i = _e$network.apiAddress;\n            n = _e$network.apiTimeout;\n            _context.next = 6;\n            return c.get(\"/\".concat(r, \"/\").concat(a), {\n              baseURL: i,\n              timeout: Number(n)\n            });\n          case 6:\n            _yield$c$get = _context.sent;\n            s = _yield$c$get.data;\n            return _context.abrupt(\"return\", s);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nexport { I as a };","map":null,"metadata":{},"sourceType":"module"}