{"ast":null,"code":"import { a, c as n } from \"./chunk-ZNSS4PT5.js\";\nimport { e as l, m as o } from \"./chunk-HBP5N4FR.js\";\nimport { createSlice as c } from \"@reduxjs/toolkit\";\nvar e,\n  d,\n  x,\n  p,\n  b,\n  N,\n  T,\n  s = l(function () {\n    var _d$actions;\n    o();\n    n();\n    e = {}, d = c({\n      name: \"modalsSlice\",\n      initialState: e,\n      reducers: {\n        setTxSubmittedModal: function setTxSubmittedModal(t, i) {\n          t.txSubmittedModal = i.payload;\n        },\n        setNotificationModal: function setNotificationModal(t, i) {\n          t.notificationModal = i.payload;\n        },\n        clearTxSubmittedModal: function clearTxSubmittedModal(t) {\n          t.txSubmittedModal = void 0;\n        },\n        clearNotificationModal: function clearNotificationModal(t) {\n          t.notificationModal = void 0;\n        }\n      },\n      extraReducers: function extraReducers(t) {\n        t.addCase(a, function () {\n          return e;\n        });\n      }\n    }), (_d$actions = d.actions, x = _d$actions.setTxSubmittedModal, p = _d$actions.setNotificationModal, b = _d$actions.clearTxSubmittedModal, N = _d$actions.clearNotificationModal), T = d.reducer;\n  });\nexport { d as a, x as b, p as c, b as d, N as e, T as f, s as g };","map":{"version":3,"names":["a","c","n","e","l","m","o","createSlice","d","x","p","b","N","T","s","name","initialState","reducers","setTxSubmittedModal","t","i","txSubmittedModal","payload","setNotificationModal","notificationModal","clearTxSubmittedModal","clearNotificationModal","extraReducers","addCase","actions","reducer","f","g"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@elrondnetwork/dapp-core/__chunks__/chunk-MNUBSRZF.js"],"sourcesContent":["import{a,c as n}from\"./chunk-ZNSS4PT5.js\";import{e as l,m as o}from\"./chunk-HBP5N4FR.js\";import{createSlice as c}from\"@reduxjs/toolkit\";var e,d,x,p,b,N,T,s=l(()=>{o();n();e={},d=c({name:\"modalsSlice\",initialState:e,reducers:{setTxSubmittedModal:(t,i)=>{t.txSubmittedModal=i.payload},setNotificationModal:(t,i)=>{t.notificationModal=i.payload},clearTxSubmittedModal:t=>{t.txSubmittedModal=void 0},clearNotificationModal:t=>{t.notificationModal=void 0}},extraReducers:t=>{t.addCase(a,()=>e)}}),{setTxSubmittedModal:x,setNotificationModal:p,clearTxSubmittedModal:b,clearNotificationModal:N}=d.actions,T=d.reducer});export{d as a,x as b,p as c,b as d,N as e,T as f,s as g};\n//# sourceMappingURL=chunk-MNUBSRZF.js.map\n"],"mappings":"AAAA,SAAOA,CAAC,EAACC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,EAACC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,WAAW,IAAIN,CAAC,QAAK,kBAAkB;AAAC,IAAIE,CAAC;EAACK,CAAC;EAACC,CAAC;EAACC,CAAC;EAACC,CAAC;EAACC,CAAC;EAACC,CAAC;EAACC,CAAC,GAACV,CAAC,CAAC,YAAI;IAAA;IAACE,CAAC,EAAE;IAACJ,CAAC,EAAE;IAACC,CAAC,GAAC,CAAC,CAAC,EAACK,CAAC,GAACP,CAAC,CAAC;MAACc,IAAI,EAAC,aAAa;MAACC,YAAY,EAACb,CAAC;MAACc,QAAQ,EAAC;QAACC,mBAAmB,EAAC,6BAACC,CAAC,EAACC,CAAC,EAAG;UAACD,CAAC,CAACE,gBAAgB,GAACD,CAAC,CAACE,OAAO;QAAA,CAAC;QAACC,oBAAoB,EAAC,8BAACJ,CAAC,EAACC,CAAC,EAAG;UAACD,CAAC,CAACK,iBAAiB,GAACJ,CAAC,CAACE,OAAO;QAAA,CAAC;QAACG,qBAAqB,EAAC,+BAAAN,CAAC,EAAE;UAACA,CAAC,CAACE,gBAAgB,GAAC,KAAK,CAAC;QAAA,CAAC;QAACK,sBAAsB,EAAC,gCAAAP,CAAC,EAAE;UAACA,CAAC,CAACK,iBAAiB,GAAC,KAAK,CAAC;QAAA;MAAC,CAAC;MAACG,aAAa,EAAC,uBAAAR,CAAC,EAAE;QAACA,CAAC,CAACS,OAAO,CAAC5B,CAAC,EAAC;UAAA,OAAIG,CAAC;QAAA,EAAC;MAAA;IAAC,CAAC,CAAC,gBAAiGK,CAAC,CAACqB,OAAO,EAApFpB,CAAC,cAArBS,mBAAmB,EAAwBR,CAAC,cAAtBa,oBAAoB,EAAyBZ,CAAC,cAAvBc,qBAAqB,EAA0Bb,CAAC,cAAxBc,sBAAsB,GAAcb,CAAC,GAACL,CAAC,CAACsB,OAAO;EAAA,CAAC,CAAC;AAAC,SAAOtB,CAAC,IAAIR,CAAC,EAACS,CAAC,IAAIE,CAAC,EAACD,CAAC,IAAIT,CAAC,EAACU,CAAC,IAAIH,CAAC,EAACI,CAAC,IAAIT,CAAC,EAACU,CAAC,IAAIkB,CAAC,EAACjB,CAAC,IAAIkB,CAAC"},"metadata":{},"sourceType":"module"}