{"ast":null,"code":"import _defineProperty from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { b as i } from \"./chunk-4MZJ74HF.js\";\nimport { a as y } from \"./chunk-APJRIJIH.js\";\nimport { a as d } from \"./chunk-N5FKLD3G.js\";\nimport { a as x } from \"./chunk-HHR7PJAJ.js\";\nimport { b as o } from \"./chunk-OI3KYR6B.js\";\nimport { a as N } from \"./chunk-2PGGQXUN.js\";\nimport { a as f } from \"./chunk-XAPH7V6V.js\";\nimport { i as T } from \"./chunk-7QE2X3X4.js\";\nimport { m as c } from \"./chunk-HBP5N4FR.js\";\nc();\nT();\nimport r from \"react\";\nimport p from \"classnames\";\nimport { faCaretRight as v } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon as g } from \"@fortawesome/react-fontawesome\";\nvar X = function X(_ref) {\n  var _a, _p;\n  var e = _ref.address,\n    m = _ref.transaction,\n    l = _ref.action,\n    s = _ref.isFullSize,\n    n = _ref.direction;\n  var t;\n  e === m.sender && (t = m.senderAssets), e === m.receiver && (t = m.receiverAssets);\n  var a = (_a = {}, _defineProperty(_a, \"Internal\", \"int\"), _defineProperty(_a, \"In\", \"in\"), _defineProperty(_a, \"Out\", \"out\"), _defineProperty(_a, \"Self\", \"self\"), _a);\n  return r.createElement(\"div\", {\n    className: p(i.operationBlock, (_p = {}, _defineProperty(_p, o.col12, s), _defineProperty(_p, o.prXl0, !s), _defineProperty(_p, o.pl3, !s && t), _defineProperty(_p, o.colLg6, !s && !t), _defineProperty(_p, o.colXl4, !s && !t), _p))\n  }, n && r.createElement(\"div\", {\n    className: p(i.direction, i[a[n]])\n  }, a[n]), l && r.createElement(g, {\n    icon: v,\n    size: \"xs\",\n    className: p(o.textSecondary, o.mr2)\n  }), r.createElement(\"div\", {\n    className: p(o.textNowrap, o.mr2)\n  }, l || \"\"), f(e) ? r.createElement(r.Fragment, null, r.createElement(d, {\n    page: N.accountDetails(e),\n    className: i.explorer\n  }, r.createElement(y, {\n    address: e,\n    assets: t\n  })), r.createElement(x, {\n    text: e,\n    className: i.copy\n  })) : \"\");\n};\nexport { X as a };","map":null,"metadata":{},"sourceType":"module"}