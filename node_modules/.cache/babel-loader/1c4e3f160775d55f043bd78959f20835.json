{"ast":null,"code":"import _objectSpread from \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/gui/hud/Messages.tsx\",\n  _this = this;\nimport { Inline, Space, Text, View } from 'gui/uielements';\nimport React, { Fragment } from 'react';\nimport { Container } from '.';\nimport { isMobile } from 'react-device-detect';\n\n/**\n * Render the messages from the server.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Messages = /*#__PURE__*/React.memo(_c = function _c(props) {\n  var messages = props.messages,\n    style = props.style;\n  if (!messages.length) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: _objectSpread(_objectSpread({}, styles.messages), style),\n    children: messages.map(function (message, index) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, message.ts, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, _this), messages.length > 1 && index < messages.length - 1 ? /*#__PURE__*/_jsxDEV(Space, {\n          size: \"xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 79\n        }, _this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, _this);\n});\n\n/**\n * Render a single message.\n */\n_c2 = Messages;\nfunction Message(props) {\n  var message = props.message;\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.message,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      type: \"body\",\n      style: styles.messageAuthorText,\n      children: \"\".concat(message.from, \":\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Inline, {\n      size: \"xxs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"body\",\n      style: styles.messageText,\n      children: getFormattedMessage(message)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Message;\nfunction getFormattedMessage(message) {\n  switch (message.type) {\n    case 'left':\n      return \"\".concat(message.params.name, \" left.\");\n    case 'timeout':\n      return \"Timeout...\";\n    default:\n      return '';\n  }\n}\nvar styles = {\n  messages: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    minHeight: 40\n  },\n  message: {\n    display: 'flex',\n    flexDirection: 'row',\n    opacity: isMobile ? 0.5 : 1\n  },\n  messageAuthorText: {\n    color: 'darkgray',\n    fontSize: isMobile ? 12 : 16,\n    textTransform: 'capitalize'\n  },\n  messageText: {\n    color: 'white',\n    fontSize: isMobile ? 12 : 16,\n    alignItems: 'center'\n  }\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Messages$React.memo\");\n$RefreshReg$(_c2, \"Messages\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"names":["Inline","Space","Text","View","React","Fragment","Container","isMobile","Messages","memo","props","messages","style","length","styles","map","message","index","ts","Message","messageAuthorText","from","messageText","getFormattedMessage","type","params","name","flexDirection","alignItems","minHeight","display","opacity","color","fontSize","textTransform"],"sources":["/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/gui/hud/Messages.tsx"],"sourcesContent":["import { Inline, Space, Text, View } from 'gui/uielements';\nimport React, { CSSProperties, Fragment } from 'react';\nimport { Container } from '.';\nimport { Models } from '@krogan/common';\nimport { isMobile } from 'react-device-detect';\n\n/**\n * Render the messages from the server.\n */\nexport const Messages = React.memo(\n    (props: { messages: Models.MessageJSON[]; style?: CSSProperties }): React.ReactElement | null => {\n        const { messages, style } = props;\n\n        if (!messages.length) {\n            return null;\n        }\n\n        return (\n            <Container\n                style={{\n                    ...styles.messages,\n                    ...style,\n                }}\n            >\n                {messages.map((message, index) => (\n                    <Fragment key={index}>\n                        <Message key={message.ts} message={message} />\n                        {messages.length > 1 && index < messages.length - 1 ? <Space size=\"xs\" /> : null}\n                    </Fragment>\n                ))}\n            </Container>\n        );\n    },\n);\n\n/**\n * Render a single message.\n */\nfunction Message(props: { message: Models.MessageJSON }): React.ReactElement {\n    const { message } = props;\n\n    return (\n        <View style={styles.message}>\n            <Text type='body' style={styles.messageAuthorText}>{`${message.from}:`}</Text>\n            <Inline size=\"xxs\" />\n            <Text type='body' style={styles.messageText}>{getFormattedMessage(message)}</Text>\n        </View>\n    );\n}\n\nfunction getFormattedMessage(message: Models.MessageJSON): string {\n    switch (message.type) {\n        case 'left':\n            return `${message.params.name} left.`;\n        case 'timeout':\n            return `Timeout...`;\n        default:\n            return '';\n    }\n}\n\nconst styles: { [key: string]: CSSProperties } = {\n    messages: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        minHeight: 40,\n    },\n    message: {\n        display: 'flex',\n        flexDirection: 'row',\n        opacity: isMobile ? 0.5 : 1,\n    },\n    messageAuthorText: {\n        color: 'darkgray',\n        fontSize: isMobile ? 12 : 16,\n        textTransform: 'capitalize',\n    },\n    messageText: {\n        color: 'white',\n        fontSize: isMobile ? 12 : 16,\n        alignItems: 'center',\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}