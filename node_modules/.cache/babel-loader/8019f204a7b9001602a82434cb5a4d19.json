{"ast":null,"code":"\"use strict\";\n\nvar _construct = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/construct.js\").default;\nvar _toConsumableArray = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositeValue = exports.CompositeType = void 0;\nvar utils_1 = require(\"../../utils\");\nvar types_1 = require(\"./types\");\nvar CompositeType = /*#__PURE__*/function (_types_1$Type) {\n  _inherits(CompositeType, _types_1$Type);\n  var _super = _createSuper(CompositeType);\n  function CompositeType() {\n    _classCallCheck(this, CompositeType);\n    for (var _len = arguments.length, typeParameters = new Array(_len), _key = 0; _key < _len; _key++) {\n      typeParameters[_key] = arguments[_key];\n    }\n    return _super.call(this, \"Composite\", typeParameters, types_1.TypeCardinality.variable(typeParameters.length));\n  }\n  _createClass(CompositeType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return CompositeType.ClassName;\n    }\n  }]);\n  return CompositeType;\n}(types_1.Type);\nexports.CompositeType = CompositeType;\nCompositeType.ClassName = \"CompositeType\";\nvar CompositeValue = /*#__PURE__*/function (_types_1$TypedValue) {\n  _inherits(CompositeValue, _types_1$TypedValue);\n  var _super2 = _createSuper(CompositeValue);\n  function CompositeValue(type, items) {\n    var _this;\n    _classCallCheck(this, CompositeValue);\n    _this = _super2.call(this, type);\n    utils_1.guardLength(items, type.getTypeParameters().length);\n    // TODO: assert type of each item (wrt. type.getTypeParameters()).\n    _this.items = items;\n    return _this;\n  }\n  _createClass(CompositeValue, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return CompositeValue.ClassName;\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this.items;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.items.map(function (item) {\n        return item.valueOf();\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (this.getType().differs(other.getType())) {\n        return false;\n      }\n      for (var i = 0; i < this.items.length; i++) {\n        var selfItem = this.items[i];\n        var otherItem = other.items[i];\n        if (!selfItem.equals(otherItem)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }], [{\n    key: \"fromItems\",\n    value: function fromItems() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n      var typeParameters = items.map(function (value) {\n        return value.getType();\n      });\n      var type = _construct(CompositeType, _toConsumableArray(typeParameters));\n      return new CompositeValue(type, items);\n    }\n  }]);\n  return CompositeValue;\n}(types_1.TypedValue);\nexports.CompositeValue = CompositeValue;\nCompositeValue.ClassName = \"CompositeValue\";","map":null,"metadata":{},"sourceType":"script"}