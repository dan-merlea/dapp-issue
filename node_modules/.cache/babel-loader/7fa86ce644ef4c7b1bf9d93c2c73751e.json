{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n/**\n * A menu displaying important room actions and informations.\n */\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Menu(props) {\n  _s();\n  var onClose = props.onClose,\n    onLeave = props.onLeave;\n  var roomURL = window.location.href;\n  var inputRef = React.useRef(null);\n\n  // Copy the room's link to the clipboard\n  var copyToClipboard = function copyToClipboard() {\n    if (!inputRef.current) {\n      return;\n    }\n    inputRef.current.select();\n    window.document.execCommand('copy');\n    inputRef.current.blur();\n  };\n  useEffect(function () {\n    return console.log('Menu opened');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <View fullscreen flex center backdrop style={styles.menu}>\n  //     <Box style={styles.box}>\n  //         {/* Share */}\n  //         <Text style={styles.sectionTitle}>Share</Text>\n  //         <Space size=\"xxs\" />\n  //         <Text style={styles.sectionDescription}>Copy this link to play with your friends.</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex center>\n  //             <Input ref={inputRef} value={roomURL} />\n  //             <Inline size=\"xs\" />\n  //             <Button text=\"Copy\" style={{ width: 'fit-content' }} onClick={copyToClipboard} />\n  //         </View>\n  //         <Space size=\"m\" />\n\n  //         {/* Keys */}\n  //         <Text style={styles.sectionTitle}>Keys</Text>\n  //         <Space size=\"xxs\" />\n  //         <Text style={styles.sectionDescription}>The list of keys to play the game.</Text>\n  //         <Space size=\"s\" />\n\n  //         {/* Keys: Move */}\n  //         <Text style={styles.sectionKey}>Move:</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex>\n  //             <KeyboardKey value=\"W\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"A\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"S\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"D\" />\n  //             <Inline size=\"xxs\" />\n\n  //             <Text>or</Text>\n\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"↑\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"←\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"↓\" />\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"→\" />\n  //         </View>\n  //         <Space size=\"s\" />\n\n  //         {/* Keys: Aim */}\n  //         <Text style={styles.sectionKey}>Aim:</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex>\n  //             <KeyboardKey value=\"Mouse\" />\n  //         </View>\n  //         <Space size=\"s\" />\n\n  //         {/* Keys: Shoot */}\n  //         <Text style={styles.sectionKey}>Shoot:</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex>\n  //             <KeyboardKey value=\"Left click\" />\n  //             <Inline size=\"xxs\" />\n\n  //             <Text>or</Text>\n\n  //             <Inline size=\"xxs\" />\n  //             <KeyboardKey value=\"Space\" />\n  //         </View>\n  //         <Space size=\"s\" />\n\n  //         {/* Keys: Leaderboard */}\n  //         <Text style={styles.sectionKey}>Leaderboard:</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex>\n  //             <KeyboardKey value=\"Tab\" />\n  //         </View>\n  //         <Space size=\"s\" />\n\n  //         {/* Keys: Menu */}\n  //         <Text style={styles.sectionKey}>Menu:</Text>\n  //         <Space size=\"xxs\" />\n  //         <View flex>\n  //             <KeyboardKey value=\"Escape\" />\n  //         </View>\n  //         <Space size=\"m\" />\n\n  //         <View flex>\n  //             <Button onClick={onLeave} icon={ArrowLeft}>\n  //                 Leave\n  //             </Button>\n  //             <Inline size=\"xxs\" />\n  //             <Button reversed onClick={onClose}>\n  //                 Close\n  //             </Button>\n  //         </View>\n  //     </Box>\n  // </View>\n  ;\n}\n_s(Menu, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = Menu;\nvar styles = {\n  menu: {\n    position: 'fixed',\n    padding: 16,\n    zIndex: 1000\n  },\n  box: {\n    boxSizing: 'border-box',\n    maxHeight: '100%',\n    maxWidth: 500,\n    overflowY: 'scroll'\n  },\n  sectionTitle: {\n    color: 'black',\n    fontSize: 18\n  },\n  sectionDescription: {\n    color: '#A9A9A9'\n  },\n  sectionKey: {\n    fontSize: 14\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","Menu","props","onClose","onLeave","roomURL","window","location","href","inputRef","useRef","copyToClipboard","current","select","document","execCommand","blur","console","log","styles","menu","position","padding","zIndex","box","boxSizing","maxHeight","maxWidth","overflowY","sectionTitle","color","fontSize","sectionDescription","sectionKey"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/gui/hud/Menu.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect } from 'react';\n\n/**\n * A menu displaying important room actions and informations.\n */\nexport function Menu(props: { onClose?: () => void; onLeave?: () => void }): React.ReactElement {\n    const { onClose, onLeave } = props;\n    const roomURL = window.location.href;\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    // Copy the room's link to the clipboard\n    const copyToClipboard = () => {\n        if (!inputRef.current) {\n            return;\n        }\n\n        inputRef.current.select();\n        window.document.execCommand('copy');\n        inputRef.current.blur();\n    };\n\n    useEffect(() => console.log('Menu opened'), [])\n\n    return (<></>\n        // <View fullscreen flex center backdrop style={styles.menu}>\n        //     <Box style={styles.box}>\n        //         {/* Share */}\n        //         <Text style={styles.sectionTitle}>Share</Text>\n        //         <Space size=\"xxs\" />\n        //         <Text style={styles.sectionDescription}>Copy this link to play with your friends.</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex center>\n        //             <Input ref={inputRef} value={roomURL} />\n        //             <Inline size=\"xs\" />\n        //             <Button text=\"Copy\" style={{ width: 'fit-content' }} onClick={copyToClipboard} />\n        //         </View>\n        //         <Space size=\"m\" />\n\n        //         {/* Keys */}\n        //         <Text style={styles.sectionTitle}>Keys</Text>\n        //         <Space size=\"xxs\" />\n        //         <Text style={styles.sectionDescription}>The list of keys to play the game.</Text>\n        //         <Space size=\"s\" />\n\n        //         {/* Keys: Move */}\n        //         <Text style={styles.sectionKey}>Move:</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex>\n        //             <KeyboardKey value=\"W\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"A\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"S\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"D\" />\n        //             <Inline size=\"xxs\" />\n\n        //             <Text>or</Text>\n\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"↑\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"←\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"↓\" />\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"→\" />\n        //         </View>\n        //         <Space size=\"s\" />\n\n        //         {/* Keys: Aim */}\n        //         <Text style={styles.sectionKey}>Aim:</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex>\n        //             <KeyboardKey value=\"Mouse\" />\n        //         </View>\n        //         <Space size=\"s\" />\n\n        //         {/* Keys: Shoot */}\n        //         <Text style={styles.sectionKey}>Shoot:</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex>\n        //             <KeyboardKey value=\"Left click\" />\n        //             <Inline size=\"xxs\" />\n\n        //             <Text>or</Text>\n\n        //             <Inline size=\"xxs\" />\n        //             <KeyboardKey value=\"Space\" />\n        //         </View>\n        //         <Space size=\"s\" />\n\n        //         {/* Keys: Leaderboard */}\n        //         <Text style={styles.sectionKey}>Leaderboard:</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex>\n        //             <KeyboardKey value=\"Tab\" />\n        //         </View>\n        //         <Space size=\"s\" />\n\n        //         {/* Keys: Menu */}\n        //         <Text style={styles.sectionKey}>Menu:</Text>\n        //         <Space size=\"xxs\" />\n        //         <View flex>\n        //             <KeyboardKey value=\"Escape\" />\n        //         </View>\n        //         <Space size=\"m\" />\n\n        //         <View flex>\n        //             <Button onClick={onLeave} icon={ArrowLeft}>\n        //                 Leave\n        //             </Button>\n        //             <Inline size=\"xxs\" />\n        //             <Button reversed onClick={onClose}>\n        //                 Close\n        //             </Button>\n        //         </View>\n        //     </Box>\n        // </View>\n    );\n}\n\nconst styles: { [key: string]: CSSProperties } = {\n    menu: {\n        position: 'fixed',\n        padding: 16,\n        zIndex: 1000,\n    },\n    box: {\n        boxSizing: 'border-box',\n        maxHeight: '100%',\n        maxWidth: 500,\n        overflowY: 'scroll',\n    },\n    sectionTitle: {\n        color: 'black',\n        fontSize: 18,\n    },\n    sectionDescription: {\n        color: '#A9A9A9',\n    },\n    sectionKey: {\n        fontSize: 14,\n    },\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAmBC,SAAS,QAAQ,OAAO;;AAEvD;AACA;AACA;AAFA;AAAA;AAGA,OAAO,SAASC,IAAI,CAACC,KAAqD,EAAsB;EAAA;EAC5F,IAAQC,OAAO,GAAcD,KAAK,CAA1BC,OAAO;IAAEC,OAAO,GAAKF,KAAK,CAAjBE,OAAO;EACxB,IAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;EACpC,IAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAM,CAAmB,IAAI,CAAC;;EAErD;EACA,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC1B,IAAI,CAACF,QAAQ,CAACG,OAAO,EAAE;MACnB;IACJ;IAEAH,QAAQ,CAACG,OAAO,CAACC,MAAM,EAAE;IACzBP,MAAM,CAACQ,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IACnCN,QAAQ,CAACG,OAAO,CAACI,IAAI,EAAE;EAC3B,CAAC;EAEDhB,SAAS,CAAC;IAAA,OAAMiB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAAA,GAAE,EAAE,CAAC;EAE/C,oBAAQ;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER;AAAC,GAnHejB,IAAI;AAAA,KAAJA,IAAI;AAqHpB,IAAMkB,MAAwC,GAAG;EAC7CC,IAAI,EAAE;IACFC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACZ,CAAC;EACDC,GAAG,EAAE;IACDC,SAAS,EAAE,YAAY;IACvBC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE;EACf,CAAC;EACDC,YAAY,EAAE;IACVC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACd,CAAC;EACDC,kBAAkB,EAAE;IAChBF,KAAK,EAAE;EACX,CAAC;EACDG,UAAU,EAAE;IACRF,QAAQ,EAAE;EACd;AACJ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}