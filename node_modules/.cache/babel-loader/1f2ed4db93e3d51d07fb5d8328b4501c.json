{"ast":null,"code":"import _classCallCheck from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Maths}from'@krogan/common';import{Graphics,Point}from'pixi.js';var PathSprite=/*#__PURE__*/function(_Graphics){_inherits(PathSprite,_Graphics);var _super=_createSuper(PathSprite);function PathSprite(x1,y1,x2,y2){var _this;var dashLength=arguments.length>4&&arguments[4]!==undefined?arguments[4]:10;var spaceLength=arguments.length>5&&arguments[5]!==undefined?arguments[5]:15;_classCallCheck(this,PathSprite);_this=_super.call(this);_this.start=void 0;_this.end=void 0;_this.start=new Point(x1,y1);_this.end=new Point(x2,y2);_this.lineStyle(1,0xFFFFFF,0.5);var x=x2-x1;var y=y2-y1;var hyp=Math.sqrt(x*x+y*y);var units=hyp/(dashLength+spaceLength);var dashSpaceRatio=dashLength/(dashLength+spaceLength);var dashX=x/units*dashSpaceRatio;var spaceX=x/units-dashX;var dashY=y/units*dashSpaceRatio;var spaceY=y/units-dashY;_this.moveTo(x1,y1);while(hyp>0){x1+=dashX;y1+=dashY;hyp-=dashLength;if(hyp<0){x1=x2;y1=y2;}_this.lineTo(x1,y1);x1+=spaceX;y1+=spaceY;_this.moveTo(x1,y1);hyp-=spaceLength;}_this.moveTo(x2,y2);return _this;}/**\n\t * @param {number} progress A number from 0 to 1 to represent the progress.\n\t */_createClass(PathSprite,[{key:\"pointAt\",value:function pointAt(progress){return new Point(Maths.lerp(this.start.x,this.end.x,progress),Maths.lerp(this.start.y,this.end.y,progress));}},{key:\"distance\",get:function get(){var a=Math.abs(this.start.x-this.end.x);var b=Math.abs(this.start.y-this.end.y);return Math.sqrt(a*a+b*b);}},{key:\"angle\",get:function get(){// Add 90 to have the same direction\nreturn Math.atan2(this.end.y-this.start.y,this.end.x-this.start.x)*180/Math.PI;}}]);return PathSprite;}(Graphics);export{PathSprite as default};","map":null,"metadata":{},"sourceType":"module"}