{"ast":null,"code":"import _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Maths } from '@krogan/common';\nimport { Graphics, Point } from 'pixi.js';\nvar PathSprite = /*#__PURE__*/function (_Graphics) {\n  _inherits(PathSprite, _Graphics);\n  var _super = _createSuper(PathSprite);\n  function PathSprite(x1, y1, x2, y2) {\n    var _this;\n    var dashLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 10;\n    var spaceLength = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 15;\n    _classCallCheck(this, PathSprite);\n    _this = _super.call(this);\n    _this.start = void 0;\n    _this.end = void 0;\n    _this.start = new Point(x1, y1);\n    _this.end = new Point(x2, y2);\n    _this.lineStyle(1, 0xFFFFFF, 0.5);\n    var x = x2 - x1;\n    var y = y2 - y1;\n    var hyp = Math.sqrt(x * x + y * y);\n    var units = hyp / (dashLength + spaceLength);\n    var dashSpaceRatio = dashLength / (dashLength + spaceLength);\n    var dashX = x / units * dashSpaceRatio;\n    var spaceX = x / units - dashX;\n    var dashY = y / units * dashSpaceRatio;\n    var spaceY = y / units - dashY;\n    _this.moveTo(x1, y1);\n    while (hyp > 0) {\n      x1 += dashX;\n      y1 += dashY;\n      hyp -= dashLength;\n      if (hyp < 0) {\n        x1 = x2;\n        y1 = y2;\n      }\n      _this.lineTo(x1, y1);\n      x1 += spaceX;\n      y1 += spaceY;\n      _this.moveTo(x1, y1);\n      hyp -= spaceLength;\n    }\n    _this.moveTo(x2, y2);\n    return _this;\n  }\n\n  /**\n   * @param {number} progress A number from 0 to 1 to represent the progress.\n   */\n  _createClass(PathSprite, [{\n    key: \"pointAt\",\n    value: function pointAt(progress) {\n      return new Point(Maths.lerp(this.start.x, this.end.x, progress), Maths.lerp(this.start.y, this.end.y, progress));\n    }\n  }, {\n    key: \"distance\",\n    get: function get() {\n      var a = Math.abs(this.start.x - this.end.x);\n      var b = Math.abs(this.start.y - this.end.y);\n      return Math.sqrt(a * a + b * b);\n    }\n  }, {\n    key: \"angle\",\n    get: function get() {\n      // Add 90 to have the same direction\n      return Math.atan2(this.end.y - this.start.y, this.end.x - this.start.x) * 180 / Math.PI;\n    }\n  }]);\n  return PathSprite;\n}(Graphics);\nexport { PathSprite as default };","map":{"version":3,"names":["Maths","Graphics","Point","PathSprite","x1","y1","x2","y2","dashLength","spaceLength","start","end","lineStyle","x","y","hyp","Math","sqrt","units","dashSpaceRatio","dashX","spaceX","dashY","spaceY","moveTo","lineTo","progress","lerp","a","abs","b","atan2","PI"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/map/PathSprite.ts"],"sourcesContent":["import { Maths } from '@krogan/common';\nimport { Graphics, Point } from 'pixi.js';\n\nexport default class PathSprite extends Graphics {\n\n\tpublic readonly start: Point\n\tpublic readonly end: Point\n    \n\tconstructor(x1: number, y1: number, x2: number, y2, dashLength = 10, spaceLength = 15) {\n\t\tsuper()\n\n\t\tthis.start = new Point(x1, y1)\n\t\tthis.end = new Point(x2, y2)\n\n\t\tthis.lineStyle(1, 0xFFFFFF, 0.5);\n\n\t\tconst x = x2 - x1;\n\t\tconst y = y2 - y1;\n\n\t\tlet hyp = Math.sqrt((x) * (x) + (y) * (y));\n\t\tconst units = hyp / (dashLength + spaceLength);\n\t\tconst dashSpaceRatio = dashLength / (dashLength + spaceLength);\n\t\t\n\t\tconst dashX = (x / units) * dashSpaceRatio;\n\t\tconst spaceX = (x / units) - dashX;\n\t\tconst dashY = (y / units) * dashSpaceRatio;\n\t\tconst spaceY = (y / units) - dashY;\n\t\t\n\t\tthis.moveTo(x1, y1);\n\n\t\twhile (hyp > 0) {\n\t\t\tx1 += dashX;\n\t\t\ty1 += dashY;\n\n\t\t\thyp -= dashLength;\n\t\t\t\n\t\t\tif (hyp < 0) {\n\t\t\t\tx1 = x2;\n\t\t\t\ty1 = y2;\n\t\t\t}\n\t\t\t\n\t\t\tthis.lineTo(x1, y1);\n\t\t\t\n\t\t\tx1 += spaceX;\n\t\t\ty1 += spaceY;\n\t\t\t\n\t\t\tthis.moveTo(x1, y1);\n\t\t\thyp -= spaceLength;\n\t\t}\n\n\t\tthis.moveTo(x2, y2);\n\t}\n\n\t/**\n\t * @param {number} progress A number from 0 to 1 to represent the progress.\n\t */\n\tpointAt(progress: number): Point {\n\t\treturn new Point(\n\t\t\tMaths.lerp(this.start.x, this.end.x, progress),\n\t\t\tMaths.lerp(this.start.y, this.end.y, progress)\n\t\t)\n\t}\n\n\tget distance(): number {\n\t\tconst a = Math.abs(this.start.x - this.end.x)\n\t\tconst b = Math.abs(this.start.y - this.end.y)\n\t\treturn Math.sqrt( a*a + b*b );\n\t}\n\n\tget angle(): number {\n\t\t// Add 90 to have the same direction\n\t\treturn Math.atan2(this.end.y - this.start.y, this.end.x - this.start.x) * 180 / Math.PI;\n\t}\n}\n"],"mappings":";;;;AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,SAAS;AAAC,IAErBC,UAAU;EAAA;EAAA;EAK9B,oBAAYC,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEC,EAAE,EAAqC;IAAA;IAAA,IAAnCC,UAAU,uEAAG,EAAE;IAAA,IAAEC,WAAW,uEAAG,EAAE;IAAA;IACpF;IAAO,MAJQC,KAAK;IAAA,MACLC,GAAG;IAKlB,MAAKD,KAAK,GAAG,IAAIR,KAAK,CAACE,EAAE,EAAEC,EAAE,CAAC;IAC9B,MAAKM,GAAG,GAAG,IAAIT,KAAK,CAACI,EAAE,EAAEC,EAAE,CAAC;IAE5B,MAAKK,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;IAEhC,IAAMC,CAAC,GAAGP,EAAE,GAAGF,EAAE;IACjB,IAAMU,CAAC,GAAGP,EAAE,GAAGF,EAAE;IAEjB,IAAIU,GAAG,GAAGC,IAAI,CAACC,IAAI,CAAEJ,CAAC,GAAKA,CAAE,GAAIC,CAAC,GAAKA,CAAE,CAAC;IAC1C,IAAMI,KAAK,GAAGH,GAAG,IAAIP,UAAU,GAAGC,WAAW,CAAC;IAC9C,IAAMU,cAAc,GAAGX,UAAU,IAAIA,UAAU,GAAGC,WAAW,CAAC;IAE9D,IAAMW,KAAK,GAAIP,CAAC,GAAGK,KAAK,GAAIC,cAAc;IAC1C,IAAME,MAAM,GAAIR,CAAC,GAAGK,KAAK,GAAIE,KAAK;IAClC,IAAME,KAAK,GAAIR,CAAC,GAAGI,KAAK,GAAIC,cAAc;IAC1C,IAAMI,MAAM,GAAIT,CAAC,GAAGI,KAAK,GAAII,KAAK;IAElC,MAAKE,MAAM,CAACpB,EAAE,EAAEC,EAAE,CAAC;IAEnB,OAAOU,GAAG,GAAG,CAAC,EAAE;MACfX,EAAE,IAAIgB,KAAK;MACXf,EAAE,IAAIiB,KAAK;MAEXP,GAAG,IAAIP,UAAU;MAEjB,IAAIO,GAAG,GAAG,CAAC,EAAE;QACZX,EAAE,GAAGE,EAAE;QACPD,EAAE,GAAGE,EAAE;MACR;MAEA,MAAKkB,MAAM,CAACrB,EAAE,EAAEC,EAAE,CAAC;MAEnBD,EAAE,IAAIiB,MAAM;MACZhB,EAAE,IAAIkB,MAAM;MAEZ,MAAKC,MAAM,CAACpB,EAAE,EAAEC,EAAE,CAAC;MACnBU,GAAG,IAAIN,WAAW;IACnB;IAEA,MAAKe,MAAM,CAAClB,EAAE,EAAEC,EAAE,CAAC;IAAC;EACrB;;EAEA;AACD;AACA;EAFC;IAAA;IAAA,OAGA,iBAAQmB,QAAgB,EAAS;MAChC,OAAO,IAAIxB,KAAK,CACfF,KAAK,CAAC2B,IAAI,CAAC,IAAI,CAACjB,KAAK,CAACG,CAAC,EAAE,IAAI,CAACF,GAAG,CAACE,CAAC,EAAEa,QAAQ,CAAC,EAC9C1B,KAAK,CAAC2B,IAAI,CAAC,IAAI,CAACjB,KAAK,CAACI,CAAC,EAAE,IAAI,CAACH,GAAG,CAACG,CAAC,EAAEY,QAAQ,CAAC,CAC9C;IACF;EAAC;IAAA;IAAA,KAED,eAAuB;MACtB,IAAME,CAAC,GAAGZ,IAAI,CAACa,GAAG,CAAC,IAAI,CAACnB,KAAK,CAACG,CAAC,GAAG,IAAI,CAACF,GAAG,CAACE,CAAC,CAAC;MAC7C,IAAMiB,CAAC,GAAGd,IAAI,CAACa,GAAG,CAAC,IAAI,CAACnB,KAAK,CAACI,CAAC,GAAG,IAAI,CAACH,GAAG,CAACG,CAAC,CAAC;MAC7C,OAAOE,IAAI,CAACC,IAAI,CAAEW,CAAC,GAACA,CAAC,GAAGE,CAAC,GAACA,CAAC,CAAE;IAC9B;EAAC;IAAA;IAAA,KAED,eAAoB;MACnB;MACA,OAAOd,IAAI,CAACe,KAAK,CAAC,IAAI,CAACpB,GAAG,CAACG,CAAC,GAAG,IAAI,CAACJ,KAAK,CAACI,CAAC,EAAE,IAAI,CAACH,GAAG,CAACE,CAAC,GAAG,IAAI,CAACH,KAAK,CAACG,CAAC,CAAC,GAAG,GAAG,GAAGG,IAAI,CAACgB,EAAE;IACxF;EAAC;EAAA;AAAA,EArEsC/B,QAAQ;AAAA,SAA3BE,UAAU"},"metadata":{},"sourceType":"module"}