{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringValue = exports.StringType = void 0;\nvar types_1 = require(\"./types\");\nvar StringType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(StringType, _types_1$PrimitiveTyp);\n  var _super = _createSuper(StringType);\n  function StringType() {\n    _classCallCheck(this, StringType);\n    return _super.call(this, \"utf-8 string\");\n  }\n  _createClass(StringType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return StringType.ClassName;\n    }\n  }]);\n  return StringType;\n}(types_1.PrimitiveType);\nexports.StringType = StringType;\nStringType.ClassName = \"StringType\";\nvar StringValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(StringValue, _types_1$PrimitiveVal);\n  var _super2 = _createSuper(StringValue);\n  function StringValue(value) {\n    var _this;\n    _classCallCheck(this, StringValue);\n    _this = _super2.call(this, new StringType());\n    _this.value = value;\n    return _this;\n  }\n  _createClass(StringValue, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return StringValue.ClassName;\n    }\n    /**\n     * Creates a StringValue from a utf-8 string.\n     */\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.value === other.value;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }], [{\n    key: \"fromUTF8\",\n    value: function fromUTF8(value) {\n      return new StringValue(value);\n    }\n    /**\n     * Creates a StringValue from a hex-encoded string.\n     */\n  }, {\n    key: \"fromHex\",\n    value: function fromHex(value) {\n      var decodedValue = Buffer.from(value, \"hex\").toString();\n      return new StringValue(decodedValue);\n    }\n  }]);\n  return StringValue;\n}(types_1.PrimitiveValue);\nexports.StringValue = StringValue;\nStringValue.ClassName = \"StringValue\";","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/string.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAAwD,IAE3C,UAAW;EAAA;EAAA;EAGpB,sBAAA;IAAA;IAAA,yBACU,cAAc;EACxB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,UAAU,CAAC,SAAS;IAC/B;EAAC;EAAA;AAAA,EAT2B,OAAA,CAAA,aAAa;AAA7C,OAAA,CAAA,UAAA,GAAA,UAAA;AACW,UAAA,CAAA,SAAS,GAAG,YAAY;AAAC,IAWvB,WAAY;EAAA;EAAA;EAIrB,qBAAY,KAAa,EAAA;IAAA;IAAA;IACrB,2BAAM,IAAI,UAAU,EAAE;IACtB,MAAK,KAAK,GAAG,KAAK;IAAC;EACvB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,WAAW,CAAC,SAAS;IAChC;IAEA;;AAEG;EAFH;IAAA;IAAA,OAeA,qBAAS;MACL,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC5B;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGA,gBAAO,KAAkB,EAAA;MACrB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK;IACrC;EAAC;IAAA;IAAA,OAED,mBAAO;MACH,OAAO,IAAI,CAAC,KAAK;IACrB;EAAC;IAAA;IAAA,OAzBD,kBAAgB,KAAa,EAAA;MACzB,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC;IACjC;IAEA;;AAEG;EAFH;IAAA;IAAA,OAGA,iBAAe,KAAa,EAAA;MACxB,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE;MACvD,OAAO,IAAI,WAAW,CAAC,YAAY,CAAC;IACxC;EAAC;EAAA;AAAA,EA1B4B,OAAA,CAAA,cAAc;AAA/C,OAAA,CAAA,WAAA,GAAA,WAAA;AACW,WAAA,CAAA,SAAS,GAAG,aAAa","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringValue = exports.StringType = void 0;\nconst types_1 = require(\"./types\");\nclass StringType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"utf-8 string\");\n    }\n    getClassName() {\n        return StringType.ClassName;\n    }\n}\nexports.StringType = StringType;\nStringType.ClassName = \"StringType\";\nclass StringValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new StringType());\n        this.value = value;\n    }\n    getClassName() {\n        return StringValue.ClassName;\n    }\n    /**\n     * Creates a StringValue from a utf-8 string.\n     */\n    static fromUTF8(value) {\n        return new StringValue(value);\n    }\n    /**\n     * Creates a StringValue from a hex-encoded string.\n     */\n    static fromHex(value) {\n        let decodedValue = Buffer.from(value, \"hex\").toString();\n        return new StringValue(decodedValue);\n    }\n    getLength() {\n        return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n    equals(other) {\n        return this.value === other.value;\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.StringValue = StringValue;\nStringValue.ClassName = \"StringValue\";\n//# sourceMappingURL=string.js.map"]},"metadata":{},"sourceType":"script"}