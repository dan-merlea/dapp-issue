{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _slicedToArray = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/dapp-issue/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayVecBinaryCodec = void 0;\nvar typesystem_1 = require(\"../typesystem\");\nvar ArrayVecBinaryCodec = /*#__PURE__*/function () {\n  function ArrayVecBinaryCodec(binaryCodec) {\n    _classCallCheck(this, ArrayVecBinaryCodec);\n    this.binaryCodec = binaryCodec;\n  }\n  _createClass(ArrayVecBinaryCodec, [{\n    key: \"decodeNested\",\n    value: function decodeNested(buffer, type) {\n      var arrayLength = type.length;\n      var typeParameter = type.getFirstTypeParameter();\n      var result = [];\n      var totalLength = 0;\n      for (var i = 0; i < arrayLength; i++) {\n        var _this$binaryCodec$dec = this.binaryCodec.decodeNested(buffer, typeParameter),\n          _this$binaryCodec$dec2 = _slicedToArray(_this$binaryCodec$dec, 2),\n          decoded = _this$binaryCodec$dec2[0],\n          decodedLength = _this$binaryCodec$dec2[1];\n        result.push(decoded);\n        totalLength += decodedLength;\n        buffer = buffer.slice(decodedLength);\n      }\n      return [new typesystem_1.ArrayVec(type, result), totalLength];\n    }\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer, type) {\n      var _this$decodeNested = this.decodeNested(buffer, type),\n        _this$decodeNested2 = _slicedToArray(_this$decodeNested, 2),\n        result = _this$decodeNested2[0],\n        _ = _this$decodeNested2[1];\n      return result;\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(array) {\n      var itemsBuffers = [];\n      var _iterator = _createForOfIteratorHelper(array.getItems()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var itemBuffer = this.binaryCodec.encodeNested(item);\n          itemsBuffers.push(itemBuffer);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return Buffer.concat(itemsBuffers);\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(array) {\n      return this.encodeNested(array);\n    }\n  }]);\n  return ArrayVecBinaryCodec;\n}();\nexports.ArrayVecBinaryCodec = ArrayVecBinaryCodec;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAAmE,IAGtDA,mBAAmB;EAG5B,6BAAYC,WAAwB;IAAA;IAChC,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;EAAC;IAAA;IAAA,OAED,sBAAaC,MAAc,EAAEC,IAAkB;MAC3C,IAAIC,WAAW,GAAGD,IAAI,CAACE,MAAM;MAC7B,IAAIC,aAAa,GAAGH,IAAI,CAACI,qBAAqB,EAAE;MAChD,IAAIC,MAAM,GAAiB,EAAE;MAC7B,IAAIC,WAAW,GAAG,CAAC;MAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,EAAEM,CAAC,EAAE,EAAE;QAClC,4BAA+B,IAAI,CAACT,WAAW,CAACU,YAAY,CAACT,MAAM,EAAEI,aAAa,CAAC;UAAA;UAA9EM,OAAO;UAAEC,aAAa;QAC3BL,MAAM,CAACM,IAAI,CAACF,OAAO,CAAC;QACpBH,WAAW,IAAII,aAAa;QAC5BX,MAAM,GAAGA,MAAM,CAACa,KAAK,CAACF,aAAa,CAAC;;MAGxC,OAAO,CAAC,IAAIG,qBAAQ,CAACb,IAAI,EAAEK,MAAM,CAAC,EAAEC,WAAW,CAAC;IACpD;EAAC;IAAA;IAAA,OAED,wBAAeP,MAAc,EAAEC,IAAkB;MAC7C,yBAAkB,IAAI,CAACQ,YAAY,CAACT,MAAM,EAAEC,IAAI,CAAC;QAAA;QAA5CK,MAAM;QAAES,CAAC;MACd,OAAOT,MAAM;IACjB;EAAC;IAAA;IAAA,OAED,sBAAaU,KAAe;MACxB,IAAIC,YAAY,GAAa,EAAE;MAAC,2CAEbD,KAAK,CAACE,QAAQ,EAAE;QAAA;MAAA;QAAnC,oDAAqC;UAAA,IAA1BC,IAAI;UACX,IAAIC,UAAU,GAAG,IAAI,CAACrB,WAAW,CAACsB,YAAY,CAACF,IAAI,CAAC;UACpDF,YAAY,CAACL,IAAI,CAACQ,UAAU,CAAC;;MAChC;QAAA;MAAA;QAAA;MAAA;MAED,OAAOE,MAAM,CAACC,MAAM,CAACN,YAAY,CAAC;IACtC;EAAC;IAAA;IAAA,OAED,wBAAeD,KAAe;MAC1B,OAAO,IAAI,CAACK,YAAY,CAACL,KAAK,CAAC;IACnC;EAAC;EAAA;AAAA;AAzCLQ","names":["ArrayVecBinaryCodec","binaryCodec","buffer","type","arrayLength","length","typeParameter","getFirstTypeParameter","result","totalLength","i","decodeNested","decoded","decodedLength","push","slice","typesystem_1","_","array","itemsBuffers","getItems","item","itemBuffer","encodeNested","Buffer","concat","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/arrayVec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}