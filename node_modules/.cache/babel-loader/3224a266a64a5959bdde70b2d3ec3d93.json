{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { a as o } from \"./chunk-J6WNAYE7.js\";\nimport { d as a } from \"./chunk-HSZIKABD.js\";\nimport { j as e, k as s, m as n } from \"./chunk-HBP5N4FR.js\";\nn();\nimport { SignableMessage as l, Address as m } from \"@elrondnetwork/erdjs\";\nfunction k(A) {\n  return e(this, arguments, /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var i, r, g, t, c, d;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = _ref.message, r = _ref.callbackRoute;\n            _context.next = 3;\n            return o();\n          case 3:\n            g = _context.sent;\n            t = a();\n            c = \"\".concat(window.location.origin).concat(r);\n            d = new l({\n              address: new m(g),\n              message: s.Buffer.from(i, \"ascii\")\n            });\n            _context.next = 9;\n            return t.signMessage(d, {\n              callbackUrl: encodeURIComponent(c)\n            });\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nexport { k as a };","map":null,"metadata":{},"sourceType":"module"}