{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BytesValue = exports.BytesType = void 0;\nvar types_1 = require(\"./types\");\nvar BytesType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(BytesType, _types_1$PrimitiveTyp);\n  var _super = _createSuper(BytesType);\n  function BytesType() {\n    _classCallCheck(this, BytesType);\n    return _super.call(this, \"bytes\");\n  }\n  _createClass(BytesType, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BytesType.ClassName;\n    }\n  }]);\n  return BytesType;\n}(types_1.PrimitiveType);\nexports.BytesType = BytesType;\nBytesType.ClassName = \"BytesType\";\nvar BytesValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(BytesValue, _types_1$PrimitiveVal);\n  var _super2 = _createSuper(BytesValue);\n  function BytesValue(value) {\n    var _this;\n    _classCallCheck(this, BytesValue);\n    _this = _super2.call(this, new BytesType());\n    _this.value = value;\n    return _this;\n  }\n  _createClass(BytesValue, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      return BytesValue.ClassName;\n    }\n    /**\n     * Creates a BytesValue from a utf-8 string.\n     */\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (this.getLength() != other.getLength()) {\n        return false;\n      }\n      return this.value.equals(other.value);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n  }], [{\n    key: \"fromUTF8\",\n    value: function fromUTF8(value) {\n      var buffer = Buffer.from(value, \"utf-8\");\n      return new BytesValue(buffer);\n    }\n    /**\n     * Creates a BytesValue from a hex-encoded string.\n     */\n  }, {\n    key: \"fromHex\",\n    value: function fromHex(value) {\n      var buffer = Buffer.from(value, \"hex\");\n      return new BytesValue(buffer);\n    }\n  }]);\n  return BytesValue;\n}(types_1.PrimitiveValue);\nexports.BytesValue = BytesValue;\nBytesValue.ClassName = \"BytesValue\";","map":null,"metadata":{},"sourceType":"script"}