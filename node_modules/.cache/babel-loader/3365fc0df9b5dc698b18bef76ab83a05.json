{"ast":null,"code":"import { a as i, b as t, c as d } from \"./chunk-UKY5NFOY.js\";\nimport { a as l, b as g, c as y } from \"./chunk-NPGLEYL5.js\";\nimport { k as s } from \"./chunk-P6M5SGWP.js\";\nimport { e as p, m as e } from \"./chunk-HBP5N4FR.js\";\nimport { createSlice as c } from \"@reduxjs/toolkit\";\nvar a,\n  L,\n  M,\n  P,\n  w,\n  W,\n  v,\n  E,\n  b,\n  R,\n  T = p(function () {\n    var _L$actions;\n    e();\n    d();\n    s();\n    y();\n    a = {\n      loginMethod: \"\",\n      walletConnectLogin: null,\n      ledgerLogin: null,\n      tokenLogin: null,\n      walletLogin: null,\n      extensionLogin: null,\n      isLoginSessionInvalid: !1\n    }, L = c({\n      name: \"loginInfoSlice\",\n      initialState: a,\n      reducers: {\n        setLoginMethod: function setLoginMethod(n, o) {\n          n.loginMethod = o.payload;\n        },\n        setTokenLogin: function setTokenLogin(n, o) {\n          n.tokenLogin = o.payload;\n        },\n        setTokenLoginSignature: function setTokenLoginSignature(n, o) {\n          (n == null ? void 0 : n.tokenLogin) != null && (n.tokenLogin.signature = o.payload);\n        },\n        setWalletLogin: function setWalletLogin(n, o) {\n          n.walletLogin = o.payload;\n        },\n        setWalletConnectLogin: function setWalletConnectLogin(n, o) {\n          n.walletConnectLogin = o.payload;\n        },\n        setLedgerLogin: function setLedgerLogin(n, o) {\n          n.ledgerLogin = o.payload;\n        },\n        invalidateLoginSession: function invalidateLoginSession(n) {\n          n.isLoginSessionInvalid = !0;\n        }\n      },\n      extraReducers: function extraReducers(n) {\n        n.addCase(l, function () {\n          return a;\n        }), n.addCase(g, function (o, r) {\n          o.loginMethod = r.payload.loginMethod, t(i());\n        });\n      }\n    }), (_L$actions = L.actions, M = _L$actions.setLoginMethod, P = _L$actions.setWalletConnectLogin, w = _L$actions.setLedgerLogin, W = _L$actions.setTokenLogin, v = _L$actions.setTokenLoginSignature, E = _L$actions.setWalletLogin, b = _L$actions.invalidateLoginSession), R = L.reducer;\n  });\nexport { L as a, M as b, P as c, w as d, W as e, v as f, E as g, b as h, R as i, T as j };","map":null,"metadata":{},"sourceType":"module"}