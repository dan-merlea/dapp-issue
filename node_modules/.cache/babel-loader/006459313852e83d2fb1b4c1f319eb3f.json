{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionFactory = void 0;\nvar tokenTransferBuilders_1 = require(\"./tokenTransferBuilders\");\nvar transaction_1 = require(\"./transaction\");\nvar address_1 = require(\"./address\");\nvar TransactionFactory = /*#__PURE__*/function () {\n  function TransactionFactory(gasEstimator) {\n    _classCallCheck(this, TransactionFactory);\n    this.gasEstimator = gasEstimator;\n  }\n  _createClass(TransactionFactory, [{\n    key: \"createEGLDTransfer\",\n    value: function createEGLDTransfer(args) {\n      var _a;\n      var dataLength = ((_a = args.data) === null || _a === void 0 ? void 0 : _a.length()) || 0;\n      var estimatedGasLimit = this.gasEstimator.forEGLDTransfer(dataLength);\n      return new transaction_1.Transaction({\n        nonce: args.nonce,\n        value: args.value,\n        receiver: args.receiver,\n        sender: args.sender || address_1.Address.Zero(),\n        gasPrice: args.gasPrice,\n        gasLimit: args.gasLimit || estimatedGasLimit,\n        data: args.data,\n        chainID: args.chainID\n      });\n    }\n  }, {\n    key: \"createESDTTransfer\",\n    value: function createESDTTransfer(args) {\n      var transactionPayload = new tokenTransferBuilders_1.ESDTTransferPayloadBuilder().setPayment(args.payment).build();\n      var dataLength = transactionPayload.length() || 0;\n      var estimatedGasLimit = this.gasEstimator.forESDTTransfer(dataLength);\n      return new transaction_1.Transaction({\n        nonce: args.nonce,\n        receiver: args.receiver,\n        sender: args.sender || address_1.Address.Zero(),\n        gasPrice: args.gasPrice,\n        gasLimit: args.gasLimit || estimatedGasLimit,\n        data: transactionPayload,\n        chainID: args.chainID\n      });\n    }\n  }, {\n    key: \"createESDTNFTTransfer\",\n    value: function createESDTNFTTransfer(args) {\n      var transactionPayload = new tokenTransferBuilders_1.ESDTNFTTransferPayloadBuilder().setPayment(args.payment).setDestination(args.destination).build();\n      var dataLength = transactionPayload.length() || 0;\n      var estimatedGasLimit = this.gasEstimator.forESDTNFTTransfer(dataLength);\n      return new transaction_1.Transaction({\n        nonce: args.nonce,\n        receiver: args.sender,\n        sender: args.sender,\n        gasPrice: args.gasPrice,\n        gasLimit: args.gasLimit || estimatedGasLimit,\n        data: transactionPayload,\n        chainID: args.chainID\n      });\n    }\n  }, {\n    key: \"createMultiESDTNFTTransfer\",\n    value: function createMultiESDTNFTTransfer(args) {\n      var transactionPayload = new tokenTransferBuilders_1.MultiESDTNFTTransferPayloadBuilder().setPayments(args.payments).setDestination(args.destination).build();\n      var dataLength = transactionPayload.length() || 0;\n      var estimatedGasLimit = this.gasEstimator.forMultiESDTNFTTransfer(dataLength, args.payments.length);\n      return new transaction_1.Transaction({\n        nonce: args.nonce,\n        receiver: args.sender,\n        sender: args.sender,\n        gasPrice: args.gasPrice,\n        gasLimit: args.gasLimit || estimatedGasLimit,\n        data: transactionPayload,\n        chainID: args.chainID\n      });\n    }\n  }]);\n  return TransactionFactory;\n}();\nexports.TransactionFactory = TransactionFactory;","map":null,"metadata":{},"sourceType":"script"}