{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as PIXI from 'pixi.js';\nimport { Viewport } from 'pixi-viewport';\nimport { Constants } from '@krogan/common';\nimport { HexController, MapController } from 'sprites/controllers';\nimport ObjectMap from 'storage/ObjectMap';\nimport { playerManager } from './PlayerManager';\nexport var MapZINDEX;\n(function (MapZINDEX) {\n  MapZINDEX[MapZINDEX[\"BACKGROUND\"] = 0] = \"BACKGROUND\";\n  MapZINDEX[MapZINDEX[\"MAP\"] = 1] = \"MAP\";\n  MapZINDEX[MapZINDEX[\"HEX\"] = 2] = \"HEX\";\n  MapZINDEX[MapZINDEX[\"HEX_HOVER\"] = 3] = \"HEX_HOVER\";\n  MapZINDEX[MapZINDEX[\"SINGLE_HEX\"] = 4] = \"SINGLE_HEX\";\n  MapZINDEX[MapZINDEX[\"GAME\"] = 5] = \"GAME\";\n})(MapZINDEX || (MapZINDEX = {}));\nexport var MapManager = /*#__PURE__*/function () {\n  // Application\n\n  // Controllers\n\n  // Game\n\n  // Player by address\n\n  // Event Handler\n\n  // Map data\n\n  // LIFECYCLE\n  function MapManager(app, map, eventHandler) {\n    var _this = this;\n    _classCallCheck(this, MapManager);\n    this.app = void 0;\n    this.mapView = void 0;\n    this.hexView = void 0;\n    this.hexController = void 0;\n    this.mapController = void 0;\n    this.roomName = void 0;\n    this.state = void 0;\n    this.playersMap = new ObjectMap();\n    this.eventHandler = void 0;\n    this.map = void 0;\n    this.app = app;\n    this.map = map;\n    this.eventHandler = eventHandler;\n\n    // Map View\n    this.mapView = new Viewport({\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      worldWidth: Constants.MAP_SIZE,\n      worldHeight: Constants.MAP_SIZE,\n      interaction: this.app.renderer.plugins.interaction\n    });\n    this.app.stage.addChild(this.mapView);\n    this.mapView.zIndex = MapZINDEX.MAP;\n    this.mapView.drag({\n      clampWheel: true\n    }).clamp({\n      direction: 'all',\n      underflow: 'center'\n    }).pinch().wheel({\n      smooth: 3\n    }).clampZoom({\n      minScale: 1,\n      maxScale: 1.5\n    });\n\n    // this.mapView.scaled = 2\n    this.mapView.zoomPercent(PIXI.utils.isMobile.any ? 0.25 : 1.0);\n    this.mapView.sortableChildren = true;\n\n    // Hex View\n    this.hexView = new Viewport({\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      worldWidth: window.innerWidth,\n      worldHeight: window.innerHeight,\n      interaction: this.app.renderer.plugins.interaction\n    });\n    this.app.stage.addChild(this.hexView);\n    this.hexView.zIndex = MapZINDEX.SINGLE_HEX;\n    this.hexView.sortableChildren = true;\n    this.hexView.visible = false;\n    this.hexView.drag({\n      clampWheel: true\n    }).clamp({\n      direction: 'all',\n      underflow: 'center'\n    }).pinch().wheel({\n      smooth: 3\n    }).clampZoom({\n      minScale: 1,\n      maxScale: 4\n    });\n    this.hexView.on('wheel', function () {\n      var _this$hexController;\n      (_this$hexController = _this.hexController) === null || _this$hexController === void 0 ? void 0 : _this$hexController.zoomLevelUpdate(_this.hexView.scaled);\n    });\n    console.log('Map initialized ðŸ¤©');\n  }\n  _createClass(MapManager, [{\n    key: \"start\",\n    value: function start() {\n      // Hex Container\n      this.hexController = new HexController(this.eventHandler);\n      this.hexView.addChild(this.hexController);\n\n      // Map\n      this.mapController = new MapController(this.map, this.eventHandler);\n      this.mapView.addChild(this.mapController);\n\n      // TODO: Use this for lerps\n      // this.app.ticker.add(this.update)\n\n      console.log('Map initialized ðŸ¤©');\n    }\n\n    // PRIVATE METHODS\n\n    // PUBLIC METHODS\n  }, {\n    key: \"hideAll\",\n    value: function hideAll() {\n      this.mapView.visible = false;\n      this.hexView.visible = false;\n    }\n  }, {\n    key: \"show\",\n    value: function show(zoom) {\n      if (zoom == MapZINDEX.HEX) {\n        this.hexView.visible = true;\n      } else {\n        this.mapView.visible = true;\n      }\n    }\n  }, {\n    key: \"exploreTile\",\n    value: function exploreTile(tile) {\n      this.mapView.visible = false;\n      this.hexView.visible = true;\n      if (this.hexController) this.hexController.tileContainer = tile;\n    }\n  }, {\n    key: \"returnToMap\",\n    value: function returnToMap() {\n      this.mapView.visible = true;\n      this.hexView.visible = false;\n      if (this.hexController) this.hexController.tileContainer = undefined;\n    }\n\n    // SETTERS\n  }, {\n    key: \"setScreenSize\",\n    value: function setScreenSize(screenWidth, screenHeight) {\n      this.mapView.resize(screenWidth, screenHeight, this.map.width, this.map.height);\n    }\n  }, {\n    key: \"setSelectedSpaceship\",\n    value: function setSelectedSpaceship(spaceship) {\n      var _this$mapController;\n      (_this$mapController = this.mapController) === null || _this$mapController === void 0 ? void 0 : _this$mapController.setSelectedSpaceship(spaceship);\n    }\n  }, {\n    key: \"setViewPortPosition\",\n    value: function setViewPortPosition(team) {\n      var _this$mapController2;\n      var tileContainer = (_this$mapController2 = this.mapController) === null || _this$mapController2 === void 0 ? void 0 : _this$mapController2.getBaseFor(team);\n      if (!tileContainer) return;\n      this.mapView.animate({\n        position: new PIXI.Point(tileContainer.x, tileContainer.y),\n        time: 0\n      });\n    }\n\n    // GETTERS & SETTERS\n  }, {\n    key: \"getStats\",\n    value: function getStats() {\n      var players = this.playersMap.getAll().map(function (item) {\n        return {\n          playerId: item.playerId,\n          username: item.username\n        };\n      });\n      return {\n        roomName: this.roomName || '',\n        playerName: playerManager.username(),\n        players: players,\n        playersCount: Object.keys(this.playersMap).length\n      };\n    }\n\n    //\n    // All methods below are called by Colyseus change listeners.\n    //\n\n    // COLYSEUS\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (this.state) return;\n      this.state = state;\n      this.state.map.onChange = this.handleGameChange.bind(this);\n      this.state.players.onAdd = this.handlePlayerAdd.bind(this);\n      this.state.players.onRemove = this.handlePlayerRemove.bind(this);\n      this.state.hexagons.onAdd = this.hexagonAdd.bind(this);\n      this.state.inTransit.onAdd = this.warpAdd.bind(this);\n    }\n\n    // COLYSEUS: Game\n  }, {\n    key: \"handleGameChange\",\n    value: function handleGameChange(attributes) {\n      console.log(attributes);\n      var _iterator = _createForOfIteratorHelper(attributes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n          this.gameUpdate(row.field, row.value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"gameUpdate\",\n    value: function gameUpdate(name, value) {\n      switch (name) {\n        case 'roomName':\n          this.roomName = value;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // COLYSEUS: Players\n  }, {\n    key: \"handlePlayerAdd\",\n    value: function handlePlayerAdd(player, playerId) {\n      var _this2 = this;\n      console.log(\"[Player][Add] \".concat(playerId));\n      var isMe = playerManager.isPlayerIdMe(playerId);\n      player.onChange = function () {\n        console.log('[Player][Update]');\n        console.log(_this2.state);\n        // this.handlePlayerUpdate(player, player.playerId)\n      };\n\n      this.playersMap.add(player.address, player);\n      if (isMe) {\n        playerManager.me = player;\n        this.setViewPortPosition(player.team);\n      }\n    }\n\n    // handlePlayerUpdate(player: Player, playerId: string) {}\n  }, {\n    key: \"handlePlayerRemove\",\n    value: function handlePlayerRemove(player, playerId) {\n      var isMe = playerManager.isPlayerIdMe(playerId);\n      this.playersMap.remove(player.address);\n      if (isMe) {\n        playerManager.me = undefined;\n      }\n    }\n\n    // COLYSEUS: Hexagons\n  }, {\n    key: \"hexagonAdd\",\n    value: function hexagonAdd(hexagon, coordinateKey) {\n      var _this$mapController3;\n      (_this$mapController3 = this.mapController) === null || _this$mapController3 === void 0 ? void 0 : _this$mapController3.setHexagonBinding(coordinateKey, hexagon);\n    }\n\n    // COLYSEUS: Warps\n  }, {\n    key: \"warpAdd\",\n    value: function warpAdd(spaceship, key) {\n      var _this$mapController4;\n      (_this$mapController4 = this.mapController) === null || _this$mapController4 === void 0 ? void 0 : _this$mapController4.createSpaceshipWarp(spaceship);\n    }\n  }]);\n  return MapManager;\n}();","map":{"version":3,"names":["PIXI","Viewport","Constants","HexController","MapController","ObjectMap","playerManager","MapZINDEX","MapManager","app","map","eventHandler","mapView","hexView","hexController","mapController","roomName","state","playersMap","screenWidth","window","innerWidth","screenHeight","innerHeight","worldWidth","MAP_SIZE","worldHeight","interaction","renderer","plugins","stage","addChild","zIndex","MAP","drag","clampWheel","clamp","direction","underflow","pinch","wheel","smooth","clampZoom","minScale","maxScale","zoomPercent","utils","isMobile","any","sortableChildren","SINGLE_HEX","visible","on","zoomLevelUpdate","scaled","console","log","zoom","HEX","tile","tileContainer","undefined","resize","width","height","spaceship","setSelectedSpaceship","team","getBaseFor","animate","position","Point","x","y","time","players","getAll","item","playerId","username","playerName","playersCount","Object","keys","length","onChange","handleGameChange","bind","onAdd","handlePlayerAdd","onRemove","handlePlayerRemove","hexagons","hexagonAdd","inTransit","warpAdd","attributes","row","gameUpdate","field","value","name","player","isMe","isPlayerIdMe","add","address","me","setViewPortPosition","remove","hexagon","coordinateKey","setHexagonBinding","key","createSpaceshipWarp"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/managers/MapManager.ts"],"sourcesContent":["import * as PIXI from 'pixi.js';\nimport { TileContainer } from '../sprites';\nimport { Viewport } from 'pixi-viewport';\nimport { Player } from '../state/Player';\nimport { Spaceship } from 'state/Spaceship';\nimport { EventHandler, Constants, Models, Entities } from '@krogan/common';\nimport { Hexagon } from 'state/Hexagon';\nimport { MapState } from 'state/MapState';\nimport { HexController, MapController } from 'sprites/controllers';\nimport ObjectMap from 'storage/ObjectMap';\nimport { playerManager } from './PlayerManager';\n\nexport enum MapZINDEX {\n    BACKGROUND,\n    MAP,\n\tHEX,\n\tHEX_HOVER,\n\tSINGLE_HEX,\n    GAME\n}\n\nexport class MapManager {\n\n    // Application\n    private app: PIXI.Application\n    private mapView: Viewport\n    private hexView: Viewport\n\n    // Controllers\n    private hexController?: HexController\n    private mapController?: MapController\n\n    // Game\n    private roomName?: string\n    private state?: MapState\n\n    // Player by address\n    private playersMap: ObjectMap<Player> = new ObjectMap()\n\n\t// Event Handler\n\tprivate eventHandler: EventHandler\n\n\t// Map data\n\tprivate map: Entities.Map\n\n    // LIFECYCLE\n    constructor(app: PIXI.Application, map: Entities.Map, eventHandler: EventHandler) {\n        this.app = app\n        this.map = map\n\t\tthis.eventHandler = eventHandler\n\n\t\t// Map View\n\t\tthis.mapView = new Viewport({\n            screenWidth: window.innerWidth,\n            screenHeight: window.innerHeight,\n            worldWidth: Constants.MAP_SIZE,\n            worldHeight: Constants.MAP_SIZE,\n            interaction: this.app.renderer.plugins.interaction\n        })\n        this.app.stage.addChild(this.mapView)\n\t\tthis.mapView.zIndex = MapZINDEX.MAP\n\n        this.mapView\n            .drag({ clampWheel: true })\n            .clamp({ direction: 'all', underflow: 'center' })\n            .pinch()\n            .wheel({ smooth: 3 })\n            .clampZoom({ minScale: 1, maxScale: 1.5 })\n\n        // this.mapView.scaled = 2\n        this.mapView.zoomPercent(PIXI.utils.isMobile.any ? 0.25 : 1.0)\n        this.mapView.sortableChildren = true\n\n\t\t// Hex View\n        this.hexView = new Viewport({\n            screenWidth: window.innerWidth,\n            screenHeight: window.innerHeight,\n            worldWidth: window.innerWidth,\n            worldHeight: window.innerHeight,\n            interaction: this.app.renderer.plugins.interaction\n        })\n        this.app.stage.addChild(this.hexView)\n\t\tthis.hexView.zIndex = MapZINDEX.SINGLE_HEX\n        this.hexView.sortableChildren = true\n        this.hexView.visible = false\n\n        this.hexView\n            .drag({ clampWheel: true })\n            .clamp({ direction: 'all', underflow: 'center' })\n            .pinch()\n            .wheel({ smooth: 3 })\n            .clampZoom({ minScale: 1, maxScale: 4 })\n        \n        this.hexView.on('wheel', () => {\n            this.hexController?.zoomLevelUpdate(this.hexView.scaled)\n        })\n\n        console.log('Map initialized ðŸ¤©')\n    }\n\n\tstart() {\n        // Hex Container\n        this.hexController = new HexController(this.eventHandler)\n        this.hexView.addChild(this.hexController)\n\n        // Map\n        this.mapController = new MapController(this.map, this.eventHandler)\n        this.mapView.addChild(this.mapController)\n\n\t\t// TODO: Use this for lerps\n\t\t// this.app.ticker.add(this.update)\n\n        console.log('Map initialized ðŸ¤©')\n\t}\n\n    // PRIVATE METHODS\n\n    // PUBLIC METHODS\n\n\thideAll() {\n\t\tthis.mapView.visible = false\n        this.hexView.visible = false\n\t}\n\n    show(zoom: MapZINDEX) {\n        if (zoom == MapZINDEX.HEX) {\n            this.hexView.visible = true\n        } else {\n            this.mapView.visible = true\n        }        \n    }\n\n    exploreTile(tile: TileContainer) {\n        this.mapView.visible = false\n        this.hexView.visible = true\n\n        if (this.hexController) this.hexController.tileContainer = tile\n    }\n\n    returnToMap() {\n\t\tthis.mapView.visible = true\n        this.hexView.visible = false\n\n        if (this.hexController) this.hexController.tileContainer = undefined\n    }\n\n    // SETTERS\n    setScreenSize(screenWidth: number, screenHeight: number) {\n        this.mapView.resize(screenWidth, screenHeight, this.map.width, this.map.height);\n    }\n\n    setSelectedSpaceship(spaceship: Spaceship) {\n        this.mapController?.setSelectedSpaceship(spaceship)\n    }\n\n    setViewPortPosition(team: string) {\n        const tileContainer = this.mapController?.getBaseFor(team)\n        if (!tileContainer) return\n        this.mapView.animate({\n            position: new PIXI.Point(tileContainer.x, tileContainer.y),\n            time: 0,\n        })\n    }\n\n    // GETTERS & SETTERS\n    getStats(): Models.StatsJSON {\n        const players: Models.MapPlayerJSON[] = this.playersMap.getAll().map((item) => ({\n            playerId: item.playerId,\n            username: item.username,\n        }));\n\n        return {\n            roomName: this.roomName || '',\n            playerName: playerManager.username(),\n            players,\n            playersCount: Object.keys(this.playersMap).length,\n        };\n    }\n\n    \n    //\n    // All methods below are called by Colyseus change listeners.\n    //\n\n    // COLYSEUS\n\n    setState(state: MapState) {\n\t\tif (this.state) return\n\n        this.state = state\n        this.state.map.onChange = this.handleGameChange.bind(this)\n\n\t\tthis.state.players.onAdd = this.handlePlayerAdd.bind(this)\n\t\tthis.state.players.onRemove = this.handlePlayerRemove.bind(this)\n\n\t\tthis.state.hexagons.onAdd = this.hexagonAdd.bind(this)\n        \n        this.state.inTransit.onAdd = this.warpAdd.bind(this)\n    }\n\n    // COLYSEUS: Game\n    \n    handleGameChange(attributes: any) {\n        console.log(attributes)\n        for (const row of attributes) {\n            this.gameUpdate(row.field, row.value)\n        }\n    }\n\n    gameUpdate(name: string, value: any) {\n        switch (name) {\n            case 'roomName':\n                this.roomName = value;\n                break;\n            default:\n                break;\n        }\n    }\n\n    // COLYSEUS: Players\n\n\thandlePlayerAdd(player: Player, playerId: string) {\n\t\tconsole.log(`[Player][Add] ${playerId}`)\n        const isMe = playerManager.isPlayerIdMe(playerId)\n        player.onChange = () => {\n            console.log('[Player][Update]')\n            console.log(this.state)\n            // this.handlePlayerUpdate(player, player.playerId)\n        }\n\n        this.playersMap.add(player.address, player)\n\t\tif (isMe) {\n\t\t\tplayerManager.me = player\n            this.setViewPortPosition(player.team)\n\t\t}\n    }\n\n    // handlePlayerUpdate(player: Player, playerId: string) {}\n\n    handlePlayerRemove(player: Player, playerId: string) {\n        const isMe = playerManager.isPlayerIdMe(playerId)\n\t\tthis.playersMap.remove(player.address)\n\t\tif (isMe) {\n\t\t\tplayerManager.me = undefined\n\t\t}\n    }\n\n    // COLYSEUS: Hexagons\n\n    hexagonAdd(hexagon: Hexagon, coordinateKey: string) {\n        this.mapController?.setHexagonBinding(coordinateKey, hexagon)\n    }\n\n    // COLYSEUS: Warps\n\n    warpAdd(spaceship: Spaceship, key: number) {\n        this.mapController?.createSpaceshipWarp(spaceship)\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}