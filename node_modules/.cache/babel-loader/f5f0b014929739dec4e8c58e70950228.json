{"ast":null,"code":"var _jsxFileName = \"/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/core/helpers/denominate/DenominateType.tsx\",\n  _this = this;\nimport React from 'react';\nimport { denominate } from './formatters';\nimport { TokenImage } from './PaymentView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Denominate = function Denominate(_ref) {\n  var _decimals;\n  var value = _ref.value,\n    _ref$token = _ref.token,\n    token = _ref$token === void 0 ? 'EGLD' : _ref$token,\n    _ref$denomination = _ref.denomination,\n    denomination = _ref$denomination === void 0 ? 18 : _ref$denomination,\n    _ref$showLastNonZeroD = _ref.showLastNonZeroDecimal,\n    showLastNonZeroDecimal = _ref$showLastNonZeroD === void 0 ? false : _ref$showLastNonZeroD,\n    _ref$showErd = _ref.showErd,\n    showErd = _ref$showErd === void 0 ? true : _ref$showErd,\n    decimals = _ref.decimals,\n    _ref$bold = _ref.bold,\n    bold = _ref$bold === void 0 ? false : _ref$bold;\n  decimals = (_decimals = decimals) !== null && _decimals !== void 0 ? _decimals : 3;\n  var denominatedValue = denominate({\n    input: value,\n    denomination: denomination,\n    decimals: decimals,\n    showLastNonZeroDecimal: showLastNonZeroDecimal\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    \"data-testid\": \"denominateComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: bold ? 'text--strong text--header' : '',\n      children: denominatedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, _this), showErd && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"symbol\",\n      children: [\"\\xA0\", TokenImage(token)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, _this);\n};\n_c = Denominate;\nvar _c;\n$RefreshReg$(_c, \"Denominate\");","map":{"version":3,"names":["React","denominate","TokenImage","Denominate","value","token","denomination","showLastNonZeroDecimal","showErd","decimals","bold","denominatedValue","input"],"sources":["/Users/merlea/Development/Crypto/Krogan/dapp-issue/src/core/helpers/denominate/DenominateType.tsx"],"sourcesContent":["import React from 'react';\nimport { denominate } from './formatters';\nimport { TokenImage } from './PaymentView';\n\nexport interface DenominateType {\n\tvalue: string;\n\ttoken?: string;\n\tdenomination?: number;\n\tshowLastNonZeroDecimal?: boolean;\n\tshowErd?: boolean;\n\tdecimals?: number;\n\tbold?: boolean;\n}\n\nexport const Denominate = ({\n\tvalue,\n\ttoken = 'EGLD',\n\tdenomination = 18,\n\tshowLastNonZeroDecimal = false,\n\tshowErd = true,\n\tdecimals,\n\tbold = false,\n}: DenominateType) => {\n\n\tdecimals = decimals ?? 3;\n\n\tconst denominatedValue = denominate({\n\t\tinput: value,\n\t\tdenomination,\n\t\tdecimals,\n\t\tshowLastNonZeroDecimal,\n\t});\n\n\treturn (\n\t\t<span data-testid=\"denominateComponent\">\n\t\t\t<span className={bold ? 'text--strong text--header' : ''}>{denominatedValue}</span>\n\t\t\t{showErd && <span className=\"symbol\">&nbsp;{TokenImage(token)}</span>}\n\t\t</span>\n\t);\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,UAAU,QAAQ,eAAe;AAAC;AAY3C,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAQD;EAAA;EAAA,IAPrBC,KAAK,QAALA,KAAK;IAAA,kBACLC,KAAK;IAALA,KAAK,2BAAG,MAAM;IAAA,yBACdC,YAAY;IAAZA,YAAY,kCAAG,EAAE;IAAA,6BACjBC,sBAAsB;IAAtBA,sBAAsB,sCAAG,KAAK;IAAA,oBAC9BC,OAAO;IAAPA,OAAO,6BAAG,IAAI;IACdC,QAAQ,QAARA,QAAQ;IAAA,iBACRC,IAAI;IAAJA,IAAI,0BAAG,KAAK;EAGZD,QAAQ,gBAAGA,QAAQ,iDAAI,CAAC;EAExB,IAAME,gBAAgB,GAAGV,UAAU,CAAC;IACnCW,KAAK,EAAER,KAAK;IACZE,YAAY,EAAZA,YAAY;IACZG,QAAQ,EAARA,QAAQ;IACRF,sBAAsB,EAAtBA;EACD,CAAC,CAAC;EAEF,oBACC;IAAM,eAAY,qBAAqB;IAAA,wBACtC;MAAM,SAAS,EAAEG,IAAI,GAAG,2BAA2B,GAAG,EAAG;MAAA,UAAEC;IAAgB;MAAA;MAAA;MAAA;IAAA,SAAQ,EAClFH,OAAO,iBAAI;MAAM,SAAS,EAAC,QAAQ;MAAA,mBAAQN,UAAU,CAACG,KAAK,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,SAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,SAC/D;AAET,CAAC;AAAC,KAzBWF,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}