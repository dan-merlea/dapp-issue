{"ast":null,"code":"function booleanArray(size) {\n  var array = new Array(size);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = false;\n  }\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return false;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([1, 0, 0, 1]);\n    case \"mat3\":\n      return new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    case \"mat4\":\n      return new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n  }\n  return null;\n}\nexport { defaultValue };","map":{"version":3,"sources":["../../../src/shader/utils/defaultValue.ts"],"names":[],"mappings":"AAAA,SAAA,YAAA,CAAsB,IACtB,EAAA;EACU,IAAA,KAAA,GAAQ,IAAI,KAAA,CAAM,IAAI,CAAA;EAE5B,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,MAAA,EAAQ,CAClC,EAAA,EAAA;IACI,KAAA,CAAM,CAAK,CAAA,GAAA,KAAA;EAAA;EAGR,OAAA,KAAA;AACX;AASO,SAAA,YAAA,CACH,IAAA,EACA,IAEJ,EAAA;EACY,QAAA,IAAA;IAEC,KAAA,OAAA;MACM,OAAA,CAAA;IAEN,KAAA,MAAA;MACM,OAAA,IAAI,YAAa,CAAA,CAAA,GAAI,IAAI,CAAA;IAE/B,KAAA,MAAA;MACM,OAAA,IAAI,YAAa,CAAA,CAAA,GAAI,IAAI,CAAA;IAE/B,KAAA,MAAA;MACM,OAAA,IAAI,YAAa,CAAA,CAAA,GAAI,IAAI,CAAA;IAE/B,KAAA,KAAA;IACA,KAAA,MAAA;IACA,KAAA,WAAA;IACA,KAAA,gBAAA;MACM,OAAA,CAAA;IAEN,KAAA,OAAA;MACM,OAAA,IAAI,UAAW,CAAA,CAAA,GAAI,IAAI,CAAA;IAE7B,KAAA,OAAA;MACM,OAAA,IAAI,UAAW,CAAA,CAAA,GAAI,IAAI,CAAA;IAE7B,KAAA,OAAA;MACM,OAAA,IAAI,UAAW,CAAA,CAAA,GAAI,IAAI,CAAA;IAE7B,KAAA,OAAA;MACM,OAAA,IAAI,WAAY,CAAA,CAAA,GAAI,IAAI,CAAA;IAE9B,KAAA,OAAA;MACM,OAAA,IAAI,WAAY,CAAA,CAAA,GAAI,IAAI,CAAA;IAE9B,KAAA,OAAA;MACM,OAAA,IAAI,WAAY,CAAA,CAAA,GAAI,IAAI,CAAA;IAE9B,KAAA,MAAA;MACM,OAAA,KAAA;IAEN,KAAA,OAAA;MAEM,OAAA,YAAA,CAAa,CAAA,GAAI,IAAI,CAAA;IAE3B,KAAA,OAAA;MACM,OAAA,YAAA,CAAa,CAAA,GAAI,IAAI,CAAA;IAE3B,KAAA,OAAA;MACM,OAAA,YAAA,CAAa,CAAA,GAAI,IAAI,CAAA;IAE3B,KAAA,MAAA;MACD,OAAO,IAAI,YAAa,CAAA,CAAC,CAAA,EAAG,CAAA,EACxB,CAAA,EAAG,CAAA,CAAE,CAAA;IAER,KAAA,MAAA;MACD,OAAO,IAAI,YAAa,CAAA,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAC3B,CAAA,EAAG,CAAA,EAAG,CAAA,EACN,CAAA,EAAG,CAAA,EAAG,CAAA,CAAE,CAAA;IAEX,KAAA,MAAA;MACD,OAAO,IAAI,YAAa,CAAA,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAC9B,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EACT,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAE,CAAA;EAAA;EAGhB,OAAA,IAAA;AACX","sourcesContent":["function booleanArray(size: number): Array<boolean>\n{\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++)\n    {\n        array[i] = false;\n    }\n\n    return array;\n}\n\n/**\n * @method defaultValue\n * @memberof PIXI.glCore.shader\n * @param {string} type - Type of value\n * @param {number} size\n * @private\n */\nexport function defaultValue(\n    type: string,\n    size: number\n): number | Float32Array | Int32Array | Uint32Array | boolean | boolean[]\n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'uint':\n        case 'sampler2D':\n        case 'sampler2DArray':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'uvec2':\n            return new Uint32Array(2 * size);\n\n        case 'uvec3':\n            return new Uint32Array(3 * size);\n\n        case 'uvec4':\n            return new Uint32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}