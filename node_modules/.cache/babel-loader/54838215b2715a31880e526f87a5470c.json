{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport Transport from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportOpenUserCancelled, TransportInterfaceNotAvailable, TransportWebUSBGestureRequired, DisconnectedDeviceDuringOperation, DisconnectedDevice } from \"@ledgerhq/errors\";\nimport { getLedgerDevices, getFirstLedgerDevice, requestLedgerDevice, isSupported } from \"./webusb\";\nvar configurationValue = 1;\nvar endpointNumber = 3;\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nvar TransportWebUSB = /** @class */function (_super) {\n  __extends(TransportWebUSB, _super);\n  function TransportWebUSB(device, interfaceNumber) {\n    var _this = _super.call(this) || this;\n    _this.channel = Math.floor(Math.random() * 0xffff);\n    _this.packetSize = 64;\n    _this._disconnectEmitted = false;\n    _this._emitDisconnect = function (e) {\n      if (_this._disconnectEmitted) return;\n      _this._disconnectEmitted = true;\n      _this.emit(\"disconnect\", e);\n    };\n    _this.device = device;\n    _this.interfaceNumber = interfaceNumber;\n    _this.deviceModel = identifyUSBProductId(device.productId);\n    return _this;\n  }\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  TransportWebUSB.request = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var device;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, requestLedgerDevice()];\n          case 1:\n            device = _a.sent();\n            return [2 /*return*/, TransportWebUSB.open(device)];\n        }\n      });\n    });\n  };\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  TransportWebUSB.openConnected = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, getLedgerDevices()];\n          case 1:\n            devices = _a.sent();\n            if (devices.length === 0) return [2 /*return*/, null];\n            return [2 /*return*/, TransportWebUSB.open(devices[0])];\n        }\n      });\n    });\n  };\n  /**\n   * Create a Ledger transport with a USBDevice\n   */\n  TransportWebUSB.open = function (device) {\n    return __awaiter(this, void 0, void 0, function () {\n      var iface, interfaceNumber, e_1, transport, _onDisconnect;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, device.open()];\n          case 1:\n            _a.sent();\n            if (!(device.configuration === null)) return [3 /*break*/, 3];\n            return [4 /*yield*/, device.selectConfiguration(configurationValue)];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            return [4 /*yield*/, gracefullyResetDevice(device)];\n          case 4:\n            _a.sent();\n            iface = device.configurations[0].interfaces.find(function (_a) {\n              var alternates = _a.alternates;\n              return alternates.some(function (a) {\n                return a.interfaceClass === 255;\n              });\n            });\n            if (!iface) {\n              throw new TransportInterfaceNotAvailable(\"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\");\n            }\n            interfaceNumber = iface.interfaceNumber;\n            _a.label = 5;\n          case 5:\n            _a.trys.push([5, 7,, 9]);\n            return [4 /*yield*/, device.claimInterface(interfaceNumber)];\n          case 6:\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 7:\n            e_1 = _a.sent();\n            return [4 /*yield*/, device.close()];\n          case 8:\n            _a.sent();\n            throw new TransportInterfaceNotAvailable(e_1.message);\n          case 9:\n            transport = new TransportWebUSB(device, interfaceNumber);\n            _onDisconnect = function onDisconnect(e) {\n              if (device === e.device) {\n                // $FlowFixMe\n                navigator.usb.removeEventListener(\"disconnect\", _onDisconnect);\n                transport._emitDisconnect(new DisconnectedDevice());\n              }\n            };\n            // $FlowFixMe\n            navigator.usb.addEventListener(\"disconnect\", _onDisconnect);\n            return [2 /*return*/, transport];\n        }\n      });\n    });\n  };\n  /**\n   * Release the transport device\n   */\n  TransportWebUSB.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.exchangeBusyPromise];\n          case 1:\n            _a.sent();\n            return [4 /*yield*/, this.device.releaseInterface(this.interfaceNumber)];\n          case 2:\n            _a.sent();\n            return [4 /*yield*/, gracefullyResetDevice(this.device)];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, this.device.close()];\n          case 4:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  TransportWebUSB.prototype.exchange = function (apdu) {\n    return __awaiter(this, void 0, void 0, function () {\n      var b;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.exchangeAtomicImpl(function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, channel, packetSize, framing, blocks, i, result, acc, r, buffer;\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _a = this, channel = _a.channel, packetSize = _a.packetSize;\n                      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                      framing = hidFraming(channel, packetSize);\n                      blocks = framing.makeBlocks(apdu);\n                      i = 0;\n                      _b.label = 1;\n                    case 1:\n                      if (!(i < blocks.length)) return [3 /*break*/, 4];\n                      return [4 /*yield*/, this.device.transferOut(endpointNumber, blocks[i])];\n                    case 2:\n                      _b.sent();\n                      _b.label = 3;\n                    case 3:\n                      i++;\n                      return [3 /*break*/, 1];\n                    case 4:\n                      if (!!(result = framing.getReducedResult(acc))) return [3 /*break*/, 6];\n                      return [4 /*yield*/, this.device.transferIn(endpointNumber, packetSize)];\n                    case 5:\n                      r = _b.sent();\n                      buffer = Buffer.from(r.data.buffer);\n                      acc = framing.reduceResponse(acc, buffer);\n                      return [3 /*break*/, 4];\n                    case 6:\n                      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                      return [2 /*return*/, result];\n                  }\n                });\n              });\n            })[\"catch\"](function (e) {\n              if (e && e.message && e.message.includes(\"disconnected\")) {\n                _this._emitDisconnect(e);\n                throw new DisconnectedDeviceDuringOperation(e.message);\n              }\n              throw e;\n            })];\n          case 1:\n            b = _a.sent();\n            return [2 /*return*/, b];\n        }\n      });\n    });\n  };\n  TransportWebUSB.prototype.setScrambleKey = function () {};\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  TransportWebUSB.isSupported = isSupported;\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  TransportWebUSB.list = getLedgerDevices;\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  TransportWebUSB.listen = function (observer) {\n    var unsubscribed = false;\n    getFirstLedgerDevice().then(function (device) {\n      if (!unsubscribed) {\n        var deviceModel = identifyUSBProductId(device.productId);\n        observer.next({\n          type: \"add\",\n          descriptor: device,\n          deviceModel: deviceModel\n        });\n        observer.complete();\n      }\n    }, function (error) {\n      if (window.DOMException && error instanceof window.DOMException && error.code === 18) {\n        observer.error(new TransportWebUSBGestureRequired(error.message));\n      } else {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    });\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return {\n      unsubscribe: unsubscribe\n    };\n  };\n  return TransportWebUSB;\n}(Transport);\nexport default TransportWebUSB;\nfunction gracefullyResetDevice(device) {\n  return __awaiter(this, void 0, void 0, function () {\n    var err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, device.reset()];\n        case 1:\n          _a.sent();\n          return [3 /*break*/, 3];\n        case 2:\n          err_1 = _a.sent();\n          console.warn(err_1);\n          return [3 /*break*/, 3];\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}