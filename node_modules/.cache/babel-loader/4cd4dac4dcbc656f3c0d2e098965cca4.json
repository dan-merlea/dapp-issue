{"ast":null,"code":"var MINUTE_IN_SECONDS = 60;\nvar HOUR_IN_SECONDS = 3600;\nvar DAY_IN_SECONDS = 86400;\nvar MONTH_IN_SECONDS = 2629800;\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nexport var getTimePeriods = function getTimePeriods(seconds) {\n  var delta = Math.abs(seconds);\n  var timeLeft = {\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS);\n    delta -= timeLeft.months * MONTH_IN_SECONDS;\n  }\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS);\n    delta -= timeLeft.days * DAY_IN_SECONDS;\n  }\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS);\n    delta -= timeLeft.hours * HOUR_IN_SECONDS;\n  }\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS);\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS;\n  }\n  timeLeft.seconds = Math.round(delta);\n  return timeLeft;\n};\nvar timeLeftToShortString = function timeLeftToShortString(seconds) {\n  var periods = getTimePeriods(seconds);\n  if (periods.months > 0) {\n    return \"\".concat(periods.months, \"M \").concat(periods.days, \"D\");\n  }\n  if (periods.days > 0) {\n    return \"\".concat(periods.days, \"D \").concat(periods.hours, \"H\");\n  }\n  if (periods.hours > 0) {\n    return \"\".concat(periods.hours, \"H \").concat(periods.minutes, \"m\");\n  }\n  if (periods.minutes > 0) {\n    return \"\".concat(periods.minutes, \"m \").concat(periods.seconds, \"s\");\n  }\n  return \"\".concat(periods.seconds, \"s\");\n};\nexport default timeLeftToShortString;","map":{"version":3,"names":["MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","months","days","hours","minutes","floor","round","timeLeftToShortString","periods"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/utils/time.ts"],"sourcesContent":["const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nexport const getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = Math.round(delta)\n\n  return timeLeft\n}\n\nconst timeLeftToShortString = (seconds: number) => {\n\tconst periods = getTimePeriods(seconds)\n\n\tif (periods.months > 0) {\n\t\treturn `${periods.months}M ${periods.days}D`\n\t}\n\tif (periods.days > 0) {\n\t\treturn `${periods.days}D ${periods.hours}H`\n\t}\n\tif (periods.hours > 0) {\n\t\treturn `${periods.hours}H ${periods.minutes}m`\n\t}\n\tif (periods.minutes > 0) {\n\t\treturn `${periods.minutes}m ${periods.seconds}s`\n\t}\n\treturn `${periods.seconds}s`\n}\n\nexport default timeLeftToShortString"],"mappings":"AAAA,IAAMA,iBAAiB,GAAG,EAAE;AAC5B,IAAMC,eAAe,GAAG,IAAI;AAC5B,IAAMC,cAAc,GAAG,KAAK;AAC5B,IAAMC,gBAAgB,GAAG,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,OAAe,EAAK;EACjD,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,CAAC;EAC7B,IAAMI,QAAQ,GAAG;IACfC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVR,OAAO,EAAE;EACX,CAAC;EAED,IAAIC,KAAK,IAAIH,gBAAgB,EAAE;IAC7BM,QAAQ,CAACC,MAAM,GAAGH,IAAI,CAACO,KAAK,CAACR,KAAK,GAAGH,gBAAgB,CAAC;IACtDG,KAAK,IAAIG,QAAQ,CAACC,MAAM,GAAGP,gBAAgB;EAC7C;EAEA,IAAIG,KAAK,IAAIJ,cAAc,EAAE;IAC3BO,QAAQ,CAACE,IAAI,GAAGJ,IAAI,CAACO,KAAK,CAACR,KAAK,GAAGJ,cAAc,CAAC;IAClDI,KAAK,IAAIG,QAAQ,CAACE,IAAI,GAAGT,cAAc;EACzC;EAEA,IAAII,KAAK,IAAIL,eAAe,EAAE;IAC5BQ,QAAQ,CAACG,KAAK,GAAGL,IAAI,CAACO,KAAK,CAACR,KAAK,GAAGL,eAAe,CAAC;IACpDK,KAAK,IAAIG,QAAQ,CAACG,KAAK,GAAGX,eAAe;EAC3C;EAEA,IAAIK,KAAK,IAAIN,iBAAiB,EAAE;IAC9BS,QAAQ,CAACI,OAAO,GAAGN,IAAI,CAACO,KAAK,CAACR,KAAK,GAAGN,iBAAiB,CAAC;IACxDM,KAAK,IAAIG,QAAQ,CAACI,OAAO,GAAGb,iBAAiB;EAC/C;EAEAS,QAAQ,CAACJ,OAAO,GAAGE,IAAI,CAACQ,KAAK,CAACT,KAAK,CAAC;EAEpC,OAAOG,QAAQ;AACjB,CAAC;AAED,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIX,OAAe,EAAK;EAClD,IAAMY,OAAO,GAAGb,cAAc,CAACC,OAAO,CAAC;EAEvC,IAAIY,OAAO,CAACP,MAAM,GAAG,CAAC,EAAE;IACvB,iBAAUO,OAAO,CAACP,MAAM,eAAKO,OAAO,CAACN,IAAI;EAC1C;EACA,IAAIM,OAAO,CAACN,IAAI,GAAG,CAAC,EAAE;IACrB,iBAAUM,OAAO,CAACN,IAAI,eAAKM,OAAO,CAACL,KAAK;EACzC;EACA,IAAIK,OAAO,CAACL,KAAK,GAAG,CAAC,EAAE;IACtB,iBAAUK,OAAO,CAACL,KAAK,eAAKK,OAAO,CAACJ,OAAO;EAC5C;EACA,IAAII,OAAO,CAACJ,OAAO,GAAG,CAAC,EAAE;IACxB,iBAAUI,OAAO,CAACJ,OAAO,eAAKI,OAAO,CAACZ,OAAO;EAC9C;EACA,iBAAUY,OAAO,CAACZ,OAAO;AAC1B,CAAC;AAED,eAAeW,qBAAqB"},"metadata":{},"sourceType":"module"}