{"ast":null,"code":"import _regeneratorRuntime from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Constants, Entities } from '@krogan/common';\nimport { Sprite } from 'pixi.js';\nimport { ClickableContainer } from 'sprites/containers';\nimport SpaceshipSprite from 'sprites/game/SpaceshipSprite';\nvar MapSpaceshipSprite = /*#__PURE__*/function (_ClickableContainer) {\n  _inherits(MapSpaceshipSprite, _ClickableContainer);\n  var _super = _createSuper(MapSpaceshipSprite);\n  /**\n  * MapSpaceshipSprite handles position update by itself\n  */\n  function MapSpaceshipSprite(hexWidth, spaceship, onClick) {\n    var _this;\n    _classCallCheck(this, MapSpaceshipSprite);\n    var onClickAction = onClick ? function (elm) {\n      onClick(elm);\n    } : undefined;\n    _this = _super.call(this, MapSpaceshipSprite.size / 2, undefined, onClickAction);\n    _this._spaceship = void 0;\n    _this._sprite = void 0;\n    _this._hexWidth = void 0;\n    _this._spaceship = spaceship;\n    _this._hexWidth = hexWidth;\n    _this.zIndex = 100;\n    _this.updatePosition();\n    _this.createSprite();\n    spaceship.onChange = function () {\n      console.log(\"[MapSpaceship][OnChange] nonce \".concat(spaceship.nonce));\n      _this.updatePosition();\n    };\n    return _this;\n  }\n  _createClass(MapSpaceshipSprite, [{\n    key: \"createSprite\",\n    value: function () {\n      var _createSprite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var texture;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return SpaceshipSprite.loadSpaceshipTexture(this.spaceship);\n              case 2:\n                texture = _context.sent;\n                this._sprite = new Sprite(texture);\n                this._sprite.anchor.x = 0.5;\n                this._sprite.anchor.y = 0.5;\n                this._sprite.angle = Constants.SPACESHIP_ROTATION;\n                this._sprite.width = MapSpaceshipSprite.size;\n                this._sprite.height = MapSpaceshipSprite.size;\n                this.addChild(this._sprite);\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function createSprite() {\n        return _createSprite.apply(this, arguments);\n      }\n      return createSprite;\n    }()\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      this.x = Entities.worldToHex(this.spaceship.position.x) * (this._hexWidth / 2);\n      this.y = Entities.worldToHex(this.spaceship.position.y) * (this._hexWidth / 2);\n      this.angle = this.spaceship.position.angle;\n    }\n  }, {\n    key: \"alignOnPath\",\n    value: function alignOnPath(position) {\n      this.x = position.position.x;\n      this.y = position.position.y;\n      this.angle = position.angle;\n    }\n  }, {\n    key: \"spaceship\",\n    get: function get() {\n      return this._spaceship;\n    }\n  }]);\n  return MapSpaceshipSprite;\n}(ClickableContainer);\nMapSpaceshipSprite.size = 64;\nexport { MapSpaceshipSprite as default };","map":{"version":3,"names":["Constants","Entities","Sprite","ClickableContainer","SpaceshipSprite","MapSpaceshipSprite","hexWidth","spaceship","onClick","onClickAction","elm","undefined","size","_spaceship","_sprite","_hexWidth","zIndex","updatePosition","createSprite","onChange","console","log","nonce","loadSpaceshipTexture","texture","anchor","x","y","angle","SPACESHIP_ROTATION","width","height","addChild","worldToHex","position"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/sprites/map/MapSpaceshipSprite.ts"],"sourcesContent":["import { Constants, Entities } from '@krogan/common';\nimport { Sprite } from 'pixi.js';\nimport { ClickableContainer } from 'sprites/containers';\nimport SpaceshipSprite from 'sprites/game/SpaceshipSprite';\nimport { Spaceship } from 'state/Spaceship';\nimport { PathPosition } from './MapPathContainer';\n\nexport default class MapSpaceshipSprite extends ClickableContainer {\n\n\tprivate _spaceship: Spaceship\n\tprivate _sprite?: Sprite\n\tprivate _hexWidth: number\n\n\tstatic size = 64\n\n    /**\n\t * MapSpaceshipSprite handles position update by itself\n\t */\n    constructor(hexWidth: number, spaceship: Spaceship, onClick?: (spaceship: MapSpaceshipSprite) => void) {\n\t\tconst onClickAction = onClick ? (elm) => {\n\t\t\tonClick(elm as MapSpaceshipSprite)\n\t\t} : undefined\n\t\tsuper(MapSpaceshipSprite.size / 2, undefined, onClickAction)\n\n\t\tthis._spaceship = spaceship\n\t\tthis._hexWidth = hexWidth\n\t\tthis.zIndex = 100\n\n\t\tthis.updatePosition()\n\t\tthis.createSprite()\n\n\t\tspaceship.onChange = () => { \n\t\t\tconsole.log(`[MapSpaceship][OnChange] nonce ${spaceship.nonce}`)\n\t\t\tthis.updatePosition() \n\t\t}\n    }\n\n\tasync createSprite() {\n\t\tconst texture = await SpaceshipSprite.loadSpaceshipTexture(this.spaceship)\n\n        this._sprite = new Sprite(texture)\n\t\tthis._sprite.anchor.x = 0.5\n\t\tthis._sprite.anchor.y = 0.5\n\t\tthis._sprite.angle = Constants.SPACESHIP_ROTATION\n\t\tthis._sprite.width = MapSpaceshipSprite.size\n\t\tthis._sprite.height = MapSpaceshipSprite.size\n\t\tthis.addChild(this._sprite)\n\t}\n\n\tupdatePosition() {\n\t\tthis.x = Entities.worldToHex(this.spaceship.position.x) * (this._hexWidth / 2)\n\t\tthis.y = Entities.worldToHex(this.spaceship.position.y) * (this._hexWidth / 2)\n\t\tthis.angle = this.spaceship.position.angle\n\t}\n\n\talignOnPath(position: PathPosition) {\n\t\tthis.x = position.position.x\n\t\tthis.y = position.position.y\n\t\tthis.angle = position.angle\n\t}\n\n\tget spaceship(): Spaceship {\n\t\treturn this._spaceship\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}