{"ast":null,"code":"import _slicedToArray from \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/gui/signup/SelectNfts.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport '@krogan/common/src/extensions';\nimport React, { useEffect, useState } from 'react';\nimport { NftCheckbox } from 'gui/nft';\nimport { Space, Button } from 'gui/uielements';\nimport { accountService } from 'services/account.service';\nimport { Constants } from '@krogan/common';\nimport { useCoreContext } from 'core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SelectNfts = function SelectNfts(_ref) {\n  _s();\n  var player = _ref.player,\n    selected = _ref.selected;\n  var _useCoreContext = useCoreContext(),\n    account = _useCoreContext.account,\n    address = _useCoreContext.address;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    nfts = _useState2[0],\n    setNfts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedNfts = _useState4[0],\n    setSelectedNfts = _useState4[1];\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    updateState = _React$useState2[1];\n  var forceUpdate = React.useCallback(function () {\n    return updateState({});\n  }, []);\n  var playerChanged = function playerChanged() {\n    if (player && account) {\n      accountService.fetchAccountNfts(address, Constants.KROGAN_MAIN).then(function (values) {\n        console.log(\"Account got \".concat(values.length, \" nfts\"));\n        setNfts(values);\n      });\n    }\n  };\n  useEffect(playerChanged, [player]);\n\n  // ACTIONS\n  var selectNft = function selectNft(nft) {\n    if (!nft.nonce) return;\n    var copy = selectedNfts;\n    if (copy.includes(nft.nonce)) {\n      copy.remove(nft.nonce);\n    } else {\n      copy.push(nft.nonce);\n    }\n    setSelectedNfts(copy);\n    forceUpdate();\n    console.log(selectedNfts);\n  };\n  var save = function save() {\n    selected(selectedNfts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [nfts.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You do not own any Krogan NFTs. To play this game, you can purchase or rent one on \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://elrondnftswap.com\",\n        children: \"our marketplace.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 99\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), nfts.map(function (nft, i) {\n      return /*#__PURE__*/_jsxDEV(NftCheckbox, {\n        nft: nft,\n        selected: selectedNfts.includes(nft.nonce),\n        onClick: selectNft\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Space, {\n      size: \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Save\",\n      onClick: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n_s(SelectNfts, \"Qc+1F1iPj58tsgZjQ5vutvNp7u4=\", false, function () {\n  return [useCoreContext];\n});\n_c = SelectNfts;\nvar _c;\n$RefreshReg$(_c, \"SelectNfts\");","map":{"version":3,"names":["React","useEffect","useState","NftCheckbox","Space","Button","accountService","Constants","useCoreContext","SelectNfts","player","selected","account","address","nfts","setNfts","selectedNfts","setSelectedNfts","updateState","forceUpdate","useCallback","playerChanged","fetchAccountNfts","KROGAN_MAIN","then","values","console","log","length","selectNft","nft","nonce","copy","includes","remove","push","save","map","i"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/gui/signup/SelectNfts.tsx"],"sourcesContent":["import '@krogan/common/src/extensions'\nimport React, { useEffect, useState } from 'react';\nimport { NftCheckbox } from 'gui/nft';\nimport { Space, Button } from 'gui/uielements';\nimport { accountService } from 'services/account.service';\nimport { Player } from 'state/Player';\nimport { Types, Constants } from '@krogan/common';\nimport { useCoreContext } from 'core';\n\n\ninterface SelectNftsProps {\n\tplayer: Player,\n\tselected: (nonces: number[]) => void\n}\n\nexport const SelectNfts = ({\n\tplayer,\n\tselected\n}: SelectNftsProps): React.ReactElement => {\n\t\n\tconst { account, address } = useCoreContext()\n\n\tconst [nfts, setNfts] = useState([] as Types.ESDTToken[])\n    const [selectedNfts, setSelectedNfts] = useState([] as number[])\n\n\tconst [, updateState] = React.useState<Record<string, unknown>>();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tconst playerChanged = () => {\n        if (player && account) {\n            accountService.fetchAccountNfts(address, Constants.KROGAN_MAIN)\n                .then(values => {\n                    console.log(`Account got ${values.length} nfts`)\n                    setNfts(values)\n                })\n        }\n    }\n    useEffect(playerChanged, [player])\n\n    // ACTIONS\n    const selectNft = (nft: Types.ESDTToken) => {\n        if (!nft.nonce) return\n        const copy = selectedNfts\n        if (copy.includes(nft.nonce)) {\n            copy.remove(nft.nonce)\n        } else {\n            copy.push(nft.nonce)\n        }\n        setSelectedNfts(copy)\n        forceUpdate()\n        console.log(selectedNfts)\n    }\n\n\tconst save = () => {\n\t\tselected(selectedNfts)\n\t}\n\n\treturn (\n\t\t<>\n        {nfts.length == 0 && \n            <p>You do not own any Krogan NFTs. To play this game, you can purchase or rent one on <a href=\"https://elrondnftswap.com\">our marketplace.</a></p>\n        }\n\t\t{nfts.map((nft, i) => (\n\t\t\t<NftCheckbox key={i} nft={nft} selected={selectedNfts.includes(nft.nonce!)} onClick={selectNft} />\n\t\t))}\n\t\t<Space size=\"s\" />\n\t\t<Button text=\"Save\" onClick={save} />\n\t\t</>\n\t)\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}