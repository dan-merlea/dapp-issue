{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar constants = require('@pixi/constants');\nvar GLFramebuffer = /*#__PURE__*/_createClass(function GLFramebuffer(framebuffer) {\n  _classCallCheck(this, GLFramebuffer);\n  this.framebuffer = framebuffer;\n  this.stencil = null;\n  this.dirtyId = -1;\n  this.dirtyFormat = -1;\n  this.dirtySize = -1;\n  this.multisample = constants.MSAA_QUALITY.NONE;\n  this.msaaBuffer = null;\n  this.blitFramebuffer = null;\n  this.mipLevel = 0;\n});\nexports.GLFramebuffer = GLFramebuffer;","map":{"version":3,"sources":["../../src/framebuffer/GLFramebuffer.ts"],"names":["MSAA_QUALITY"],"mappings":";;;;;;;;IAQa,aACb,6BA+BI,uBAAY,WACZ,EAAA;EAAA;EACI,IAAA,CAAK,WAAc,GAAA,WAAA;EACnB,IAAA,CAAK,OAAU,GAAA,IAAA;EACf,IAAA,CAAK,OAAU,GAAA,CAAA,CAAA;EACf,IAAA,CAAK,WAAc,GAAA,CAAA,CAAA;EACnB,IAAA,CAAK,SAAY,GAAA,CAAA,CAAA;EACjB,IAAA,CAAK,WAAA,GAAcA,SAAAA,CAAAA,YAAa,CAAA,IAAA;EAChC,IAAA,CAAK,UAAa,GAAA,IAAA;EAClB,IAAA,CAAK,eAAkB,GAAA,IAAA;EACvB,IAAA,CAAK,QAAW,GAAA,CAAA;AAAA,CACpB","sourcesContent":["import { MSAA_QUALITY } from '@pixi/constants';\n\nimport type { Framebuffer } from './Framebuffer';\n\n/**\n * Internal framebuffer for WebGL context.\n * @memberof PIXI\n */\nexport class GLFramebuffer\n{\n    /** The WebGL framebuffer. */\n    public framebuffer: WebGLFramebuffer;\n\n    /** Stencil+depth , usually costs 32bits per pixel. */\n    public stencil: WebGLRenderbuffer;\n\n    /** Detected AA samples number. */\n    public multisample: MSAA_QUALITY;\n\n    /** In case MSAA, we use this Renderbuffer instead of colorTextures[0] when we write info. */\n    public msaaBuffer: WebGLRenderbuffer;\n\n    /**\n     * In case we use MSAA, this is actual framebuffer that has colorTextures[0]\n     * The contents of that framebuffer are read when we use that renderTexture in sprites\n     */\n    public blitFramebuffer: Framebuffer;\n\n    /** Latest known version of framebuffer. */\n    dirtyId: number;\n\n    /** Latest known version of framebuffer format. */\n    dirtyFormat: number;\n\n    /** Latest known version of framebuffer size. */\n    dirtySize: number;\n\n    /** Store the current mipmap of the textures the framebuffer will write too. */\n    mipLevel: number;\n\n    constructor(framebuffer: WebGLTexture)\n    {\n        this.framebuffer = framebuffer;\n        this.stencil = null;\n        this.dirtyId = -1;\n        this.dirtyFormat = -1;\n        this.dirtySize = -1;\n        this.multisample = MSAA_QUALITY.NONE;\n        this.msaaBuffer = null;\n        this.blitFramebuffer = null;\n        this.mipLevel = 0;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}