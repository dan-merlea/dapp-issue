{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRoomContext } from 'context/room';\nimport React from 'react';\nexport function useContextRef() {\n  _s();\n  var state = useRoomContext();\n  var ref = React.useRef(state);\n  React.useEffect(function () {\n    ref.current = state;\n  }, [state]);\n  return [state, ref];\n}\n_s(useContextRef, \"EwVABDz+00K62VyAzR6hpnG5DD0=\", false, function () {\n  return [useRoomContext];\n});","map":{"version":3,"names":["useRoomContext","React","useContextRef","state","ref","useRef","useEffect","current"],"sources":["/Users/merlea/Development/Crypto/Krogan/kroganverse-com/packages/client/src/hooks/useContextRef.tsx"],"sourcesContent":["import { useRoomContext } from 'context/room';\nimport { StateType } from 'context/room/room.state';\nimport React from 'react';\n\nexport function useContextRef(): [StateType, React.RefObject<StateType>] {\n\tconst state = useRoomContext()\n\tconst ref = React.useRef(state)\n  \n\tReact.useEffect(() => {\n\t\tref.current = state\n\t}, [state])\n  \n\treturn [state, ref]\n}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,cAAc;AAE7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,aAAa,GAA4C;EAAA;EACxE,IAAMC,KAAK,GAAGH,cAAc,EAAE;EAC9B,IAAMI,GAAG,GAAGH,KAAK,CAACI,MAAM,CAACF,KAAK,CAAC;EAE/BF,KAAK,CAACK,SAAS,CAAC,YAAM;IACrBF,GAAG,CAACG,OAAO,GAAGJ,KAAK;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAO,CAACA,KAAK,EAAEC,GAAG,CAAC;AACpB;AAAC,GATeF,aAAa;EAAA,QACdF,cAAc;AAAA"},"metadata":{},"sourceType":"module"}