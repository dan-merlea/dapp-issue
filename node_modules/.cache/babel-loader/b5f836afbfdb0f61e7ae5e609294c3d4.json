{"ast":null,"code":"import { a as g } from \"./chunk-DWONPSD7.js\";\nimport { a as c } from \"./chunk-QFTWB3KE.js\";\nimport { c as i, d as s, r as o, s as P } from \"./chunk-HEFMRSX3.js\";\nimport { m as n } from \"./chunk-HBP5N4FR.js\";\nn();\nP();\nimport { Transaction as G, TransactionPayload as F, TransactionVersion as L, Address as m } from \"@elrondnetwork/erdjs\";\nimport { TokenPayment as T } from \"@elrondnetwork/erdjs\";\nimport { NetworkConfig as x } from \"@elrondnetwork/erdjs-network-providers\";\nvar d = {\n  from: \"erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa\",\n  to: \"erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa\"\n};\nfunction B(_ref) {\n  var _ref$minGasLimit = _ref.minGasLimit,\n    t = _ref$minGasLimit === void 0 ? String(i) : _ref$minGasLimit,\n    r = _ref.gasLimit,\n    a = _ref.gasPrice,\n    f = _ref.data,\n    l = _ref.gasPerDataByte,\n    k = _ref.gasPriceModifier,\n    _ref$defaultGasPrice = _ref.defaultGasPrice,\n    p = _ref$defaultGasPrice === void 0 ? String(s) : _ref$defaultGasPrice,\n    u = _ref.chainId;\n  var I = f || \"\",\n    v = c(r) ? r : t,\n    y = g(a) ? a : p,\n    h = new G({\n      nonce: 0,\n      value: T.egldFromAmount(\"0\"),\n      receiver: new m(d.to),\n      sender: new m(d.to),\n      gasPrice: parseInt(y),\n      gasLimit: parseInt(v),\n      data: new F(I.trim()),\n      chainID: u,\n      version: new L(1)\n    }),\n    e = new x();\n  e.MinGasLimit = parseInt(t), e.GasPerDataByte = parseInt(l), e.GasPriceModifier = parseFloat(k);\n  try {\n    return h.computeFee(e).toString(10);\n  } catch (w) {\n    return o;\n  }\n}\nexport { B as a };","map":null,"metadata":{},"sourceType":"module"}