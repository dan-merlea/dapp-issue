{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar MeshBatchUvs = /*#__PURE__*/function () {\n  function MeshBatchUvs(uvBuffer, uvMatrix) {\n    _classCallCheck(this, MeshBatchUvs);\n    this.uvBuffer = uvBuffer;\n    this.uvMatrix = uvMatrix;\n    this.data = null;\n    this._bufferUpdateId = -1;\n    this._textureUpdateId = -1;\n    this._updateID = 0;\n  }\n  _createClass(MeshBatchUvs, [{\n    key: \"update\",\n    value: function update(forceUpdate) {\n      if (!forceUpdate && this._bufferUpdateId === this.uvBuffer._updateID && this._textureUpdateId === this.uvMatrix._updateID) {\n        return;\n      }\n      this._bufferUpdateId = this.uvBuffer._updateID;\n      this._textureUpdateId = this.uvMatrix._updateID;\n      var data = this.uvBuffer.data;\n      if (!this.data || this.data.length !== data.length) {\n        this.data = new Float32Array(data.length);\n      }\n      this.uvMatrix.multiplyUvs(data, this.data);\n      this._updateID++;\n    }\n  }]);\n  return MeshBatchUvs;\n}();\nexports.MeshBatchUvs = MeshBatchUvs;","map":{"version":3,"sources":["../src/MeshBatchUvs.ts"],"names":[],"mappings":";;;;;;;IAMa,YACb;EAoBI,sBAAY,QAAA,EAAkB,QAC9B,EAAA;IAAA;IACI,IAAA,CAAK,QAAW,GAAA,QAAA;IAChB,IAAA,CAAK,QAAW,GAAA,QAAA;IAChB,IAAA,CAAK,IAAO,GAAA,IAAA;IAEZ,IAAA,CAAK,eAAkB,GAAA,CAAA,CAAA;IACvB,IAAA,CAAK,gBAAmB,GAAA,CAAA,CAAA;IACxB,IAAA,CAAK,SAAY,GAAA,CAAA;EAAA;EACrB;IAAA;IAAA,OAMO,gBAAO,WACd,EAAA;MACQ,IAAA,CAAC,WACE,IAAA,IAAA,CAAK,eAAoB,KAAA,IAAA,CAAK,QAAS,CAAA,SAAA,IACvC,IAAK,CAAA,gBAAA,KAAqB,IAAK,CAAA,QAAA,CAAS,SAE/C,EAAA;QACI;MAAA;MAGC,IAAA,CAAA,eAAA,GAAkB,IAAA,CAAK,QAAS,CAAA,SAAA;MAChC,IAAA,CAAA,gBAAA,GAAmB,IAAA,CAAK,QAAS,CAAA,SAAA;MAEhC,IAAA,IAAA,GAAO,IAAA,CAAK,QAAS,CAAA,IAAA;MAE3B,IAAI,CAAC,IAAK,CAAA,IAAA,IAAQ,IAAA,CAAK,IAAK,CAAA,MAAA,KAAW,IAAA,CAAK,MAC5C,EAAA;QACK,IAAK,CAAA,IAAA,GAAe,IAAI,YAAA,CAAa,IAAA,CAAK,MAAM,CAAA;MAAA;MAGrD,IAAA,CAAK,QAAS,CAAA,WAAA,CAAY,IAAM,EAAA,IAAA,CAAK,IAAI,CAAA;MAEpC,IAAA,CAAA,SAAA,EAAA;IAAA;EACT;EAAA;AAAA","sourcesContent":["import type { TextureMatrix, Buffer } from '@pixi/core';\n\n/**\n * Class controls cache for UV mapping from Texture normal space to BaseTexture normal space.\n * @memberof PIXI\n */\nexport class MeshBatchUvs\n{\n    /** UV Buffer data. */\n    public readonly data: Float32Array;\n\n    /** Buffer with normalized UV's. */\n    public uvBuffer: Buffer;\n\n    /** Material UV matrix. */\n    public uvMatrix: TextureMatrix;\n\n    private _bufferUpdateId: number;\n    private _textureUpdateId: number;\n\n    // Internal-only properties\n    _updateID: number;\n\n    /**\n     * @param uvBuffer - Buffer with normalized uv's\n     * @param uvMatrix - Material UV matrix\n     */\n    constructor(uvBuffer: Buffer, uvMatrix: TextureMatrix)\n    {\n        this.uvBuffer = uvBuffer;\n        this.uvMatrix = uvMatrix;\n        this.data = null;\n\n        this._bufferUpdateId = -1;\n        this._textureUpdateId = -1;\n        this._updateID = 0;\n    }\n\n    /**\n     * Updates\n     * @param forceUpdate - force the update\n     */\n    public update(forceUpdate?: boolean): void\n    {\n        if (!forceUpdate\n            && this._bufferUpdateId === this.uvBuffer._updateID\n            && this._textureUpdateId === this.uvMatrix._updateID\n        )\n        {\n            return;\n        }\n\n        this._bufferUpdateId = this.uvBuffer._updateID;\n        this._textureUpdateId = this.uvMatrix._updateID;\n\n        const data = this.uvBuffer.data as Float32Array;\n\n        if (!this.data || this.data.length !== data.length)\n        {\n            (this.data as any) = new Float32Array(data.length);\n        }\n\n        this.uvMatrix.multiplyUvs(data, this.data);\n\n        this._updateID++;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}