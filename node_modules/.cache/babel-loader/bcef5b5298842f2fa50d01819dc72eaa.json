{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReturnCode = void 0;\n/**\n * Also see: https://github.com/ElrondNetwork/elrond-vm-common/blob/master/returnCodes.go\n */\nvar ReturnCode = /*#__PURE__*/function () {\n  function ReturnCode(text) {\n    _classCallCheck(this, ReturnCode);\n    this.text = text;\n  }\n  _createClass(ReturnCode, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.text;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.text;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.text == other.text;\n    }\n  }, {\n    key: \"isSuccess\",\n    value: function isSuccess() {\n      return this.equals(ReturnCode.Ok) || this.equals(ReturnCode.None);\n    }\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      var text = buffer.toString();\n      return new ReturnCode(text);\n    }\n  }]);\n  return ReturnCode;\n}();\nexports.ReturnCode = ReturnCode;\nReturnCode.None = new ReturnCode(\"\");\nReturnCode.Ok = new ReturnCode(\"ok\");\nReturnCode.FunctionNotFound = new ReturnCode(\"function not found\");\nReturnCode.FunctionWrongSignature = new ReturnCode(\"wrong signature for function\");\nReturnCode.ContractNotFound = new ReturnCode(\"contract not found\");\nReturnCode.UserError = new ReturnCode(\"user error\");\nReturnCode.OutOfGas = new ReturnCode(\"out of gas\");\nReturnCode.AccountCollision = new ReturnCode(\"account collision\");\nReturnCode.OutOfFunds = new ReturnCode(\"out of funds\");\nReturnCode.CallStackOverFlow = new ReturnCode(\"call stack overflow\");\nReturnCode.ContractInvalid = new ReturnCode(\"contract invalid\");\nReturnCode.ExecutionFailed = new ReturnCode(\"execution failed\");\nReturnCode.Unknown = new ReturnCode(\"unknown\");","map":null,"metadata":{},"sourceType":"script"}