{"ast":null,"code":"var ProgramCache = {};\nvar TextureCache = /* @__PURE__ */Object.create(null);\nvar BaseTextureCache = /* @__PURE__ */Object.create(null);\nfunction destroyTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    TextureCache[key].destroy();\n  }\n  for (key in BaseTextureCache) {\n    BaseTextureCache[key].destroy();\n  }\n}\nfunction clearTextureCache() {\n  var key;\n  for (key in TextureCache) {\n    delete TextureCache[key];\n  }\n  for (key in BaseTextureCache) {\n    delete BaseTextureCache[key];\n  }\n}\nexport { BaseTextureCache, ProgramCache, TextureCache, clearTextureCache, destroyTextureCache };","map":{"version":3,"sources":["../../src/media/caches.ts"],"names":[],"mappings":"AASO,IAAM,YAAA,GAAyC,CAAA,CAAA;AASzC,IAAA,YAAA,GAAA,eAAgD,MAAA,CAAA,MAAA,CAAO,IAAI,CAAA;AAS3D,IAAA,gBAAA,GAAA,eAAwD,MAAA,CAAA,MAAA,CAAO,IAAI,CAAA;AAQhF,SAAA,mBAAA,GAAA;EACQ,IAAA,GAAA;EAEJ,KAAK,GAAA,IAAO,YACZ,EAAA;IACI,YAAA,CAAa,GAAA,CAAA,CAAK,OAAQ,EAAA;EAAA;EAE9B,KAAK,GAAA,IAAO,gBACZ,EAAA;IACI,gBAAA,CAAiB,GAAA,CAAA,CAAK,OAAQ,EAAA;EAAA;AAEtC;AAQA,SAAA,iBAAA,GAAA;EACQ,IAAA,GAAA;EAEJ,KAAK,GAAA,IAAO,YACZ,EAAA;IACI,OAAO,YAAa,CAAA,GAAA,CAAA;EAAA;EAExB,KAAK,GAAA,IAAO,gBACZ,EAAA;IACI,OAAO,gBAAiB,CAAA,GAAA,CAAA;EAAA;AAEhC","sourcesContent":["import type { Program, Texture, BaseTexture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {object}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}