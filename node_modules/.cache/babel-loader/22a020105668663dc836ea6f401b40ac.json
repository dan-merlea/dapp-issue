{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/merlea/Development/Crypto/Krogan/kroganverse-com/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NonFungibleTokenOfAccountOnNetwork = exports.FungibleTokenOfAccountOnNetwork = void 0;\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar primitives_1 = require(\"./primitives\");\nvar FungibleTokenOfAccountOnNetwork = /*#__PURE__*/function () {\n  function FungibleTokenOfAccountOnNetwork() {\n    _classCallCheck(this, FungibleTokenOfAccountOnNetwork);\n    this.identifier = \"\";\n    this.balance = new bignumber_js_1.BigNumber(0);\n  }\n  _createClass(FungibleTokenOfAccountOnNetwork, null, [{\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(payload) {\n      var result = new FungibleTokenOfAccountOnNetwork();\n      result.identifier = payload.tokenIdentifier || payload.identifier || \"\";\n      result.balance = new bignumber_js_1.BigNumber(payload.balance || 0);\n      return result;\n    }\n  }]);\n  return FungibleTokenOfAccountOnNetwork;\n}();\nexports.FungibleTokenOfAccountOnNetwork = FungibleTokenOfAccountOnNetwork;\nvar NonFungibleTokenOfAccountOnNetwork = /*#__PURE__*/function () {\n  function NonFungibleTokenOfAccountOnNetwork(init) {\n    _classCallCheck(this, NonFungibleTokenOfAccountOnNetwork);\n    this.identifier = \"\";\n    this.collection = \"\";\n    this.timestamp = 0;\n    this.attributes = Buffer.from([]);\n    this.nonce = 0;\n    this.type = \"\";\n    this.name = \"\";\n    this.creator = new primitives_1.Address(\"\");\n    this.supply = new bignumber_js_1.BigNumber(0);\n    this.decimals = 0;\n    this.royalties = new bignumber_js_1.BigNumber(0);\n    this.assets = [];\n    Object.assign(this, init);\n  }\n  _createClass(NonFungibleTokenOfAccountOnNetwork, null, [{\n    key: \"fromProxyHttpResponse\",\n    value: function fromProxyHttpResponse(payload) {\n      var result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n      result.identifier = payload.tokenIdentifier || \"\";\n      result.collection = NonFungibleTokenOfAccountOnNetwork.parseCollectionFromIdentifier(result.identifier);\n      result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n      return result;\n    }\n  }, {\n    key: \"fromProxyHttpResponseByNonce\",\n    value: function fromProxyHttpResponseByNonce(payload) {\n      var result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n      var nonceAsHex = new primitives_1.Nonce(result.nonce).hex();\n      result.identifier = \"\".concat(payload.tokenIdentifier, \"-\").concat(nonceAsHex);\n      result.collection = payload.tokenIdentifier || \"\";\n      result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n      return result;\n    }\n  }, {\n    key: \"fromApiHttpResponse\",\n    value: function fromApiHttpResponse(payload) {\n      var result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n      result.identifier = payload.identifier || \"\";\n      result.collection = payload.collection || \"\";\n      return result;\n    }\n    // TODO: Compare results from Proxy and API and try to reconciliate them.\n  }, {\n    key: \"fromHttpResponse\",\n    value: function fromHttpResponse(payload) {\n      var result = new NonFungibleTokenOfAccountOnNetwork();\n      result.timestamp = Number(payload.timestamp || 0);\n      result.attributes = Buffer.from(payload.attributes || \"\", \"base64\");\n      result.nonce = payload.nonce || 0;\n      result.type = payload.type || \"\";\n      result.name = payload.name || \"\";\n      result.creator = new primitives_1.Address(payload.creator || \"\");\n      result.decimals = Number(payload.decimals || 0);\n      result.supply = new bignumber_js_1.BigNumber(payload.balance || 1);\n      result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0);\n      result.assets = payload.assets || [];\n      return result;\n    }\n  }, {\n    key: \"parseCollectionFromIdentifier\",\n    value: function parseCollectionFromIdentifier(identifier) {\n      var parts = identifier.split(\"-\");\n      var collection = parts.slice(0, 2).join(\"-\");\n      return collection;\n    }\n  }]);\n  return NonFungibleTokenOfAccountOnNetwork;\n}();\nexports.NonFungibleTokenOfAccountOnNetwork = NonFungibleTokenOfAccountOnNetwork;","map":{"version":3,"sources":["../src/tokens.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NonFungibleTokenOfAccountOnNetwork = exports.FungibleTokenOfAccountOnNetwork = void 0;\nconst bignumber_js_1 = require(\"bignumber.js\");\nconst primitives_1 = require(\"./primitives\");\nclass FungibleTokenOfAccountOnNetwork {\n    constructor() {\n        this.identifier = \"\";\n        this.balance = new bignumber_js_1.BigNumber(0);\n    }\n    static fromHttpResponse(payload) {\n        let result = new FungibleTokenOfAccountOnNetwork();\n        result.identifier = payload.tokenIdentifier || payload.identifier || \"\";\n        result.balance = new bignumber_js_1.BigNumber(payload.balance || 0);\n        return result;\n    }\n}\nexports.FungibleTokenOfAccountOnNetwork = FungibleTokenOfAccountOnNetwork;\nclass NonFungibleTokenOfAccountOnNetwork {\n    constructor(init) {\n        this.identifier = \"\";\n        this.collection = \"\";\n        this.timestamp = 0;\n        this.attributes = Buffer.from([]);\n        this.nonce = 0;\n        this.type = \"\";\n        this.name = \"\";\n        this.creator = new primitives_1.Address(\"\");\n        this.supply = new bignumber_js_1.BigNumber(0);\n        this.decimals = 0;\n        this.royalties = new bignumber_js_1.BigNumber(0);\n        this.assets = [];\n        Object.assign(this, init);\n    }\n    static fromProxyHttpResponse(payload) {\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n        result.identifier = payload.tokenIdentifier || \"\";\n        result.collection = NonFungibleTokenOfAccountOnNetwork.parseCollectionFromIdentifier(result.identifier);\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n        return result;\n    }\n    static fromProxyHttpResponseByNonce(payload) {\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n        let nonceAsHex = new primitives_1.Nonce(result.nonce).hex();\n        result.identifier = `${payload.tokenIdentifier}-${nonceAsHex}`;\n        result.collection = payload.tokenIdentifier || \"\";\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n        return result;\n    }\n    static fromApiHttpResponse(payload) {\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n        result.identifier = payload.identifier || \"\";\n        result.collection = payload.collection || \"\";\n        return result;\n    }\n    // TODO: Compare results from Proxy and API and try to reconciliate them.\n    static fromHttpResponse(payload) {\n        let result = new NonFungibleTokenOfAccountOnNetwork();\n        result.timestamp = Number(payload.timestamp || 0);\n        result.attributes = Buffer.from(payload.attributes || \"\", \"base64\");\n        result.nonce = payload.nonce || 0;\n        result.type = payload.type || \"\";\n        result.name = payload.name || \"\";\n        result.creator = new primitives_1.Address(payload.creator || \"\");\n        result.decimals = Number(payload.decimals || 0);\n        result.supply = new bignumber_js_1.BigNumber(payload.balance || 1);\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0);\n        result.assets = payload.assets || [];\n        return result;\n    }\n    static parseCollectionFromIdentifier(identifier) {\n        let parts = identifier.split(\"-\");\n        let collection = parts.slice(0, 2).join(\"-\");\n        return collection;\n    }\n}\nexports.NonFungibleTokenOfAccountOnNetwork = NonFungibleTokenOfAccountOnNetwork;\n//# sourceMappingURL=tokens.js.map"]},"metadata":{},"sourceType":"script"}