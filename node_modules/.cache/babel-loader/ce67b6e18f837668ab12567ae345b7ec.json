{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\nvar constants_1 = require(\"./constants\");\nfunction getDefaultLoggerOptions(opts) {\n  return Object.assign(Object.assign({}, opts), {\n    level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level\n  });\n}\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\nfunction getBrowserLoggerContext(logger) {\n  var customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  return logger[customContextKey] || \"\";\n}\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\nfunction setBrowserLoggerContext(logger, context) {\n  var customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  logger[customContextKey] = context;\n  return logger;\n}\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\nfunction getLoggerContext(logger) {\n  var customContextKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  var context = \"\";\n  if (typeof logger.bindings === \"undefined\") {\n    context = getBrowserLoggerContext(logger, customContextKey);\n  } else {\n    context = logger.bindings().context || \"\";\n  }\n  return context;\n}\nexports.getLoggerContext = getLoggerContext;\nfunction formatChildLoggerContext(logger, childContext) {\n  var customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  var parentContext = getLoggerContext(logger, customContextKey);\n  var context = parentContext.trim() ? \"\".concat(parentContext, \"/\").concat(childContext) : childContext;\n  return context;\n}\nexports.formatChildLoggerContext = formatChildLoggerContext;\nfunction generateChildLogger(logger, childContext) {\n  var customContextKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : constants_1.PINO_CUSTOM_CONTEXT_KEY;\n  var context = formatChildLoggerContext(logger, childContext, customContextKey);\n  var child = logger.child({\n    context: context\n  });\n  return setBrowserLoggerContext(child, context, customContextKey);\n}\nexports.generateChildLogger = generateChildLogger;","map":null,"metadata":{},"sourceType":"script"}